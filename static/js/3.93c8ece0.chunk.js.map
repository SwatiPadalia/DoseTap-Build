{"version":3,"sources":["resources/serverReq/admin/dashboard.js","routes/dashboard/TodayTrendsComponent.js","routes/dashboard/DashboardComponent.js","routes/dashboard/index.js"],"names":["a","axios","get","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","useStyles","createUseStyles","theme","container","backgroundColor","border","color","lightGrayishBlue2","borderRadius","cursor","graphContainer","marginTop","marginLeft","marginRight","width","graphSection","padding","graphSubtitle","typography","smallSubtitle","grayishBlue2","graphTitle","cardTitle","veryDarkGrayishBlue","legendTitle","fontWeight","separator","minWidth","statContainer","borderBottom","height","stats","borderTop","statTitle","fontSize","lineHeight","letterSpacing","textAlign","whiteSpace","marginBottom","statValue","title","TodayTrendsComponent","avg_adherence_open","avg_adherence_missed","active_users","timeline_data","console","log","useTheme","classes","data","labels","datasets","label","borderColor","darkGrayishBlue","renderStat","value","flexGrow","className","vertical","horizontal","breakpoints","1024","wrap","flexBasis","display","cardsContainer","cardRow","miniCardContainer","maxWidth","todayTrends","lastRow","unresolvedTickets","tasks","DashboardComponent","useState","isLoading","setIsLoading","setData","useEffect","getAdminDashboard","then","response","code","res","catch","err","768","384","MiniCardComponent","user","doctor","caretaker","company","device"],"mappings":"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","file":"static/js/3.93c8ece0.chunk.js","sourcesContent":["import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAdminDashboard() {\r\n    return await axios.get(`/admin/dashboard`);\r\n}","import {\r\n    CategoryScale, Chart as ChartJS, Legend, LinearScale, LineElement, PointElement, Title,\r\n    Tooltip\r\n} from 'chart.js';\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { Column, Row } from 'simple-flexbox';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        }\r\n    },\r\n};\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer'\r\n    },\r\n    graphContainer: {\r\n        marginTop: 24,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        width: '100%'\r\n    },\r\n    graphSection: {\r\n        padding: 24\r\n    },\r\n    graphSubtitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginTop: 4,\r\n        marginRight: 8\r\n    },\r\n    graphTitle: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.veryDarkGrayishBlue\r\n    },\r\n    legendTitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        fontWeight: '600',\r\n        color: theme.color.grayishBlue2,\r\n        marginLeft: 8\r\n    },\r\n    separator: {\r\n        backgroundColor: theme.color.lightGrayishBlue2,\r\n        width: 1,\r\n        minWidth: 1\r\n    },\r\n    statContainer: {\r\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        padding: '24px 32px 24px 32px',\r\n        height: 'calc(114px - 48px)',\r\n        '&:last-child': {\r\n            border: 'none'\r\n        }\r\n    },\r\n    stats: {\r\n        borderTop: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        width: '100%'\r\n    },\r\n    statTitle: {\r\n        fontWeight: '600',\r\n        fontSize: 16,\r\n        lineHeight: '22px',\r\n        letterSpacing: '0.3px',\r\n        textAlign: 'center',\r\n        color: theme.color.grayishBlue2,\r\n        whiteSpace: 'nowrap',\r\n        marginBottom: 6\r\n    },\r\n    statValue: {\r\n        ...theme.typography.title,\r\n        textAlign: 'center',\r\n        color: theme.color.veryDarkGrayishBlue\r\n    }\r\n}));\r\n\r\nfunction TodayTrendsComponent({ avg_adherence_open, avg_adherence_missed, active_users, timeline_data }) {\r\n    console.log(\"ðŸš€ ~ file: TodayTrendsComponent.js ~ line 80 ~ TodayTrendsComponent ~ timeline_data\", timeline_data)\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n\r\n    const labels = timeline_data.labels;\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Adherence %',\r\n                data: timeline_data.data,\r\n                borderColor: theme.color.darkGrayishBlue,\r\n                backgroundColor: theme.color.darkGrayishBlue,\r\n            }\r\n        ],\r\n    };\r\n\r\n\r\n    function renderLegend(color, title) {\r\n        return (\r\n            <Row vertical='center'>\r\n                <div style={{ width: 16, border: '2px solid', borderColor: color }}></div>\r\n                <span className={classes.legendTitle}>{title}</span>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    function renderStat(title, value) {\r\n        return (\r\n            <Column\r\n                flexGrow={1}\r\n                className={classes.statContainer}\r\n                vertical='center'\r\n                horizontal='center'\r\n            >\r\n                <span className={classes.statTitle}>{title}</span>\r\n                <span className={classes.statValue}>{value}</span>\r\n            </Column>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Row\r\n            flexGrow={1}\r\n            className={classes.container}\r\n            horizontal='center'\r\n            breakpoints={{ 1024: 'column' }}\r\n        >\r\n            <Column\r\n                wrap\r\n                flexGrow={7}\r\n                flexBasis='735px'\r\n                className={classes.graphSection}\r\n                breakpoints={{ 1024: { width: 'calc(100% - 48px)', flexBasis: 'auto' } }}\r\n            >\r\n                <Row wrap horizontal='space-between'>\r\n                    <Column>\r\n                        <span className={classes.graphTitle}>Adherence Trend</span>\r\n                        <span className={classes.graphSubtitle}>Last 7 days</span>\r\n                    </Column>\r\n                </Row>\r\n                <div className={classes.graphContainer}>\r\n                    <Line options={options} data={data} />\r\n                </div>\r\n            </Column>\r\n            <Column className={classes.separator} breakpoints={{ 1024: { display: 'none' } }}>\r\n                <div />\r\n            </Column>\r\n            <Column flexGrow={3} flexBasis='342px' breakpoints={{ 1024: classes.stats }}>\r\n                {renderStat('Avg doses taken', avg_adherence_open + \" %\")}\r\n                {renderStat('Avg doses missed', avg_adherence_missed + \"%\")}\r\n                {renderStat('Active Users', active_users)}\r\n            </Column>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default TodayTrendsComponent;\r\n","import MiniCardComponent from 'components/cards/MiniCardComponent';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { getAdminDashboard } from 'resources/serverReq/admin/dashboard';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport TodayTrendsComponent from './TodayTrendsComponent';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nfunction DashboardComponent() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [data, setData] = useState({\r\n        'caretaker': 0,\r\n        'company': 0,\r\n        'company_user': 0,\r\n        'user': 0,\r\n        'doctor': 0,\r\n        'avg_adherence_missed': 0,\r\n        'avg_adherence_open': 0,\r\n        'active_users': 0,\r\n        'timeline_data': []\r\n    })\r\n    useEffect(() => {\r\n        getAdminDashboard().then((response) => {\r\n            console.log(\"ðŸš€ ~ file: DashboardComponent.js ~ line 61 ~ getAdminDashboard ~ response\", response)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data\r\n                console.log(\"ðŸš€ ~ file: DashboardComponent.js ~ line 53 ~ getAdminDashboard ~ res\", res)\r\n                setData(res.data)\r\n                setIsLoading(false)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"ðŸš€ ~ file: DashboardComponent.js ~ line 67 ~ getAdminDashboard ~ err\", err)\r\n            setIsLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        !isLoading && <Column>\r\n            <Row\r\n                className={classes.cardsContainer}\r\n                wrap\r\n                flexGrow={1}\r\n                horizontal='space-between'\r\n                breakpoints={{ 768: 'column' }}\r\n            >\r\n                <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                >\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Patients'\r\n                        value={data.user}\r\n                    />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Doctors'\r\n                        value={data.doctor}\r\n                    />\r\n                </Row>\r\n                <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                >\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Caregiver'\r\n                        value={data.caretaker}\r\n                    />\r\n\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Company'\r\n                        value={data.company}\r\n                    />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Devices'\r\n                        value={data.device}\r\n                    />\r\n                </Row>\r\n            </Row>\r\n            <div className={classes.todayTrends}>\r\n                <TodayTrendsComponent avg_adherence_open={data.avg_adherence_open} avg_adherence_missed={data.avg_adherence_missed} active_users={data.active_users} timeline_data={data.timeline_data} />\r\n            </div>\r\n            {/* <Row\r\n                horizontal='space-between'\r\n                className={classes.lastRow}\r\n                breakpoints={{ 1024: 'column' }}\r\n            >\r\n                <UnresolvedTicketsComponent containerStyles={classes.unresolvedTickets} />\r\n                <TasksComponent containerStyles={classes.tasks} />\r\n            </Row> */}\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import DashboardComponent from './DashboardComponent';\r\n\r\nexport default DashboardComponent;\r\n"],"sourceRoot":""}