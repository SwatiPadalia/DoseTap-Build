{"version":3,"sources":["resources/slugs.js","components/cards/MiniCardComponent.js","resources/theme.js","context/Provider.js","assets/icons/block.js","assets/icons/document.js","assets/icons/edit.js","assets/icons/icon-agents.js","assets/icons/icon-arrow-up.js","assets/icons/icon-articles.js","assets/icons/icon-bell-new.js","assets/icons/icon-contacts.js","assets/icons/icon-ideas.js","assets/icons/icon-logout.js","assets/icons/icon-overview.js","assets/icons/icon-subscription.js","assets/icons/schedule.js","components/dropdown/DropdownComponent.js","components/dropdown/index.js","hooks/useSidebar.js","components/header/HeaderComponent.js","resources/utilities.js","components/sidebar/LogoComponent.js","components/sidebar/MenuComponent.js","components/collapsible/CollapsibleContent.js","components/sidebar/MenuItemComponent.js","components/sidebar/SidebarComponent.js","components/sidebar/CompanySidebarComponent.js","components/sidebar/DoctorSidebarComponent.js","components/sidebar/SidebarContext.js","components/table/Loader.js","resources/serverReq/admin/company.js","resources/serverReq/common.js","resources/serverReq/admin/adherence.js","components/admin/adherence/Adherence.js","components/table/FormBtns.js","components/table/TableColumn.js","components/table/TableHeader.js","components/table/TableLastChild.js","components/table/Pagination.js","components/admin/adherence/MedicineAdherence.js","components/admin/adherence/MedicineAdherenceDetails.js","resources/serverReq/admin/user.js","components/admin/caretaker/AddCareTaker.js","components/admin/SelectInput.js","components/admin/caretaker/CareTaker.js","components/admin/caretaker/CareTakerUserMapping.js","components/admin/caretaker/CareTakerView.js","components/admin/caretaker/EditCareTaker.js","components/admin/company/AddCompany.js","components/admin/company/Company.js","components/table/ViewBtn.js","components/admin/company/companyUser/CompanyUsers.js","components/admin/company/companyUser/CreateUser.js","components/admin/company/companyUser/EditCompanyUser.js","components/admin/company/companyUser/ViewCompanyUser.js","components/admin/company/EditCompany.js","components/admin/Contact.js","resources/serverReq/admin/device.js","components/admin/device/AddDevice.js","components/admin/device/AllMappedCompany.js","components/admin/device/AllMappedUsers.js","components/admin/device/BulkAddDevice.js","components/admin/device/Device.js","components/admin/device/EditDevice.js","components/admin/device/MapDevice.js","components/admin/doctor/AddDoctor.js","components/admin/doctor/Doctor.js","components/admin/doctor/DoctorPatient.js","components/admin/doctor/EditDoctor.js","resources/serverReq/admin/feed.js","components/admin/feed/CreateFeed.js","components/admin/feed/EditFeed.js","components/admin/feed/Feeds.js","components/admin/feed/ViewFeed.js","resources/serverReq/admin/firmware.js","components/admin/firmware/CreateFirmware.js","components/admin/firmware/EditFirmware.js","components/admin/firmware/Firmwares.js","components/admin/firmware/ViewFirmware.js","resources/serverReq/admin/medicine.js","components/admin/medicine/AddMedicine.js","components/admin/medicine/EditMedicine.js","components/admin/medicine/Medicine.js","components/admin/medicine/ViewMedicine.js","components/admin/patient/AddPatient.js","components/admin/patient/EditPatient.js","components/admin/patient/Patient.js","components/admin/patient/PatientRow.jsx","components/admin/patient/PatientView.js","components/admin/patient/SchedulePatient.js","resources/serverReq/admin/reference-code.js","components/admin/reference-code/AddReferenceCode.js","components/admin/reference-code/ReferenceCode.js","resources/serverReq/admin/slot.js","components/admin/slot/AddSlot.js","components/admin/slot/EditSlot.js","components/admin/slot/Slot.js","components/admin/slot/ViewSlot.js","components/auth/ChangePassword.js","resources/serverReq/company/adherence.js","components/company/adherence/CompanyAdherence.js","components/company/adherence/MedicineCompAdherence.js","components/company/adherence/MedicineCompAdherenceDetails.js","resources/serverReq/company/dashboard.js","components/company/dashboard/TodayTrendsComponent.js","components/company/dashboard/CompanyDashboardComponent.js","components/company/dashboard/index.js","resources/serverReq/company/user.js","components/company/doctors/CompDoctor.js","components/company/doctors/CompDoctorPatient.js","components/company/patient/CompPatient.js","components/company/user/CompUsers.js","resources/serverReq/doctor/adherence.js","components/doctors/adherence/DoctorAdherence.js","components/doctors/adherence/MedicineDocAdherence.js","components/doctors/adherence/MedicineDocAdherenceDetails.js","resources/serverReq/doctor/user.js","components/doctors/caregiver/DocCaregiver.js","components/doctors/caregiver/DocCareTakerUserMapping.js","components/doctors/caregiver/ViewDocCaregiver.js","resources/serverReq/doctor/dashboard.js","components/doctors/dashboard/TodayTrendsComponent.js","components/doctors/dashboard/DoctorDashboardComponent.js","components/doctors/dashboard/index.js","components/doctors/patient/DocPatient.js","resources/serverReq/doctor/dose.js","components/doctors/patient/DocPatientDose.js","components/loading/LoadingComponent.js","components/loading/index.js","components/UpdateProfile.js","routes/PrivateRoutes.js","routes/PrivateSection.js","resources/serverReq/admin/auth.js","components/auth/Login.js","components/auth/ForgotPassword.js","components/auth/ResetPassword.js","routes/PublicRoutes.js","routes/index.js","hooks/useWindowSize.js","serviceWorker.js","index.js","resources/serverReq/axios.js"],"names":["dashboard","overview","overviewTwo","overviewThree","company","medicine","contact","device","patient","addPatient","editPatient","schedulePatient","ideas","ideasThree","contacts","agents","articles","settings","subscription","addDevice","addBulkDevice","editDevice","addMedicine","editMedicine","slot","addSlot","editSlot","viewSlot","viewMedicine","doctor","addDoctor","editDoctor","viewDoctor","viewPatientDoctor","useStyles","createUseStyles","theme","container","backgroundColor","border","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","MiniCardComponent","className","useTheme","classes","composedClassName","join","flexGrow","horizontal","vertical","brightBlue","darkGrayishBlue","darkRed","grayishBlue","grayishBlue3","lightGrayishBlue","paleBlue","paleBlueTransparent","smallSubtitle","link","textDecoration","itemTitle","userContext","createContext","Provider","children","useState","user","setUser","props","width","height","viewBox","fill","xmlns","clipPath","d","id","transform","fillRule","clipRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","opacity","fillOpacity","cx","cy","r","arrowContainer","position","top","right","dropdownButton","alignItems","background","display","outline","dropdownContainer","dropdownItemsContainer","bottom","left","dropdownItem","content","DropdownComponent","label","options","userMenuOpen","setUserMenuOpen","style","zIndex","onClick","prev","map","option","index","key","onItemClick","defaultProps","SidebarContext","SidebarProvider","defaultItem","currentItem","setCurrentItem","useEffect","avatar","marginLeft","name","separator","borderLeft","marginRight","iconStyles","HeaderComponent","push","useHistory","useContext","localStorage","getItem","firstName","setFirstName","lastName","setLastName","a","clear","SLUGS","login","console","log","window","addEventListener","mappedCompany","mappedUser","includes","viewPatient","caretaker","caretakerMapping","slugs","viewCareTaker","getCompanyUser","viewCompanyUser","feeds","viewFeed","viewAdherence","viewMedicineAdherence","viewCompanyAdherence","viewCompMedicineAdherence","compPatient","compDoctor","compUsers","compDashboard","compViewPatient","doctorDashboard","viewDoctorAdherence","viewDocMedicineAdherence","docPatient","docViewPatient","docCaregiver","viewDocCaregiver","docCareTakerMapping","updateProfile","changePassword","viewMedicineAdherenceDetails","src","alt","convertSlugToUrl","slug","parameters","url","Object","entries","forEach","replace","LogoComponent","MenuComponent","isMobile","menuStyles","bmBurgerButton","bmBurgerBars","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","bmItem","bmMorphShape","bmOverlay","getMenuStyles","isOpen","setIsOpen","noOverlay","disableCloseOnEsc","styles","onStateChange","state","STATUS","CollapsibleContent","transitionStyles","expanded","transitionDuration","transitionTimingFunction","onTransitionStart","onTransitionEnd","others","contentContainerRef","useRef","status","setStatus","scrollHeight","useScrollHeight","maxHeight","setTimeout","overflow","transitionProperty","ref","activeContainer","paddingLeft","level","transition","leftBar","isActive","MenuItemComponent","Icon","icon","items","isCollapsible","length","item","isExpanded","setIsExpanded","useSidebar","classNameColumn","classNameContainer","iconColor","onItemClicked","e","child","type","borderTop","marginTop","SidebarComponent","innerWidth","paddingTop","paddingBottom","IconSubscription","IconArticles","IconAgents","IconContacts","companyUser","IconIdeas","referenceCode","IconOverview","IconBell","firmware","IconArrowUp","IconLogout","CompanySidebarComponent","DoctorSidebarComponent","pathname","useLocation","Loader","role","data","axios","post","put","getAllCompany","params","get","getStates","getMedicineAdherenceDetails","cardsContainer","cardRow","miniCardContainer","todayTrends","lastRow","unresolvedTickets","tasks","Adherence","setState","age","setAge","gender","setGender","adherence","setAdherence","isLoading","setIsLoading","stateOptions","setStateOptions","companyOptions","setCompanyOptions","now","Date","String","getDate","padStart","date","getMonth","month","startDate","setStartDate","endDate","setEndDate","getFullYear","year","companyId","setCompanyId","defaultDate","setDefaultDate","then","companies","rows","val","catch","err","states","getAdminAdherence","to","from","company_id","response","code","res","placeholder","onChange","event","preventDefault","target","el","margin","locale","show","disabled","allowPageClickToClose","defaultDates","onConfirm","start","trim","end","handleDateSelected","onClose","parseInt","bucket_100_80","bucket_80_50","bucket_50_30","bucket_30","avg_adherence","FormBtns","formik","cancelRoute","TableColumn","columns","i","TableHeader","btnTitle","route","setQuery","query","autoFocus","TableLastChild","editRoute","editData","block","blockId","BlockCondition","path","schedule","scheduleRoute","Pagination","setPage","pageData","breakLabel","nextLabel","onPageChange","newPage","incPage","selected","pageRangeDisplayed","pageCount","totalPage","previousLabel","renderOnZeroPageCount","activeLinkClassName","MedicineAdherence","medicineData","setMedicineData","page","setPageData","dataNotAvailable","setDataNotAvailable","getAdminMedicineAdherence","search","sort","medicines","count","currentPage","companyName","MedicineAdherenceDetails","location","split","totalPatients","totalOpen","totalMissed","toFixed","getAllUsers","updateUserInfo","blockUsers","addUserInfo","AddCareTaker","initialValues","email","dob","toISOString","slice","phone","city","reference_code","password","setLoading","userSchema","Yup","shape","min","max","required","disableLoading","getInputClasses","fieldName","touched","errors","useFormik","validationSchema","onSubmit","values","setSubmitting","toast","success","history","errorMessage","error","handleSubmit","getFieldProps","pattern","maxLength","isSubmitting","SelectInput","CareTaker","userData","setUserData","perPageRows","blockedUser","userLists","users","addCareTaker","moment","createdAt","format","CareTakerUserMapping","getAllCaretakerUserMapping","CareTakerView","EditCareTaker","userScheema","AddDevice","companySchema","addCompany","Company","companyData","setCompanyData","editCompany","isFalse","ViewBtn","CompanyUsers","setTotalPage","editCompanyUser","CreateUser","setcompanyData","EditCompanyUser","hidden","ViewCompanyUser","EditCompany","updateCompany","Contact","contactUsSchema","message","sendSupportMail","cols","bulkAddDevice","formData","headers","blockDeviceMappingStatus","description","serialNumber","firmwareVersion","deviceSchema","addDeviceInfo","closeOnClick","hideProgressBar","AllMappedCompany","getAllMappedCompanyDevices","deviceMappings","AllMappedUsers","queryPatient","setQueryPatient","queryDoctor","setQueryDoctor","queryCompany","setQueryCompany","queryDevice","setQueryDevice","searchDevice","searchPatient","searchDoctor","searchCompany","getAllMappedUserDevices","lastSync","utc","BulkAddDevice","csv","setCSV","loading","handleFileUpload","FormData","append","handleCancel","errorDetails","finally","accept","files","Device","deviceData","setDeviceData","blockDeviceMapping","deviceLists","device_mapping","getAllDevice","devices","mapDevice","EditDevice","MapDevice","device_id","setDoctorData","AddDoctor","Doctor","company_associated","DoctorPatient","useParams","getAllPatientsByDoctor","u","EditDoctor","createFeed","uploadMedia","editFeed","blockFeed","CreateFeed","fileNames","setFileNames","media","setMedia","mediaType","setMediaType","shortDescription","mediaFormData","for","onDrop","acceptedFiles","file","minSize","maxSize","getRootProps","getInputProps","fileName","EditFeed","payload","Feeds","feedsData","setFeedData","statusUpdateFeed","feedLists","feed","getAllFeeds","ViewFeed","href","editFirmware","blockFirmware","CreateFirmware","firmwareSchema","version","remark","createFirmware","fileUrl","EditFirmware","multiple","Firmwares","firmwareData","setFirmwareData","statusUpdateFirmware","firmwareList","getAllFirmwares","firmwares","viewFirmware","ViewFirmware","getAllMedicine","blockMedicine","AddMedicine","medicineSchema","EditMedicine","Medicine","setCreatedAt","refreshKey","setRefreshKey","banMedicine","medicineList","uploadMedicineCsv","current","oldKey","ViewMedicine","viewMedicineDetails","AddPatient","EditPatient","Patient","PatientRow","medicineAdherenceDetails","selectedMedicineId","setSelectedMedicineId","renderBoxEntries","openBox","missedBox","allEntries","groupedEntries","box","dateKey","openCount","missedCount","keys","inputDate","day","monthIndex","formatDate","inputTime","hours","minutes","formattedHours","period","formatTime","time","Fragment","medicineId","medicineName","PatientView","setMedicineDetails","setMedicineAdherenceDetails","getUserDoses","getUserMedicineAdherence","SchedulePatient","slotTiming","setSlotTimings","timingss","setTimingss","selectedMedicine","setSelectedMedicine","selectedDays","setSelectedDays","Morning","beforeMeals","afterMeals","none","quantities","Afternoon","Evening","Night","selectedOptions","setSelectedOptions","timings","quantity","DoseTimings","handleQuantityChange","timing","change","prevState","newOptions","checked","handleCheckboxChange","htmlFor","getUserSlotTimings","slots","handleTimeChange","newTime","timingToUpdate","find","startTime","endTime","formattedNewTime","formattedStartTime","formattedEndTime","isBetween","formattedTime","prevTimings","checkTime","findSlot","morning","1","2","count_morning","afternoon","3","4","count_afternoon","evening","5","6","count_evening","night","7","8","count_night","json","patient_id","medicine_id","slot_ids","days","scheduleDoseByAdmin","handleMedicineSelect","Sun","Mon","Tue","Wed","Thu","Fri","Sat","dayName","newSelectedDays","filter","handleDaySelection","renderDayCheckboxes","clearIcon","disableClock","renderInput","readOnly","renderTimings","setDoseTimeByAdmin","slot_id","user_id","AddReferenceCode","addReferenceCode","ReferenceCode","referenceCodeData","setReferenceCodeData","getAllReferenceCodes","referral_codes","order","displayName","displayType","AddSlot","addSlotData","EditSlot","Slot","slotData","setSlotData","getAllSlot","ViewSlot","viewSlotDetails","confirmPassword","old_password","itemValue","greyTitle","checkboxWrapper","ChangePasswordForm","form","boxShadow","forgotPassword","float","ChangePassword","ChangePasswordSchema","oneOf","resetForm","oldPassword","newPassword","CompanyAdherence","getCompanyAdherence","initialDates","MedicineCompAdherence","getCompanyMedicineAdherence","MedicineCompAdherenceDetails","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","responsive","plugins","legend","graphContainer","graphSection","graphSubtitle","graphTitle","legendTitle","statContainer","borderBottom","stats","statTitle","whiteSpace","statValue","TodayTrendsComponent","avg_adherence_open","avg_adherence_missed","active_users","timeline_data","labels","datasets","renderStat","breakpoints","1024","wrap","flexBasis","CompanyDashboardComponent","setData","getCompanyDashboard","768","384","company_user","CompDoctor","patients_count","CompDoctorPatient","substring","repeat","CompPatient","CompUsers","getAllCompanyUsers","DoctorAdherence","getDoctorAdherence","MedicineDocAdherence","getDoctorMedicineAdherence","MedicineDocAdherenceDetails","DocCaregiver","DocCareTakerUserMapping","ViewDocCaregiver","DoctorDashboardComponent","getDoctorDashboard","DocPatient","docPatientMedicine","DocPatientDose","getPatientsMedicine","noTransparency","minHeight","fullScreen","animationName","animationTimingFunction","animationDuration","animationIterationCount","loadingSpan","LoadingComponent","hideText","UpdateProfile","setInitialValues","getProfileDetails","enableReinitialize","setItem","dispatchEvent","Event","DashboardComponent","lazy","PrivateRoutes","fallback","exact","component","AddCompany","CompanyUser","editCareTaker","compViewMedicineAdherence","mainBlock","contentBlock","PrivateSection","Axios","create","baseURL","process","timeout","userLogin","token","interceptors","request","use","config","Promise","reject","loginForm","Login","LoginSchema","guard","forgotForm","ForgotPassword","forgotSchema","forgotPass","info","ResetPasswordForm","ResetPassword","match","ResetPasswordSchema","verifyResetToken","resetPassword","PublicRoutes","signup","render","Routes","size","setSize","useLayoutEffect","updateSize","innerHeight","removeEventListener","useWindowSize","scrollTo","isAuthorized","Boolean","hostname","ReactDOM","Theme","autoClose","newestOnTop","rtl","pauseOnFocusLoss","pauseOnHover","document","getElementById","navigator","serviceWorker","ready","registration","unregister","authorization","onLine"],"mappings":"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","file":"static/js/main.c97c94cb.chunk.js","sourcesContent":["export default {\r\n    // private admin\r\n    dashboard: '/dashboard',\r\n    overview: '/overview',\r\n    overviewTwo: '/overview/two',\r\n    overviewThree: '/overview/three',\r\n    company: '/company',\r\n    medicine: '/medicine',\r\n    contact: '/contact',\r\n    device: '/device',\r\n    patient: '/patient',\r\n    addPatient: '/add-patient',\r\n    editPatient: '/edit-patient',\r\n    schedulePatient: '/schedule-patient',\r\n    ideas: '/ideas',\r\n    ideasThree: '/ideas/three',\r\n    contacts: '/contacts',\r\n    agents: '/agents',\r\n    articles: '/articles',\r\n    settings: '/settings',\r\n    subscription: '/subscription',\r\n    addDevice: '/add-device',\r\n    addBulkDevice: '/add-bulk-device',\r\n    editDevice: '/edit-device',\r\n    addMedicine: '/add-medicine',\r\n    editMedicine: '/edit-medicine',\r\n    slot: '/slot',\r\n    addSlot: '/add-slot',\r\n    editSlot: '/edit-slot',\r\n    viewSlot: '/view-slot',\r\n    viewMedicine: '/view-medicine',\r\n    doctor: '/doctor',\r\n    addDoctor: '/add-doctor',\r\n    editDoctor: '/edit-doctor',\r\n    viewDoctor: '/view-doctor',\r\n    viewPatientDoctor: '/view-patient-doctor',\r\n    company: '/company',\r\n    addCompany: '/add-company',\r\n    editCompany: '/edit-company',\r\n    viewCompany: '/view-company',\r\n    companyUser: '/create-company-user',\r\n    mapDevice: '/map-device',\r\n    feeds: '/feeds',\r\n    createFeed: '/create-feed',\r\n    viewFeed: '/view-feed',\r\n    editFeed: '/edit-feed',\r\n    firmware: '/firmware',\r\n    createFirmware: '/create-firmware',\r\n    viewFirmware: '/view-firmware',\r\n    editFirmware: '/edit-firmware',\r\n    viewPatient: '/view-patient',\r\n    getCompanyUser: '/company-user',\r\n    viewCompanyUser: '/view-company-user',\r\n    mappedUser: '/mapped-users',\r\n    mappedCompany: '/mapped-company',\r\n    caretaker: '/care-taker',\r\n    addCareTaker: '/add-care-taker',\r\n    editCareTaker: '/edit-care-taker',\r\n    viewCareTaker: '/view-care-taker',\r\n    caretakerMapping: '/view-care-taker-mapping',\r\n    editCompanyUser: '/edit-company-user',\r\n    viewAdherence: '/view-adherence',\r\n    viewMedicineAdherence: '/view-medicine-adherence',\r\n    addReferenceCode: '/add-reference-code',\r\n    referenceCode: '/reference-codes',\r\n\r\n    // company private\r\n    compDashboard: '/company-dashboard',\r\n    viewCompanyAdherence: '/view-company-adherence',\r\n    viewCompMedicineAdherence: '/view-comp-medicine-adherence',\r\n    compPatient: '/company-patient',\r\n    compDoctor: '/company-doctor',\r\n    compUsers: '/company-users',\r\n    compViewPatient: '/view-company-patient',\r\n    compViewMedicineAdherence: '/company-view-medicine-adherence',\r\n\r\n    // doctor\r\n    doctorDashboard: '/doctor-dashboard',\r\n    viewDoctorAdherence: '/view-doctor-adherence',\r\n    viewDocMedicineAdherence: '/view-doctor-medicine-adherence',\r\n    docCaregiver: '/doctor-caregiver',\r\n    viewDocCaregiver: '/view-doctor-caregiver',\r\n    docViewPatient: '/view-doctor-patient',\r\n    docPatient: '/doctor-patient',\r\n    docCareTakerMapping: '/view-doctor-care-giver-mapping',\r\n    docPatientMedicine: '/view-doctor-patient-medicine',\r\n\r\n    // common\r\n\r\n    updateProfile: '/update-profile',\r\n    viewMedicineAdherenceDetails: '/medicine-adherence-details',\r\n\r\n    // auth\r\n    login: '/login',\r\n    signup: '/signup',\r\n    forgotPassword: '/forgot-password',\r\n    resetPassword: '/reset-password/:token',\r\n    changePassword: '/change-password'\r\n};\r\n","import React from 'react';\r\nimport { Column } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n        maxWidth: 350,\r\n        padding: '16px 32px 16px 32px',\r\n        '&:hover': {\r\n            borderColor: theme.color.lightBlue,\r\n            '&:nth-child(n) > span': {\r\n                color: theme.color.lightBlue\r\n            }\r\n        }\r\n    },\r\n    title: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginBottom: 12,\r\n        minWidth: 102,\r\n        textAlign: 'center'\r\n    },\r\n    value: {\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        fontWeight: 'bold',\r\n        fontSize: 40,\r\n        letterSpacing: '1px',\r\n        lineHeight: '50px',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nfunction MiniCardComponent({ className = '', title, value }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const composedClassName = [classes.container, className].join(' ');\r\n    return (\r\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\r\n            <span className={classes.title}>{title}</span>\r\n            <span className={classes.value}>{value}</span>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default MiniCardComponent;\r\n","const color = {\r\n    brightBlue: '#006FD8',\r\n    darkGrayishBlue: '#00D7D4',\r\n    darkRed: '#2a044a',\r\n    grayishBlue: '#d0efff',\r\n    grayishBlue2: '#9fa2b4',\r\n    grayishBlue3: '#bdc3c7',\r\n    lightBlue: '#006FD8',\r\n    lightGrayishBlue: '#F7F8FC', // background color\r\n    lightGrayishBlue2: '#DFE0EB',\r\n    paleBlue: '#00D7D4',\r\n    paleBlueTransparent: 'rgba(221, 226, 255, 0.08)',\r\n    veryDarkGrayishBlue: '#373a47',\r\n};\r\n\r\nconst typography = {\r\n    cardTitle: {\r\n        fontWeight: 'bold',\r\n        fontSize: 19,\r\n        lineHeight: '24px',\r\n        letterSpacing: '0.4px'\r\n    },\r\n    smallSubtitle: {\r\n        fontSize: 12,\r\n        lineHeight: '16px',\r\n        letterSpacing: '0.1px'\r\n    },\r\n    link: {\r\n        fontWeight: '600',\r\n        fontSize: 14,\r\n        lineHeight: '20px',\r\n        letterSpacing: '0.2px',\r\n        color: color.lightBlue,\r\n        textAlign: 'right',\r\n        cursor: 'pointer',\r\n        textDecoration: 'underline',\r\n        '&:hover': {\r\n            color: color.grayishBlue\r\n        }\r\n    },\r\n    itemTitle: {\r\n        fontWeight: 600,\r\n        fontSize: 14,\r\n        lineHeight: '20px',\r\n        letterSpacing: 0.2\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        fontSize: 24,\r\n        lineHeight: '30px',\r\n        letterSpacing: 0.3\r\n    }\r\n};\r\n\r\nexport default {\r\n    // https://www.colorhexa.com/A4A6B3\r\n    color,\r\n    typography\r\n};\r\n","import React, { createContext, useState } from 'react'\r\n\r\n\r\nexport const userContext = createContext(null)\r\n\r\nexport default function Provider({children}) {\r\n    const [user, setUser] = useState(null)\r\n    return (\r\n        <userContext.Provider\r\n            value={{\r\n                user, setUser\r\n            }}\r\n        >\r\n\r\n            {children}\r\n\r\n        </userContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g clipPath=\"url(#clip0_863:11453)\">\r\n            <path d=\"M12.9396 6.97373C12.9396 5.38059 12.3068 3.8527 11.1803 2.72619C10.0537 1.59967 8.52585 0.966797 6.93271 0.966797C5.33957 0.966797 3.81169 1.59967 2.68517 2.72619C1.55865 3.8527 0.925781 5.38059 0.925781 6.97373C0.925781 8.56686 1.55865 10.0947 2.68517 11.2213C3.81169 12.3478 5.33957 12.9807 6.93271 12.9807C8.52585 12.9807 10.0537 12.3478 11.1803 11.2213C12.3068 10.0947 12.9396 8.56686 12.9396 6.97373ZM11.7383 6.97373C11.7384 7.87302 11.4861 8.7543 11.0102 9.51735C10.5343 10.2804 9.85382 10.8946 9.04616 11.2901C8.2385 11.6856 7.33607 11.8466 6.44148 11.7546C5.5469 11.6627 4.69606 11.3216 3.98571 10.7701L10.7291 4.02673C11.361 4.84006 11.7383 5.86365 11.7383 6.97373ZM9.87971 3.17735L3.13633 9.92072C2.41758 8.99616 2.06119 7.84095 2.1341 6.67214C2.20701 5.50334 2.70421 4.40138 3.53228 3.5733C4.36036 2.74522 5.46232 2.24802 6.63113 2.17511C7.79993 2.1022 8.95514 2.4586 9.87971 3.17735Z\" fill=\"#F39D5C\" />\r\n        </g>\r\n        <defs>\r\n            <clipPath id=\"clip0_863:11453\">\r\n                <rect width=\"12.0139\" height=\"12.0139\" fill=\"white\" transform=\"translate(0.925781 0.966797)\" />\r\n            </clipPath>\r\n        </defs>\r\n    </svg>\r\n\r\n);\r\n","\r\nimport React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"14\" height=\"16\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.20667 0.333984H8.794C10.8533 0.333984 12 1.52065 12 3.55398V10.4407C12 12.5073 10.8533 13.6673 8.794 13.6673H3.20667C1.18 13.6673 0 12.5073 0 10.4407V3.55398C0 1.52065 1.18 0.333984 3.20667 0.333984ZM3.38678 3.44065V3.43399H5.37945C5.66678 3.43399 5.90011 3.66732 5.90011 3.95332C5.90011 4.24732 5.66678 4.48065 5.37945 4.48065H3.38678C3.09945 4.48065 2.86678 4.24732 2.86678 3.96065C2.86678 3.67399 3.09945 3.44065 3.38678 3.44065ZM3.38678 7.49399H8.61345C8.90011 7.49399 9.13345 7.26065 9.13345 6.97399C9.13345 6.68732 8.90011 6.45332 8.61345 6.45332H3.38678C3.09945 6.45332 2.86678 6.68732 2.86678 6.97399C2.86678 7.26065 3.09945 7.49399 3.38678 7.49399ZM3.38667 10.5407H8.61334C8.87934 10.514 9.08001 10.2867 9.08001 10.0207C9.08001 9.74732 8.87934 9.52065 8.61334 9.49398H3.38667C3.18667 9.47398 2.99334 9.56732 2.88667 9.74065C2.78001 9.90732 2.78001 10.1273 2.88667 10.3007C2.99334 10.4673 3.18667 10.5673 3.38667 10.5407Z\" fill=\"black\" />\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M7.66198 1.85938H5.16932C3.11932 1.85938 1.83398 3.31071 1.83398 5.36538V10.908C1.83398 12.9627 3.11332 14.414 5.16932 14.414H11.052C13.1087 14.414 14.388 12.9627 14.388 10.908V8.22271\" stroke=\"#6993FF\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.88639 7.27903L10.8684 2.29703C11.4891 1.67703 12.4951 1.67703 13.1157 2.29703L13.9271 3.10836C14.5477 3.72903 14.5477 4.7357 13.9271 5.3557L8.92106 10.3617C8.64972 10.633 8.28172 10.7857 7.89772 10.7857H5.40039L5.46306 8.2657C5.47239 7.89503 5.62372 7.5417 5.88639 7.27903Z\" stroke=\"#6993FF\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        <path d=\"M10.1113 3.06641L13.1553 6.11041\" stroke=\"#6993FF\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n    </svg>);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity={props.opacity || ''} d=\"M8 8C10.2094 8 12 6.20937 12 4C12 1.79063 10.2094 0 8 0C5.79063 0 4 1.79063 4 4C4 6.20937 5.79063 8 8 8ZM10.9937 9.01875L9.5 15L8.5 10.75L9.5 9H6.5L7.5 10.75L6.5 15L5.00625 9.01875C2.77812 9.125 1 10.9469 1 13.2V14.5C1 15.3281 1.67188 16 2.5 16H13.5C14.3281 16 15 15.3281 15 14.5V13.2C15 10.9469 13.2219 9.125 10.9937 9.01875Z\"\r\n            fill={props.fill || \"#9FA2B4\"}\r\n        />\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg\r\n        id={props.id}\r\n        width={props.height || '15'}\r\n        height={props.height || '15'}\r\n        viewBox='0 0 640 640'\r\n        fill='none'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n        <path\r\n            d='M319.99 640L21.87 640L170.92 320L319.99 32.21L469.07 320L618.13 640L618.13 640L319.99 640Z'\r\n            opacity='1'\r\n            fill='#dfe0eb'\r\n            fillOpacity='1'\r\n        />\r\n        <path\r\n            d='M469.07 478.15L544.52 640L335.64 640L93.64 640L170.92 478.15L319.99 158.15L469.07 478.15Z'\r\n            opacity='1'\r\n            fill='#ffffff'\r\n            fillOpacity='1'\r\n        />\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity={props.opacity || ''} d=\"M15 11.25V0.75C15 0.334375 14.6656 0 14.25 0H4C2.34375 0 1 1.34375 1 3V13C1 14.6562 2.34375 16 4 16H14.25C14.6656 16 15 15.6656 15 15.25V14.75C15 14.5156 14.8906 14.3031 14.7219 14.1656C14.5906 13.6844 14.5906 12.3125 14.7219 11.8313C14.8906 11.6969 15 11.4844 15 11.25ZM5 4.1875C5 4.08437 5.08437 4 5.1875 4H11.8125C11.9156 4 12 4.08437 12 4.1875V4.8125C12 4.91563 11.9156 5 11.8125 5H5.1875C5.08437 5 5 4.91563 5 4.8125V4.1875ZM5 6.1875C5 6.08437 5.08437 6 5.1875 6H11.8125C11.9156 6 12 6.08437 12 6.1875V6.8125C12 6.91563 11.9156 7 11.8125 7H5.1875C5.08437 7 5 6.91563 5 6.8125V6.1875ZM12.9187 14H4C3.44688 14 3 13.5531 3 13C3 12.45 3.45 12 4 12H12.9187C12.8594 12.5344 12.8594 13.4656 12.9187 14Z\"\r\n            fill={props.fill || \"#9FA2B4\"}\r\n        />\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"18\" height=\"19\" viewBox=\"0 0 18 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M7.99999 19C9.10374 19 9.99905 18.1047 9.99905 17H6.00093C6.00093 18.1047 6.89624 19 7.99999 19ZM14.7309 14.3216C14.1272 13.6728 12.9975 12.6969 12.9975 9.5C12.9975 7.07188 11.295 5.12812 8.99937 4.65125V4C8.99937 3.44781 8.55187 3 7.99999 3C7.44812 3 7.00062 3.44781 7.00062 4V4.65125C4.70499 5.12812 3.00249 7.07188 3.00249 9.5C3.00249 12.6969 1.8728 13.6728 1.26905 14.3216C1.08155 14.5231 0.998429 14.7641 0.999991 15C1.00343 15.5125 1.40562 16 2.00312 16H13.9969C14.5944 16 14.9969 15.5125 15 15C15.0016 14.7641 14.9184 14.5228 14.7309 14.3216Z\" fill=\"#C5C7CD\" />\r\n        <circle cx=\"13\" cy=\"5\" r=\"3.75\" fill=\"#3751FF\" stroke=\"#F7F8FC\" strokeWidth=\"1.5\" />\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity={props.opacity || ''} d=\"M2.4 7.2C3.2825 7.2 4 6.4825 4 5.6C4 4.7175 3.2825 4 2.4 4C1.5175 4 0.8 4.7175 0.8 5.6C0.8 6.4825 1.5175 7.2 2.4 7.2ZM13.6 7.2C14.4825 7.2 15.2 6.4825 15.2 5.6C15.2 4.7175 14.4825 4 13.6 4C12.7175 4 12 4.7175 12 5.6C12 6.4825 12.7175 7.2 13.6 7.2ZM14.4 8H12.8C12.36 8 11.9625 8.1775 11.6725 8.465C12.68 9.0175 13.395 10.015 13.55 11.2H15.2C15.6425 11.2 16 10.8425 16 10.4V9.6C16 8.7175 15.2825 8 14.4 8ZM8 8C9.5475 8 10.8 6.7475 10.8 5.2C10.8 3.6525 9.5475 2.4 8 2.4C6.4525 2.4 5.2 3.6525 5.2 5.2C5.2 6.7475 6.4525 8 8 8ZM9.92 8.8H9.7125C9.1925 9.05 8.615 9.2 8 9.2C7.385 9.2 6.81 9.05 6.2875 8.8H6.08C4.49 8.8 3.2 10.09 3.2 11.68V12.4C3.2 13.0625 3.7375 13.6 4.4 13.6H11.6C12.2625 13.6 12.8 13.0625 12.8 12.4V11.68C12.8 10.09 11.51 8.8 9.92 8.8ZM4.3275 8.465C4.0375 8.1775 3.64 8 3.2 8H1.6C0.7175 8 0 8.7175 0 9.6V10.4C0 10.8425 0.3575 11.2 0.8 11.2H2.4475C2.605 10.015 3.32 9.0175 4.3275 8.465Z\"\r\n            fill={props.fill || \"#9FA2B4\"}\r\n        />\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g clipPath=\"url(#clip0)\">\r\n            <path opacity={props.opacity || ''} d=\"M5.50187 14.1984C5.50219 14.395 5.56031 14.5875 5.66937 14.7512L6.20344 15.5541C6.29467 15.6913 6.41841 15.8039 6.56366 15.8817C6.7089 15.9596 6.87114 16.0003 7.03594 16.0003H8.96438C9.12917 16.0003 9.29141 15.9596 9.43665 15.8817C9.5819 15.8039 9.70564 15.6913 9.79688 15.5541L10.3309 14.7512C10.44 14.5875 10.4982 14.3952 10.4984 14.1984L10.4997 13H5.50031L5.50187 14.1984ZM2.5 5.5C2.5 6.88656 3.01406 8.15156 3.86125 9.11812C4.3775 9.70718 5.185 10.9378 5.49281 11.9759C5.49406 11.9841 5.495 11.9922 5.49625 12.0003H10.5037C10.505 11.9922 10.5059 11.9844 10.5072 11.9759C10.815 10.9378 11.6225 9.70718 12.1388 9.11812C12.9859 8.15156 13.5 6.88656 13.5 5.5C13.5 2.45656 11.0284 -0.00937887 7.98281 -3.87451e-06C4.795 0.00968363 2.5 2.59281 2.5 5.5ZM8 3C6.62156 3 5.5 4.12156 5.5 5.5C5.5 5.77625 5.27625 6 5 6C4.72375 6 4.5 5.77625 4.5 5.5C4.5 3.57 6.07 2 8 2C8.27625 2 8.5 2.22375 8.5 2.5C8.5 2.77625 8.27625 3 8 3Z\"\r\n                fill={props.fill || \"#9FA2B4\"} />\r\n            />\r\n        </g>\r\n        <defs>\r\n            <clipPath id=\"clip0\">\r\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\r\n            </clipPath>\r\n        </defs>\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 297 297\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path opacity={props.opacity || ''} d=\"M155,6.5c-30.147,0-58.95,9.335-83.294,26.995c-2.789,2.023-3.547,5.853-1.739,8.787L92.83,79.374\r\n\t\t\t\tc0.962,1.559,2.53,2.649,4.328,3.004c1.796,0.354,3.661-0.054,5.145-1.129c14.23-10.323,31.069-15.78,48.698-15.78\r\n\t\t\t\tc45.783,0,83.03,37.247,83.03,83.03c0,45.783-37.247,83.03-83.03,83.03c-17.629,0-34.468-5.456-48.698-15.78\r\n\t\t\t\tc-1.484-1.076-3.349-1.486-5.145-1.129c-1.798,0.355-3.366,1.444-4.328,3.004l-22.863,37.093\r\n\t\t\t\tc-1.808,2.934-1.05,6.763,1.739,8.787C96.05,281.165,124.853,290.5,155,290.5c78.299,0,142-63.701,142-142S233.299,6.5,155,6.5z\"\r\n            fill={props.fill || \"#9FA2B4\"}\r\n        />\r\n        <path opacity={props.opacity || ''} d=\"M90.401,201.757c1.147-2.142,1.021-4.74-0.326-6.76l-15.463-23.195h93.566c12.849,0,23.302-10.453,23.302-23.302\r\n            s-10.453-23.302-23.302-23.302H74.612l15.463-23.195c1.348-2.02,1.473-4.618,0.326-6.76c-1.146-2.141-3.377-3.478-5.806-3.478\r\n            H40.019c-2.201,0-4.258,1.1-5.479,2.933L1.106,144.847c-1.475,2.212-1.475,5.093,0,7.306l33.433,50.149\r\n            c1.221,1.832,3.278,2.933,5.479,2.933h44.577C87.025,205.235,89.256,203.898,90.401,201.757z\"\r\n            fill={props.fill || \"#9FA2B4\"}\r\n        />\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g clipPath=\"url(#clip0)\">\r\n            <path opacity={props.opacity || ''} d=\"M15.5232 8.94116H8.54412L13.1921 13.5891C13.3697 13.7667 13.6621 13.7812 13.8447 13.6091C14.9829 12.5367 15.7659 11.0912 15.9956 9.46616C16.035 9.18793 15.8041 8.94116 15.5232 8.94116V8.94116ZM15.0576 7.03528C14.8153 3.52176 12.0076 0.714119 8.49412 0.471767C8.22589 0.453237 8 0.679413 8 0.948236V7.5294H14.5815C14.8503 7.5294 15.0762 7.30352 15.0576 7.03528ZM6.58824 8.94116V1.96206C6.58824 1.68118 6.34147 1.45029 6.06353 1.48971C2.55853 1.985 -0.120585 5.04705 0.00412089 8.71675C0.132356 12.4856 3.37736 15.5761 7.14794 15.5288C8.6303 15.5103 10 15.0326 11.1262 14.2338C11.3585 14.0691 11.3738 13.727 11.1724 13.5256L6.58824 8.94116Z\"\r\n                fill={props.fill || \"#9FA2B4\"}\r\n            />\r\n        </g>\r\n        <defs>\r\n            <clipPath id=\"clip0\">\r\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\r\n            </clipPath>\r\n        </defs>\r\n    </svg>\r\n);","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g clipPath=\"url(#clip0)\">\r\n            <path opacity={props.opacity || ''} d=\"M5.035 11.3322C4.76344 11.0606 4.905 11.1372 4.25 10.9619C3.95281 10.8822 3.69156 10.7291 3.45531 10.5456L2.0375 14.0219C1.90031 14.3584 2.15656 14.7241 2.51969 14.7103L4.16625 14.6475L5.29875 15.8437C5.54875 16.1075 5.9875 16.0253 6.12469 15.6887L7.75125 11.7006C7.4125 11.8894 7.03656 12 6.64781 12C6.03844 12 5.46594 11.7628 5.035 11.3322ZM13.9625 14.0219L12.5447 10.5456C12.3084 10.7294 12.0472 10.8822 11.75 10.9619C11.0916 11.1381 11.2359 11.0612 10.965 11.3322C10.5341 11.7628 9.96125 12 9.35188 12C8.96313 12 8.58719 11.8891 8.24844 11.7006L9.875 15.6887C10.0122 16.0253 10.4513 16.1075 10.7009 15.8437L11.8338 14.6475L13.4803 14.7103C13.8434 14.7241 14.0997 14.3581 13.9625 14.0219ZM10.2188 10.625C10.6963 10.1391 10.7509 10.1809 11.4309 9.99562C11.865 9.87718 12.2044 9.53187 12.3206 9.08999C12.5544 8.20249 12.4938 8.30968 13.1316 7.66031C13.4494 7.33687 13.5734 6.8653 13.4572 6.42343C13.2238 5.53655 13.2234 5.66031 13.4572 4.77249C13.5734 4.33062 13.4494 3.85906 13.1316 3.53562C12.4938 2.88624 12.5544 2.99312 12.3206 2.10593C12.2044 1.66406 11.865 1.31874 11.4309 1.20031C10.5597 0.962493 10.6647 1.02468 10.0263 0.374993C9.70844 0.0515551 9.245 -0.0750074 8.81094 0.0434301C7.94 0.28093 8.06156 0.281243 7.18906 0.0434301C6.755 -0.0750074 6.29156 0.0512426 5.97375 0.374993C5.33594 1.02437 5.44094 0.962493 4.56938 1.20031C4.13531 1.31874 3.79594 1.66406 3.67969 2.10593C3.44625 2.99312 3.50656 2.88624 2.86875 3.53562C2.55094 3.85906 2.42656 4.33062 2.54313 4.77249C2.77656 5.65874 2.77688 5.53499 2.54313 6.42312C2.42688 6.86499 2.55094 7.33656 2.86875 7.66031C3.50656 8.30968 3.44594 8.20249 3.67969 9.08999C3.79594 9.53187 4.13531 9.87718 4.56938 9.99562C5.26875 10.1862 5.32094 10.1562 5.78125 10.625C6.19469 11.0459 6.83875 11.1212 7.33563 10.8069C7.53432 10.6807 7.76481 10.6137 8.00016 10.6137C8.23551 10.6137 8.466 10.6807 8.66469 10.8069C9.16125 11.1212 9.80531 11.0459 10.2188 10.625ZM5.05188 5.49874C5.05188 3.84156 6.37188 2.49812 8 2.49812C9.62813 2.49812 10.9481 3.84156 10.9481 5.49874C10.9481 7.15593 9.62813 8.49937 8 8.49937C6.37188 8.49937 5.05188 7.15593 5.05188 5.49874Z\"\r\n                fill={props.fill || \"#9FA2B4\"}\r\n            />\r\n        </g>\r\n        <defs>\r\n            <clipPath id=\"clip0\">\r\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\r\n            </clipPath>\r\n        </defs>\r\n    </svg>\r\n);\r\n","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\"  width=\"20\" height=\"20\" viewBox=\"0 0 22 22\"  ><path fillOpacity=\"1\" d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>\r\n);","import React, { useState } from 'react';\r\nimport { arrayOf, element, func, number, oneOfType, shape, string } from 'prop-types';\r\nimport { Column } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { IconArrowUp } from 'assets/icons';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    arrowContainer: {\r\n        position: 'absolute',\r\n        top: -19,\r\n        right: 15\r\n    },\r\n    dropdownButton: {\r\n        alignItems: 'center',\r\n        background: 'transparent',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        display: 'flex',\r\n        padding: 0,\r\n        outline: 'none'\r\n    },\r\n    dropdownContainer: {\r\n        position: 'relative'\r\n    },\r\n    dropdownItemsContainer: {\r\n        background: 'white',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 5,\r\n        minWidth: 170,\r\n        padding: 0,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        top: ({ position }) => position.top,\r\n        right: ({ position }) => position.right,\r\n        bottom: ({ position }) => position.bottom,\r\n        left: ({ position }) => position.left,\r\n        '& button:first-of-type:hover div > svg > path': {\r\n            fill: theme.color.paleBlue\r\n        }\r\n    },\r\n    dropdownItem: {\r\n        cursor: 'pointer',\r\n        background: 'transparent',\r\n        border: 'none',\r\n        fontSize: 16,\r\n        outline: 'none',\r\n        padding: '10px 10px',\r\n        '&:hover': {\r\n            background: theme.color.paleBlue\r\n        },\r\n        '&:after': {\r\n            content: '\" \"',\r\n            display: 'block',\r\n            position: 'relative',\r\n            bottom: -10,\r\n            width: '100%',\r\n            height: 1,\r\n            background: theme.color.paleBlue\r\n        },\r\n        '&:last-child:after': {\r\n            content: '',\r\n            display: 'none'\r\n        }\r\n    }\r\n}));\r\n\r\nfunction DropdownComponent({ label, options, position }) {\r\n    const [userMenuOpen, setUserMenuOpen] = useState(false);\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme, position });\r\n\r\n    function onDropdownClick() {\r\n        setUserMenuOpen((prev) => !prev);\r\n    }\r\n\r\n    function onItemClick(onClick) {\r\n        setUserMenuOpen(false);\r\n        onClick && onClick();\r\n    }\r\n\r\n    return (\r\n                           \r\n        <Column style={{zIndex:'999'}} className={classes.dropdownContainer}>\r\n            <button className={classes.dropdownButton} onClick={onDropdownClick}>\r\n                {label}\r\n            </button>\r\n            {userMenuOpen && (\r\n                <Column className={classes.dropdownItemsContainer}>\r\n                    {options.map((option, index) => (\r\n                        <button\r\n                            key={`option-${index}`}\r\n                            className={classes.dropdownItem}\r\n                            onClick={() => onItemClick(option.onClick)}\r\n                        >\r\n                            {option.label}\r\n                            {index === 0 && (\r\n                                <div className={classes.arrowContainer}>\r\n                                    <IconArrowUp />\r\n                                </div>\r\n                            )}\r\n                        </button>\r\n                    ))}\r\n                </Column>\r\n            )}\r\n        </Column>\r\n    );\r\n}\r\n\r\nDropdownComponent.propTypes = {\r\n    label: oneOfType([string, element]),\r\n    options: arrayOf(\r\n        shape({\r\n            label: oneOfType([string, arrayOf(element)]),\r\n            onClick: func\r\n        })\r\n    ),\r\n    position: shape({\r\n        top: number,\r\n        right: number,\r\n        bottom: number,\r\n        left: number\r\n    })\r\n};\r\n\r\nDropdownComponent.defaultProps = {\r\n    position: {\r\n        top: 52,\r\n        right: -6\r\n    }\r\n};\r\n\r\nexport default DropdownComponent;\r\n","import DropdownComponent from './DropdownComponent';\r\n\r\nexport default DropdownComponent;\r\n","import React, { useState, useEffect, useContext, createContext } from 'react';\r\n\r\nexport const SidebarContext = createContext();\r\n\r\nexport function SidebarProvider({ children, defaultItem }) {\r\n    const [currentItem, setCurrentItem] = useState(defaultItem);\r\n    useEffect(() => {\r\n        if (defaultItem !== currentItem) {\r\n            return setCurrentItem(defaultItem);\r\n        }\r\n    }, [currentItem, defaultItem]);\r\n    return (\r\n        <SidebarContext.Provider value={{ currentItem, setCurrentItem }}>\r\n            {children}\r\n        </SidebarContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useSidebar = ({ isCollapsible, item, items = [] } = {}) => {\r\n    const { currentItem, setCurrentItem } = useContext(SidebarContext);\r\n    const isActive = item === currentItem || items.includes(currentItem);\r\n    const [isExpanded, setIsExpanded] = useState(isActive);\r\n\r\n    useEffect(() => {\r\n        if (!isActive && isExpanded) {\r\n            return setIsExpanded(false);\r\n        }\r\n        if (isActive && !isExpanded) {\r\n            return setIsExpanded(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentItem]);\r\n\r\n    const onItemClick = () => {\r\n        if (!isCollapsible) {\r\n            setCurrentItem(item);\r\n        }\r\n        setIsExpanded((prev) => !prev);\r\n    };\r\n\r\n    return {\r\n        isExpanded,\r\n        isActive,\r\n        onItemClick\r\n    };\r\n};\r\n","import DropdownComponent from 'components/dropdown';\r\nimport { userContext } from 'context/Provider';\r\nimport { SidebarContext } from 'hooks/useSidebar';\r\nimport { string } from 'prop-types';\r\nimport React, { useContext, useState } from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { default as slugs, default as SLUGS } from 'resources/slugs';\r\nimport { Row } from 'simple-flexbox';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    avatar: {\r\n        height: 35,\r\n        width: 35,\r\n        minWidth: 35,\r\n        borderRadius: 50,\r\n        marginLeft: 14,\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        '@media (max-width: 768px)': {\r\n            marginLeft: 14\r\n        }\r\n    },\r\n    container: {\r\n        height: 40\r\n    },\r\n    name: {\r\n        ...theme.typography.itemTitle,\r\n        textAlign: 'right',\r\n        '@media (max-width: 768px)': {\r\n            display: 'none'\r\n        }\r\n    },\r\n    separator: {\r\n        borderLeft: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        marginLeft: 32,\r\n        marginRight: 32,\r\n        height: 32,\r\n        width: 2,\r\n        '@media (max-width: 768px)': {\r\n            marginLeft: 14,\r\n            marginRight: 0\r\n        }\r\n    },\r\n    title: {\r\n        ...theme.typography.title,\r\n        '@media (max-width: 1080px)': {\r\n            marginLeft: 50\r\n        },\r\n        '@media (max-width: 468px)': {\r\n            fontSize: 20\r\n        }\r\n    },\r\n    iconStyles: {\r\n        cursor: 'pointer',\r\n        marginLeft: 25,\r\n        '@media (max-width: 768px)': {\r\n            marginLeft: 12\r\n        }\r\n    }\r\n}));\r\n\r\nfunction HeaderComponent() {\r\n    const { push } = useHistory();\r\n    const { currentItem } = useContext(SidebarContext);\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const [firstName, setFirstName] = useState(localStorage.getItem('firstName'));\r\n    const [lastName, setLastName] = useState(localStorage.getItem('lastName'));\r\n    const { user, setUser } = useContext(userContext);\r\n    console.log('🚀 ~ file: HeaderComponent.js ~ line 71 ~ HeaderComponent ~ user', user);\r\n\r\n    window.addEventListener('storage', () => {\r\n        console.log('change to local storage!');\r\n        setFirstName(localStorage.getItem('firstName'));\r\n        setLastName(localStorage.getItem('lastName'));\r\n    });\r\n\r\n    async function logout() {\r\n        localStorage.clear();\r\n        setUser(null);\r\n        push(SLUGS.login);\r\n    }\r\n\r\n    let title;\r\n    switch (true) {\r\n        case currentItem === SLUGS.dashboard:\r\n            title = 'Dashboard';\r\n            break;\r\n        case [SLUGS.device, SLUGS.mappedCompany, SLUGS.mappedUser].includes(currentItem):\r\n            title = 'Device';\r\n            break;\r\n        case currentItem === SLUGS.patient:\r\n            title = 'Patients';\r\n            break;\r\n        case currentItem === SLUGS.viewPatient:\r\n            title = 'Patient Details';\r\n            break;\r\n        case [SLUGS.caretaker, SLUGS.caretakerMapping].includes(currentItem):\r\n            title = 'Caregiver';\r\n            break;\r\n        case currentItem == slugs.viewCareTaker:\r\n            title = 'Caregiver Details';\r\n            break;\r\n        case currentItem === SLUGS.company:\r\n            title = 'Company';\r\n            break;\r\n        case currentItem === SLUGS.getCompanyUser:\r\n            title = 'Company Users';\r\n            break;\r\n        case currentItem === SLUGS.viewCompanyUser:\r\n            title = 'Company User Details';\r\n            break;\r\n        case currentItem === SLUGS.doctor:\r\n            title = 'Doctor';\r\n            break;\r\n        case currentItem === SLUGS.medicine:\r\n            title = 'Medicine';\r\n            break;\r\n        case currentItem.includes(SLUGS.viewMedicine):\r\n            title = 'Medicine Details';\r\n            break;\r\n        case currentItem === SLUGS.slot:\r\n            title = 'Slot';\r\n            break;\r\n        case currentItem.includes(SLUGS.viewSlot):\r\n            title = 'Slot Details';\r\n            break;\r\n        case currentItem === SLUGS.contact:\r\n            title = 'Support';\r\n            break;\r\n        case currentItem === SLUGS.settings:\r\n            title = 'Settings';\r\n            break;\r\n        case currentItem === SLUGS.feeds:\r\n            title = 'Feeds';\r\n            break;\r\n        case currentItem === SLUGS.viewFeed:\r\n            title = 'Feed Details';\r\n            break;\r\n        case currentItem === SLUGS.viewAdherence:\r\n            title = 'Adherence Snapshot';\r\n            break;\r\n        case currentItem === SLUGS.viewMedicineAdherence:\r\n            title = 'Medicine Adherence';\r\n            break;\r\n        case currentItem.includes(SLUGS.viewPatientDoctor):\r\n            title = 'Patients enrolled under doctor';\r\n            break;\r\n        // company\r\n        case currentItem === SLUGS.viewCompanyAdherence:\r\n            title = 'Adherence Snapshot';\r\n            break;\r\n        case currentItem === SLUGS.viewCompMedicineAdherence:\r\n            title = 'Medicine Adherence';\r\n            break;\r\n        case currentItem === SLUGS.compPatient:\r\n            title = 'Patients';\r\n            break;\r\n        case currentItem === SLUGS.compDoctor:\r\n            title = 'Doctor Details';\r\n            break;\r\n        case currentItem === SLUGS.compUsers:\r\n            title = 'Company Users';\r\n            break;\r\n        case currentItem === SLUGS.compDashboard:\r\n            title = 'Dashboard';\r\n            break;\r\n        case currentItem === SLUGS.compViewPatient:\r\n            title = 'Patient Details';\r\n            break;\r\n        // Doctor\r\n        case currentItem === SLUGS.doctorDashboard:\r\n            title = 'Dashboard';\r\n            break;\r\n        case currentItem === SLUGS.viewDoctorAdherence:\r\n            title = 'Adherence Snapshot';\r\n            break;\r\n        case currentItem === SLUGS.viewDocMedicineAdherence:\r\n            title = 'Medicine Adherence';\r\n            break;\r\n        case currentItem === SLUGS.docPatient:\r\n            title = 'Patients';\r\n            break;\r\n        case currentItem === SLUGS.docViewPatient:\r\n            title = 'Patient Details';\r\n            break;\r\n        case currentItem === SLUGS.docCaregiver:\r\n            title = 'Caregiver data';\r\n            break;\r\n        case currentItem === SLUGS.viewDocCaregiver:\r\n            title = 'Caregiver details';\r\n            break;\r\n        case currentItem === SLUGS.docCareTakerMapping:\r\n            title = 'Caregiver associated with patients';\r\n            break;\r\n\r\n        // common\r\n        case currentItem === SLUGS.updateProfile:\r\n            title = 'Update Profile';\r\n            break;\r\n        case currentItem === SLUGS.changePassword:\r\n            title = 'Change Password';\r\n            break;\r\n        case currentItem.includes(SLUGS.viewMedicineAdherenceDetails):\r\n            title = 'Medicine Adherence: Snapshot';\r\n            break;\r\n\r\n        default:\r\n            title = '';\r\n    }\r\n\r\n    function onSettingsClick() {\r\n        push(SLUGS.settings);\r\n    }\r\n    function updateProfile() {\r\n        push(SLUGS.updateProfile);\r\n    }\r\n    function changePassword() {\r\n        push(SLUGS.changePassword);\r\n    }\r\n\r\n    return (\r\n        <Row className={classes.container} vertical='center' horizontal='space-between'>\r\n            <span className={classes.title}>{title}</span>\r\n            <Row vertical='center'>\r\n                {/* <div className={classes.iconStyles}>\r\n                    <IconSearch />\r\n                </div>\r\n                <div className={classes.iconStyles}>\r\n                    <DropdownComponent\r\n                        label={<IconBell />}\r\n                        options={[\r\n                            {\r\n                                label: 'Notification #1',\r\n                                onClick: () => console.log('Notification #1')\r\n                            },\r\n                            {\r\n                                label: 'Notification #2',\r\n                                onClick: () => console.log('Notification #2')\r\n                            },\r\n                            {\r\n                                label: 'Notification #3',\r\n                                onClick: () => console.log('Notification #3')\r\n                            },\r\n                            {\r\n                                label: 'Notification #4',\r\n                                onClick: () => console.log('Notification #4')\r\n                            }\r\n                        ]}\r\n                        position={{\r\n                            top: 42,\r\n                            right: -14\r\n                        }}\r\n                    />\r\n                </div> */}\r\n                {/* <div className={classes.separator}></div> */}\r\n                <DropdownComponent\r\n                    label={\r\n                        <>\r\n                            <span className={classes.name}>{firstName + ' ' + lastName}</span>\r\n                            <img\r\n                                src='https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?f=y'\r\n                                alt='avatar'\r\n                                className={classes.avatar}\r\n                            />\r\n                        </>\r\n                    }\r\n                    options={[\r\n                        // {\r\n                        //     label: 'Settings',\r\n                        //     onClick: onSettingsClick\r\n                        // },\r\n                        {\r\n                            label: 'Update Profile',\r\n                            onClick: updateProfile\r\n                        },\r\n                        {\r\n                            label: 'Change Password',\r\n                            onClick: changePassword\r\n                        },\r\n                        {\r\n                            label: 'Logout',\r\n                            onClick: logout\r\n                        }\r\n                    ]}\r\n                    position={{\r\n                        top: 52,\r\n                        right: -6\r\n                    }}\r\n                />\r\n            </Row>\r\n        </Row>\r\n    );\r\n}\r\n\r\nHeaderComponent.propTypes = {\r\n    title: string\r\n};\r\n\r\nexport default HeaderComponent;\r\n","export function convertSlugToUrl(slug, parameters) {\r\n    let url = slug;\r\n    Object.entries(parameters).forEach(([key, value]) => {\r\n        url = url.replace(`:${key}`, value);\r\n    });\r\n    return url;\r\n}\r\n","import React from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { Row } from 'simple-flexbox';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        marginLeft: 32,\r\n        marginRight: 32\r\n    },\r\n    title: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.grayishBlue,\r\n        opacity: 0.7,\r\n        marginLeft: 12\r\n    }\r\n}));\r\n\r\nfunction LogoComponent() {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    return (\r\n        <Row className={classes.container} horizontal='center' vertical='center'>\r\n            <div>\r\n                <img src=\"/assets/img/dose-logo-white.png\" style={{ height: '5rem', padding: '0.5rem' }} />\r\n            </div>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default LogoComponent;\r\n","import React, { useState } from 'react';\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport { useTheme } from 'react-jss';\r\n\r\nconst getMenuStyles = ({ theme }) => ({\r\n    bmBurgerButton: {\r\n        position: 'absolute',\r\n        width: 26,\r\n        height: 20,\r\n        left: 30,\r\n        top: 40,\r\n        zIndex: 19\r\n    },\r\n    bmBurgerBars: {\r\n        background: theme.color.veryDarkGrayishBlue\r\n    },\r\n    bmBurgerBarsHover: {\r\n        background: theme.color.darkRed\r\n    },\r\n    bmCrossButton: {\r\n        display: 'none'\r\n    },\r\n    bmCross: {\r\n        background: theme.color.grayishBlue3\r\n    },\r\n    bmMenuWrap: {\r\n        position: 'fixed',\r\n        height: '100%',\r\n        width: 255,\r\n        zIndex: 30\r\n    },\r\n    bmMenu: {\r\n        background: theme.color.brightBlue\r\n    },\r\n    bmItem: {\r\n        outline: 'none',\r\n        '&:focus': {\r\n            outline: 'none'\r\n        }\r\n    },\r\n    bmMorphShape: {\r\n        fill: theme.color.veryDarkGrayishBlue\r\n    },\r\n    bmOverlay: {\r\n        background: 'rgba(0, 0, 0, 0.3)',\r\n        zIndex: 20\r\n    }\r\n});\r\n\r\nfunction MenuComponent({ children, isMobile }) {\r\n    const theme = useTheme();\r\n    const menuStyles = getMenuStyles({ theme });\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <Menu\r\n            isOpen={!isMobile || isOpen}\r\n            noOverlay={!isMobile}\r\n            disableCloseOnEsc\r\n            styles={menuStyles}\r\n            onStateChange={(state) => setIsOpen(state.isOpen)}\r\n        >\r\n            {children}\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default MenuComponent;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useScrollHeight } from 'react-collapsible-content';\r\n\r\nconst STATUS = {\r\n    COLLAPSED: 'COLLAPSED',\r\n    PRE_EXPANDED: 'PRE_EXPANDED',\r\n    EXPANDED: 'EXPANDED',\r\n    PRE_COLLAPSED: 'PRE_COLLAPSED'\r\n};\r\n\r\nfunction CollapsibleContent({\r\n    children,\r\n    expanded,\r\n    style,\r\n    transitionDuration,\r\n    transitionTimingFunction,\r\n    onTransitionStart,\r\n    onTransitionEnd,\r\n    ...others\r\n}) {\r\n    const contentContainerRef = useRef(null);\r\n    const [status, setStatus] = useState(expanded ? STATUS.EXPANDED : STATUS.COLLAPSED);\r\n    const { scrollHeight } = useScrollHeight(contentContainerRef, {\r\n        onTransitionStart,\r\n        onTransitionEnd\r\n    });\r\n    let transitionStyles;\r\n    switch (status) {\r\n        case STATUS.EXPANDED:\r\n            transitionStyles = { maxHeight: '100vh', transitionDuration: '.001s' };\r\n            break;\r\n        case STATUS.PRE_COLLAPSED:\r\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\r\n            break;\r\n        case STATUS.PRE_EXPANDED:\r\n            transitionStyles = { maxHeight: scrollHeight };\r\n            break;\r\n        case STATUS.COLLAPSED:\r\n            transitionStyles = { maxHeight: 0 };\r\n            break;\r\n        default:\r\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (expanded) {\r\n            if (status === STATUS.COLLAPSED) {\r\n                setStatus(STATUS.PRE_EXPANDED);\r\n            } else if (status === STATUS.PRE_EXPANDED) {\r\n                setTimeout(() => setStatus(STATUS.EXPANDED), 800);\r\n            }\r\n        } else if (!expanded) {\r\n            if (status === STATUS.EXPANDED) {\r\n                setStatus(STATUS.PRE_COLLAPSED);\r\n            } else if (status === STATUS.PRE_COLLAPSED) {\r\n                setTimeout(() => setStatus(STATUS.COLLAPSED), 100);\r\n            }\r\n        }\r\n    }, [expanded, status]);\r\n\r\n    return (\r\n        <div\r\n            {...others}\r\n            style={{\r\n                overflow: 'hidden',\r\n                transitionProperty: 'max-height',\r\n                transitionTimingFunction,\r\n                transitionDuration,\r\n                ...transitionStyles,\r\n                ...style\r\n            }}\r\n            ref={contentContainerRef}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nCollapsibleContent.propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element])\r\n        .isRequired,\r\n    expanded: PropTypes.bool,\r\n    onTransitionStart: PropTypes.func,\r\n    onTransitionEnd: PropTypes.func,\r\n    style: PropTypes.object,\r\n    transitionDuration: PropTypes.string,\r\n    transitionTimingFunction: PropTypes.string\r\n};\r\n\r\nCollapsibleContent.defaultProps = {\r\n    transitionDuration: '.425s',\r\n    transitionTimingFunction: 'ease-in-out'\r\n};\r\n\r\nexport default CollapsibleContent;\r\n","import CollapsibleContent from 'components/collapsible/CollapsibleContent';\r\nimport { useSidebar } from 'hooks/useSidebar';\r\nimport { any, arrayOf, func, string } from 'prop-types';\r\nimport React from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { Column, Row } from 'simple-flexbox';\r\n\r\nconst useStyles = createUseStyles({\r\n    activeContainer: {\r\n        backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        height: 56,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\r\n        },\r\n        paddingLeft: ({ level }) => 32 * level,\r\n        transition: 'all 0.2s ease-in-out'\r\n    },\r\n    leftBar: {\r\n        borderLeft: ({ theme, level }) =>\r\n            level > 1 ? 'none' : `3px solid ${theme.color.darkGrayishBlue}`\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        lineHeight: '20px',\r\n        letterSpacing: '0.2px',\r\n        color: ({ theme, isActive }) => (isActive ? theme.color.paleBlue : theme.color.grayishBlue),\r\n        marginLeft: 24\r\n    }\r\n});\r\n\r\nfunction MenuItemComponent({ children, icon: Icon, id, items = [], level = 1, onClick, title }) {\r\n    const theme = useTheme();\r\n    const isCollapsible = children && children.length > 0;\r\n    const { isExpanded, isActive, onItemClick } = useSidebar({\r\n        isCollapsible,\r\n        item: id,\r\n        items\r\n    });\r\n    const classes = useStyles({ theme, level, isActive });\r\n    const classNameColumn = isActive ? classes.leftBar : '';\r\n    const classNameContainer = [classes.container, isActive && classes.activeContainer].join(' ');\r\n    const iconColor = isActive ? theme.color.brightBlue : theme.color.lightGrayishBlue;\r\n\r\n    function onItemClicked(e) {\r\n        if (onClick) {\r\n            onClick(e);\r\n        }\r\n        onItemClick();\r\n    }\r\n\r\n    return (\r\n        <Column key={id} className={classNameColumn}>\r\n            {!isActive ? <Row vertical='center' onClick={onItemClicked} className={classNameContainer} >\r\n                <Icon fill={iconColor} />\r\n                <span className={classes.title}>{title}</span>\r\n            </Row>\r\n                :\r\n                <Row vertical='center' onClick={onItemClicked} className={classNameContainer}\r\n                    style={{\r\n                        backgroundColor: 'white',\r\n                    }} >\r\n                    <Icon fill={iconColor} style={{ color: 'black' }} />\r\n                    <span className={classes.title} style={{\r\n                        color: '#006FD8'\r\n                    }}>{title}</span>\r\n                </Row>\r\n            }\r\n            {isCollapsible && (\r\n                <CollapsibleContent expanded={isExpanded}>\r\n                    {children.map((child) => child.type({ ...child.props }))}\r\n                </CollapsibleContent>\r\n            )}\r\n        </Column>\r\n    );\r\n}\r\n\r\nMenuItemComponent.defaultProps = {};\r\n\r\nMenuItemComponent.propTypes = {\r\n    children: any,\r\n    icon: func,\r\n    id: string,\r\n    onClick: func,\r\n    items: arrayOf(string),\r\n    title: string\r\n};\r\n\r\nexport default MenuItemComponent;\r\n","import {\r\n    IconAgents,\r\n    IconArticles,\r\n    IconContacts,\r\n    IconIdeas,\r\n    IconLogout,\r\n    IconOverview,\r\n    IconSubscription,\r\n    IconArrowUp,\r\n    IconBell\r\n} from 'assets/icons';\r\nimport { userContext } from 'context/Provider';\r\nimport React, { useContext } from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\nimport { convertSlugToUrl } from 'resources/utilities';\r\nimport LogoComponent from './LogoComponent';\r\nimport Menu from './MenuComponent';\r\nimport MenuItem from './MenuItemComponent';\r\n\r\nconst useStyles = createUseStyles({\r\n    separator: {\r\n        borderTop: ({ theme }) => `1px solid ${theme.color.lightGrayishBlue}`,\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        opacity: 0.06\r\n    }\r\n});\r\n\r\nfunction SidebarComponent() {\r\n    const { push } = useHistory();\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const isMobile = window.innerWidth <= 1080;\r\n    const { user, setUser } = useContext(userContext);\r\n\r\n    async function logout() {\r\n        setUser(null);\r\n        localStorage.clear();\r\n        push(SLUGS.login);\r\n    }\r\n\r\n    function onClick(slug, parameters = {}) {\r\n        push(convertSlugToUrl(slug, parameters));\r\n    }\r\n\r\n    return (\r\n        <Menu isMobile={isMobile}>\r\n            <div style={{ paddingTop: 30, paddingBottom: 30 }}>\r\n                <LogoComponent />\r\n            </div>\r\n            <MenuItem\r\n                id={SLUGS.dashboard}\r\n                title='Dashboard'\r\n                icon={IconSubscription}\r\n                onClick={() => onClick(SLUGS.dashboard)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.viewAdherence}\r\n                title='Adherence'\r\n                items={[\r\n                    SLUGS.viewAdherence,\r\n                    SLUGS.viewMedicineAdherence,\r\n                    SLUGS.viewMedicineAdherenceDetails\r\n                ]}\r\n                icon={IconArticles}\r\n            >\r\n                <MenuItem\r\n                    id={SLUGS.viewAdherence}\r\n                    title='Adherence'\r\n                    level={2}\r\n                    icon={IconArticles}\r\n                    onClick={() => onClick(SLUGS.viewAdherence)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.viewMedicineAdherence}\r\n                    title='Medicine'\r\n                    level={2}\r\n                    icon={IconArticles}\r\n                    onClick={() => onClick(SLUGS.viewMedicineAdherence)}\r\n                />\r\n            </MenuItem>\r\n            <MenuItem\r\n                id={SLUGS.patient}\r\n                title='Patients'\r\n                icon={IconAgents}\r\n                onClick={() => onClick(SLUGS.patient)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.caretaker}\r\n                items={[SLUGS.caretaker, SLUGS.caretakerMapping]}\r\n                title='Caregiver'\r\n                icon={IconAgents}\r\n            >\r\n                <MenuItem\r\n                    id={SLUGS.caretaker}\r\n                    title='All Caregiver'\r\n                    level={2}\r\n                    icon={IconAgents}\r\n                    onClick={() => onClick(SLUGS.caretaker)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.caretakerMapping}\r\n                    title='Caregiver Mapping'\r\n                    level={2}\r\n                    icon={IconContacts}\r\n                    onClick={() => onClick(SLUGS.caretakerMapping)}\r\n                />\r\n            </MenuItem>\r\n            <MenuItem\r\n                id={SLUGS.company}\r\n                items={[SLUGS.company, SLUGS.companyUser]}\r\n                title='Company'\r\n                icon={IconIdeas}\r\n            >\r\n                <MenuItem\r\n                    id={SLUGS.company}\r\n                    title='All Company'\r\n                    level={2}\r\n                    icon={IconAgents}\r\n                    onClick={() => onClick(SLUGS.company)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.companyUser}\r\n                    title='Company Users'\r\n                    level={2}\r\n                    icon={IconContacts}\r\n                    onClick={() => onClick(SLUGS.companyUser)}\r\n                />\r\n            </MenuItem>\r\n            <MenuItem\r\n                id={SLUGS.doctor}\r\n                title='Doctors'\r\n                icon={IconContacts}\r\n                onClick={() => onClick(SLUGS.doctor)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.device}\r\n                items={[SLUGS.device, SLUGS.mappedUser, SLUGS.mappedCompany]}\r\n                title='Device'\r\n                icon={IconIdeas}\r\n            >\r\n                <MenuItem\r\n                    id={SLUGS.device}\r\n                    title='All Device'\r\n                    level={2}\r\n                    icon={IconAgents}\r\n                    onClick={() => onClick(SLUGS.device)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.mappedUser}\r\n                    title='Mapped User Device'\r\n                    level={2}\r\n                    icon={IconContacts}\r\n                    onClick={() => onClick(SLUGS.mappedUser)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.mappedCompany}\r\n                    title='Mapped Company Device'\r\n                    level={2}\r\n                    icon={IconContacts}\r\n                    onClick={() => onClick(SLUGS.mappedCompany)}\r\n                />\r\n            </MenuItem>\r\n            <MenuItem\r\n                id={SLUGS.medicine}\r\n                title='Medicine'\r\n                icon={IconContacts}\r\n                onClick={() => onClick(SLUGS.medicine)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.slot}\r\n                title='Slot'\r\n                icon={IconArticles}\r\n                onClick={() => onClick(SLUGS.slot)}\r\n            />\r\n\r\n            <MenuItem\r\n                id={SLUGS.referenceCode}\r\n                title='Reference Code'\r\n                icon={IconOverview}\r\n                onClick={() => onClick(SLUGS.referenceCode)}\r\n            />\r\n\r\n            <MenuItem\r\n                id={SLUGS.feeds}\r\n                title='Feeds'\r\n                icon={IconBell}\r\n                onClick={() => onClick(SLUGS.feeds)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.firmware}\r\n                title='Firmware'\r\n                icon={IconArrowUp}\r\n                onClick={() => onClick(SLUGS.firmware)}\r\n            />\r\n            <div className={classes.separator}></div>\r\n            <MenuItem\r\n                id={SLUGS.contact}\r\n                title='Support'\r\n                icon={IconSubscription}\r\n                onClick={() => onClick(SLUGS.contact)}\r\n            />\r\n\r\n            <MenuItem id='logout' title='Logout' icon={IconLogout} onClick={logout} />\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default SidebarComponent;\r\n","import { IconAgents, IconArticles, IconContacts, IconLogout, IconSubscription } from 'assets/icons';\r\nimport { userContext } from 'context/Provider';\r\nimport React, { useContext } from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\nimport { convertSlugToUrl } from 'resources/utilities';\r\nimport LogoComponent from './LogoComponent';\r\nimport Menu from './MenuComponent';\r\nimport MenuItem from './MenuItemComponent';\r\n\r\nconst useStyles = createUseStyles({\r\n    separator: {\r\n        borderTop: ({ theme }) => `1px solid ${theme.color.lightGrayishBlue}`,\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        opacity: 0.06\r\n    }\r\n});\r\n\r\nfunction CompanySidebarComponent() {\r\n    const { push } = useHistory();\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const isMobile = window.innerWidth <= 1080;\r\n    const { user, setUser } = useContext(userContext);\r\n\r\n    async function logout() {\r\n        setUser(null);\r\n        localStorage.clear();\r\n        push(SLUGS.login);\r\n    }\r\n\r\n    function onClick(slug, parameters = {}) {\r\n        push(convertSlugToUrl(slug, parameters));\r\n    }\r\n\r\n    return (\r\n        <Menu isMobile={isMobile}>\r\n            <div style={{ paddingTop: 30, paddingBottom: 30 }}>\r\n                <LogoComponent />\r\n            </div>\r\n            <MenuItem\r\n                id={SLUGS.compDashboard}\r\n                title='Dashboard'\r\n                icon={IconSubscription}\r\n                onClick={() => onClick(SLUGS.compDashboard)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.viewCompanyAdherence}\r\n                title='Adherence'\r\n                items={[\r\n                    SLUGS.viewCompanyAdherence,\r\n                    SLUGS.viewCompMedicineAdherence,\r\n                    SLUGS.viewMedicineAdherenceDetails\r\n                ]}\r\n                icon={IconArticles}\r\n            >\r\n                <MenuItem\r\n                    id={SLUGS.viewCompanyAdherence}\r\n                    title='Adherence'\r\n                    level={2}\r\n                    icon={IconArticles}\r\n                    onClick={() => onClick(SLUGS.viewCompanyAdherence)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.viewCompMedicineAdherence}\r\n                    title='Medicine'\r\n                    level={2}\r\n                    icon={IconArticles}\r\n                    onClick={() => onClick(SLUGS.viewCompMedicineAdherence)}\r\n                />\r\n            </MenuItem>\r\n            <MenuItem\r\n                id={SLUGS.compPatient}\r\n                title='Patients'\r\n                icon={IconAgents}\r\n                onClick={() => onClick(SLUGS.compPatient)}\r\n            />\r\n\r\n            <MenuItem\r\n                id={SLUGS.compDoctor}\r\n                title='Doctors'\r\n                icon={IconContacts}\r\n                onClick={() => onClick(SLUGS.compDoctor)}\r\n            />\r\n\r\n            <MenuItem\r\n                id={SLUGS.compUsers}\r\n                title='Company Users'\r\n                icon={IconSubscription}\r\n                onClick={() => onClick(SLUGS.compUsers)}\r\n            />\r\n            <div className={classes.separator}></div>\r\n\r\n            <MenuItem id='logout' title='Logout' icon={IconLogout} onClick={logout} />\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default CompanySidebarComponent;\r\n","import {\r\n    IconAgents, IconArticles, IconContacts, IconLogout, IconSubscription\r\n} from 'assets/icons';\r\nimport { userContext } from \"context/Provider\";\r\nimport React, { useContext } from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\nimport { convertSlugToUrl } from 'resources/utilities';\r\nimport LogoComponent from './LogoComponent';\r\nimport Menu from './MenuComponent';\r\nimport MenuItem from './MenuItemComponent';\r\n\r\nconst useStyles = createUseStyles({\r\n    separator: {\r\n        borderTop: ({ theme }) => `1px solid ${theme.color.lightGrayishBlue}`,\r\n        marginTop: 16,\r\n        marginBottom: 16,\r\n        opacity: 0.06\r\n    }\r\n});\r\n\r\nfunction DoctorSidebarComponent() {\r\n    const { push } = useHistory();\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const isMobile = window.innerWidth <= 1080;\r\n    const { user, setUser } = useContext(userContext)\r\n\r\n    async function logout() {\r\n        setUser(null)\r\n        localStorage.clear()\r\n        push(SLUGS.login);\r\n    }\r\n\r\n    function onClick(slug, parameters = {}) {\r\n        push(convertSlugToUrl(slug, parameters));\r\n    }\r\n\r\n    return (\r\n        <Menu isMobile={isMobile}>\r\n            <div style={{ paddingTop: 30, paddingBottom: 30 }}>\r\n                <LogoComponent />\r\n            </div>\r\n            <MenuItem\r\n                id={SLUGS.doctorDashboard}\r\n                title='Dashboard'\r\n                icon={IconSubscription}\r\n                onClick={() => onClick(SLUGS.doctorDashboard)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.viewDoctorAdherence}\r\n                title='Adherence'\r\n                items={[SLUGS.viewDoctorAdherence, SLUGS.viewDocMedicineAdherence]}\r\n                icon={IconArticles}\r\n            >\r\n                <MenuItem\r\n                    id={SLUGS.viewDoctorAdherence}\r\n                    title='Adherence'\r\n                    level={2}\r\n                    icon={IconArticles}\r\n                    onClick={() => onClick(SLUGS.viewDoctorAdherence)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.viewDocMedicineAdherence}\r\n                    title='Medicine'\r\n                    level={2}\r\n                    icon={IconArticles}\r\n                    onClick={() => onClick(SLUGS.viewDocMedicineAdherence)}\r\n                />\r\n            </MenuItem>\r\n            <MenuItem\r\n                id={SLUGS.docPatient}\r\n                title='Patients'\r\n                icon={IconAgents}\r\n                onClick={() => onClick(SLUGS.docPatient)}\r\n            />\r\n            <MenuItem\r\n                id={SLUGS.docCaregiver}\r\n                title='Caregiver'\r\n                icon={IconContacts}\r\n                items={[SLUGS.docCaregiver, SLUGS.docCareTakerMapping]}\r\n            >\r\n                <MenuItem\r\n                    id={SLUGS.docCaregiver}\r\n                    title='Caregiver'\r\n                    level={2}\r\n                    icon={IconContacts}\r\n                    onClick={() => onClick(SLUGS.docCaregiver)}\r\n                />\r\n                <MenuItem\r\n                    id={SLUGS.docCareTakerMapping}\r\n                    title='Caregiver Patients'\r\n                    level={2}\r\n                    icon={IconArticles}\r\n                    onClick={() => onClick(SLUGS.docCareTakerMapping)}\r\n                />\r\n            </MenuItem>\r\n\r\n            <div className={classes.separator}></div>\r\n\r\n            <MenuItem id='logout' title='Logout' icon={IconLogout} onClick={logout} />\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default DoctorSidebarComponent;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { SidebarProvider } from 'hooks/useSidebar';\r\n\r\nfunction SidebarContext({ children }) {\r\n    const { pathname } = useLocation();\r\n    return <SidebarProvider defaultItem={pathname}>{children}</SidebarProvider>;\r\n}\r\nexport default SidebarContext;\r\n","import React from 'react'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"circle-progressbar\">\r\n            <div className=\"spinner-border\" role=\"status\" style={{ color: \"rgb(29, 109, 167)\" }}>\r\n                <span className=\"sr-only\" ></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function addCompany(data) {\r\n    return await axios.post(`/admin/company`, data);\r\n\r\n}\r\n\r\nexport async function updateCompany(id, data) {\r\n    return await axios.put(`/admin/company/${id}`, data);\r\n\r\n}\r\n\r\nexport async function getAllCompany(params) {\r\n    return await axios.get(\"/admin/companies\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function getAllUsers(id,params) {\r\n    return await axios.get(`admin/company/${id}/users`, {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function updateUserInfo(id, data) {\r\n    return await axios.put(`/admin/user/${id}`, data);\r\n\r\n}\r\n\r\nexport async function addUserInfo(data) {\r\n    return await axios.post(`/admin/user`, data);\r\n\r\n}","import { axios } from './axios';\r\n\r\nexport async function getStates() {\r\n    return await axios.get(`/states`);\r\n}\r\n\r\nexport async function changePassword(data) {\r\n    return await axios.post(`/user/changePassword`, data);\r\n}\r\n\r\nexport async function updateProfile(data) {\r\n    return await axios.post(`/user/me`, data);\r\n}\r\n\r\nexport async function getProfileDetails() {\r\n    return await axios.get(`/user/me`);\r\n}\r\n\r\nexport async function sendSupportMail(data) {\r\n    return await axios.post(`/support`, data);\r\n}\r\n\r\nexport async function getMedicineAdherenceDetails(id) {\r\n    return await axios.get(`common/medicine/${id}/adherence`);\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAdminAdherence(params) {\r\n    return await axios.get(\"/admin/adherence\", {\r\n        params\r\n    });\r\n}\r\n\r\nexport async function getAdminMedicineAdherence(params) {\r\n    return await axios.get(\"/common/medicine-adherence\", {\r\n        params\r\n    });\r\n}","import Loader from 'components/table/Loader';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { RangePicker } from 'react-minimal-datetime-range';\r\nimport 'react-minimal-datetime-range/lib/react-minimal-datetime-range.min.css';\r\nimport { getAllCompany } from 'resources/serverReq/admin/company';\r\nimport { getStates } from 'resources/serverReq/common';\r\nimport MiniCardComponent from '../../../components/cards/MiniCardComponent';\r\nimport { getAdminAdherence } from '../../../resources/serverReq/admin/adherence';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        marginTop: 10,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nexport default function Adherence() {\r\n    const [state, setState] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [adherence, setAdherence] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const [companyOptions, setCompanyOptions] = useState([]);\r\n    const classes = useStyles();\r\n    const now = new Date();\r\n    const [date, setDate] = useState(String(now.getDate()).padStart(2, '0'));\r\n    const [month, setMonth] = useState(String(now.getMonth() + 1).padStart(2, '0'));\r\n    const [startDate, setStartDate] = useState(String(now.getDate()).padStart(2, '0'));\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [year, setYear] = useState(String(now.getFullYear()));\r\n    const [companyId, setCompanyId] = useState(\"\");\r\n    const [defaultDate, setDefaultDate] = useState([\r\n        year + '-' + month + '-' + date,\r\n        year + '-' + month + '-' + date\r\n    ])\r\n\r\n\r\n    const handleStateChange = (event) => {\r\n        event.preventDefault();\r\n        setState(event.target.value);\r\n    };\r\n\r\n    const handleCompanyChange = (event) => {\r\n        console.log(\"🚀 ~ file: Adherence.js ~ line 84 ~ handleCompanyChange ~ event\", event.target)\r\n        event.preventDefault();\r\n        setCompanyId(event.target.value);\r\n    }\r\n    useEffect(() => {\r\n\r\n        getAllCompany()\r\n            .then(({ data }) => {\r\n                const companies = data.data.companies.rows;\r\n                let options = [];\r\n                companies.map((val) => {\r\n                    options.push({\r\n                        value: val.id,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setCompanyOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"🚀 ~ file: Adherence.js ~ line 96 ~ useEffect ~ err\", err)\r\n            });\r\n\r\n        getStates()\r\n            .then(({ data }) => {\r\n                const states = data.data.states;\r\n                let options = [];\r\n                states.map((val) => {\r\n                    options.push({\r\n                        value: val.name,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setStateOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log('🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err', err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            state: state,\r\n            age: age,\r\n            gender: gender,\r\n            to: endDate,\r\n            from: startDate,\r\n            company_id: companyId\r\n        };\r\n\r\n        getAdminAdherence(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data;\r\n                    setAdherence(res);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n            });\r\n    }, [state, gender, age, endDate, companyId]);\r\n\r\n    const handleDateSelected = (res) => {\r\n        console.log(\"🚀 ~ file: Adherence.js ~ line 124 ~ handleDateSelected ~ res\", res)\r\n        const start = res[0].replace(\":\", \"\").trim();\r\n        console.log(\"🚀 ~ file: Adherence.js ~ line 122 ~ handleDateSelected ~ start\", start)\r\n        const end = res[1].replace(\":\", \"\").trim();\r\n        setStartDate(start)\r\n        setEndDate(end)\r\n        setDefaultDate([start, end])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <>\r\n                    <div className='table-responsive'>\r\n                        <div className='table-wrapper'>\r\n                            <div className='table-title'>\r\n                                <div className='d-flex float-right'>\r\n                                    <div className='form-group w-15'>\r\n                                        <label className='text-dark'>State</label>\r\n                                        <select\r\n                                            placeholder='State'\r\n                                            type='state'\r\n                                            className={`select-input form-control-solid p-2`}\r\n                                            name='state'\r\n                                            onChange={handleStateChange}\r\n                                            value={state}\r\n                                        >\r\n                                            <option value=\"\">Select..</option>\r\n                                            {stateOptions.map((el) => (\r\n                                                <option key={el.value}>{el.value}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <label className='text-dark'>Gender</label>\r\n                                        <select\r\n                                            className='select-input p-2'\r\n                                            onChange={(e) => setGender(e.target.value)}\r\n                                            value={gender}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value='male'>Male</option>\r\n                                            <option value='female'>Female</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <label className='text-dark'>Age</label>\r\n                                        <select\r\n                                            className='select-input p-2'\r\n                                            onChange={(e) => setAge(e.target.value)}\r\n                                            value={age}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value='1'>&gt;70</option>\r\n                                            <option value='2'>60 to 70</option>\r\n                                            <option value='3'>50 to 60</option>\r\n                                            <option value='4'>40 to 50</option>\r\n                                            <option value='5'>&lt; 40</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='form-group w-15'>\r\n                                        <label className='text-dark'>Company</label>\r\n                                        <select\r\n                                            placeholder='Company'\r\n                                            type='company'\r\n                                            className={`select-input form-control-solid p-2`}\r\n                                            name='company'\r\n                                            onChange={handleCompanyChange}\r\n                                            value={companyId}\r\n                                        >\r\n                                            <option value=\"\">Select..</option>\r\n                                            {companyOptions.map((el) => (\r\n                                                <option key={el.value} value={el.value}>{el.label}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex' style={{ margin: '18px' }}>\r\n                        <div className='row'>\r\n                            <RangePicker\r\n                                locale={`en-us`} // default is en-us\r\n                                show={false} // default is false\r\n                                disabled={false} // default is false\r\n                                allowPageClickToClose={true} // default is true\r\n                                placeholder={['Start Date', 'End Date']}\r\n                                defaultDates={defaultDate} // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                                // initialDates={[\r\n                                //     year + '-' + month + '-' + date,\r\n                                //     year + '-' + month + '-' + date\r\n                                // ]} // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                                onConfirm={(res) => handleDateSelected(res)}\r\n                                onClose={() => console.log('closed')}\r\n                                style={{ width: '300px', margin: '0 auto' }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex'>\r\n                        <div className='row'>\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='Total Patient'\r\n                                value={parseInt(adherence.bucket_100_80) + parseInt(adherence.bucket_80_50) + parseInt(adherence.bucket_50_30) + parseInt(adherence.bucket_30)}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='Avg Adherence'\r\n                                value={adherence.avg_adherence}\r\n                            />\r\n                            <div className='row'></div>\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='100% - 80 %'\r\n                                value={adherence.bucket_100_80}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='80% - 50 %'\r\n                                value={adherence.bucket_80_50}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='50% - 30%'\r\n                                value={adherence.bucket_50_30}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='< 30%'\r\n                                value={adherence.bucket_30}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function FormBtns({ formik, cancelRoute }) {\r\n    return (\r\n        <div className=\"form-group form-btns d-flex flex-wrap justify-content-center align-items-center\" style={{ marginTop: \"45px\" }}>\r\n            <button\r\n                type=\"submit\"\r\n                disabled={formik}\r\n                className={`btn referral-button`}\r\n            >\r\n                <span className='px-3'>Submit</span>\r\n            </button>\r\n            {\r\n                cancelRoute ? <Link to={cancelRoute}\r\n                    type=\"button\"\r\n                    className={`btn back-button`}\r\n                >\r\n                    <span className='px-3'>Cancel</span>\r\n                </Link> : \"\"\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport function TableColumn(props) {\r\n    const { columns } = props\r\n    return (\r\n        <>\r\n            <thead>\r\n                <tr>\r\n                    {\r\n                        columns?.map((el, i) => (\r\n                            <th key={i}>{el}</th>\r\n\r\n                        ))\r\n                    }\r\n                </tr>\r\n            </thead>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function TableHeader({ btnTitle, route, setQuery, query }) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex align-items-center\">\r\n\r\n                <div className=\"p-2  text-dark \">\r\n                    {\r\n                        btnTitle ?\r\n                            <Link to={{\r\n                                pathname: `${route}`\r\n                            }} className={\"active-invites-btn btn add-btn\"} >{btnTitle}</Link> : \"\"\r\n                    }\r\n                </div>\r\n                <div className=\"p-2  flex-grow-1 \">\r\n\r\n                </div>\r\n\r\n                <div className=\"search-box justify-content-end\">\r\n\r\n                    <input\r\n                        onChange={(event) => setQuery(event.target.value)}\r\n                        type=\"text\"\r\n                        value={query}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search&hellip;\"\r\n                        autoFocus\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { IconBlock, IconEdit, IconSchedule } from 'assets/icons';\r\nimport React from 'react';\r\nimport { FaEye, FaUndoAlt } from \"react-icons/fa\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function TableLastChild({ editRoute, editData, block, blockId, BlockCondition, path, schedule, scheduleRoute }) {\r\n    return (\r\n        <>\r\n\r\n            <div className='d-flex justify-content-start last-child-table'>\r\n                {\r\n                    path ? <Link to={{\r\n                        pathname: `${path}`,\r\n                        state: editData\r\n                    }}\r\n                        style={{ padding: \"6px\" }}\r\n                        className=\"btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button btn-size\"\r\n                        title=\"View details\"\r\n\r\n                    >\r\n                        <span className=\"svg-icon menu-icon text-light\">\r\n                            <FaEye style={{ color: 'black' }} />\r\n                        </span>\r\n\r\n                    </Link> : \"\"\r\n                }\r\n\r\n                {\r\n                    editRoute ?\r\n                        <Link to={{\r\n                            pathname: `${editRoute}`,\r\n                            state: editData\r\n\r\n                        }}\r\n                            title=\"Edit\"\r\n                            className=\"btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button ml-5 btn-size\"\r\n\r\n                        >\r\n                            <span className=\"svg-icon svg-icon-sm svg-icon-primary\">\r\n                                <IconEdit />\r\n                            </span>\r\n                        </Link> : \"\"\r\n                }\r\n\r\n                {\r\n                    blockId ? <a\r\n                        title={BlockCondition ? \"Disable\" : \"Enable\"}\r\n                        className=\"btn btn-icon btn-light btn-hover-warning btn-sm svg-icon-button ml-5 btn-size\"\r\n                        onClick={() => block(blockId)}\r\n                    >\r\n                        {\r\n                            BlockCondition ? <span className=\"svg-icon svg-icon-sm svg-icon-warning\">\r\n                                <IconBlock />\r\n                            </span> : <span className=\"svg-icon svg-icon-sm svg-icon-warning\">\r\n                                <span className=\"svg-icon svg-icon-sm svg-icon-danger\">\r\n                                    <FaUndoAlt />\r\n                                </span>\r\n                            </span>\r\n\r\n\r\n                        }\r\n\r\n                    </a> : \"\"\r\n                }\r\n\r\n                {\r\n                    schedule ?  <Link to={{\r\n                        pathname: `${scheduleRoute}`,\r\n                        state: editData\r\n                    }}\r\n                        title=\"Schedule Dose\"\r\n                        className=\"btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button ml-5 btn-size\"\r\n\r\n                    >\r\n                        <span className=\"svg-icon svg-icon-sm svg-icon-primary\">\r\n                            <IconSchedule />\r\n                        </span>\r\n                    </Link> : \"\"\r\n                }\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nexport default function Pagination({ setPage, pageData }) {\r\n    const handleChangePage = (newPage) => {\r\n        const incPage = ++newPage.selected\r\n        setPage(incPage);\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <ReactPaginate\r\n                className='d-flex pagination text-dark'\r\n                breakLabel=\"...\"\r\n                nextLabel=\" >>\"\r\n                onPageChange={handleChangePage}\r\n                pageRangeDisplayed={3}\r\n                pageCount={pageData.totalPage}\r\n                previousLabel=\"<< \"\r\n                renderOnZeroPageCount={null}\r\n                activeLinkClassName = \"active-page\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import { TableColumn } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FaEye } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\nimport { getAdminMedicineAdherence } from '../../../resources/serverReq/admin/adherence';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nexport default function MedicineAdherence() {\r\n    let [medicineData, setMedicineData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n            sort: 1\r\n        };\r\n\r\n        getAdminMedicineAdherence(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                setDataNotAvailable(false);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.medicines;\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    setMedicineData(res.rows);\r\n                    if (res.count == 0) setDataNotAvailable(true);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setDataNotAvailable(true);\r\n            });\r\n    }, [query, page]);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <div className='table-title'>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className='search-box justify-content-end'>\r\n                                    <input\r\n                                        onChange={(event) => setQuery(event.target.value)}\r\n                                        type='text'\r\n                                        value={query}\r\n                                        className='form-control'\r\n                                        placeholder='Search&hellip;'\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn columns={['Name', 'Company', 'Count', 'Action']} />\r\n                            <tbody>\r\n                                {dataNotAvailable ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    medicineData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <p style={{ marginLeft: '15px' }}>{el.name}</p>\r\n                                            </td>\r\n                                            <td>{el.companyName}</td>\r\n                                            <td>{el.count}</td>\r\n                                            <td>\r\n                                                <div className='d-flex justify-content-center align-items-center'>\r\n                                                    <Link\r\n                                                        to={{\r\n                                                            pathname: `${SLUGS.viewMedicineAdherenceDetails}/${el.id}`,\r\n                                                            state: { title: el.name }\r\n                                                        }}\r\n                                                        style={{ padding: '6px' }}\r\n                                                        className='btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button'\r\n                                                        title='View Adherence Details'\r\n                                                    >\r\n                                                        <span className='svg-icon menu-icon mr-2 text-light'>\r\n                                                            <FaEye style={{ color: 'black' }} />\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import Loader from 'components/table/Loader';\r\nimport React ,{ useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport MiniCardComponent from '../../../components/cards/MiniCardComponent';\r\nimport { getMedicineAdherenceDetails } from '../../../resources/serverReq/common';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 20,\r\n        marginTop: 10,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\nexport default function MedicineAdherenceDetails(props) {\r\n    const classes = useStyles();\r\n    const path = props.location.pathname.split('/');\r\n    const id = path[path.length - 1];\r\n    const { title = 'Medicine' } = props.location.state || {};\r\n    console.log(\r\n        '🚀 ~ file: MedicineAdherenceDetails.js ~ line 53 ~ MedicineAdherenceDetails ~ title',\r\n        title\r\n    );\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [adherence, setAdherence] = useState({});\r\n\r\n    useEffect(() => {\r\n        getMedicineAdherenceDetails(id)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data;\r\n                    setAdherence(res);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='flex'>\r\n                    <h4>{title}</h4>\r\n                    <div className='row'>\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Patient'\r\n                            value={adherence.totalPatients}\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Taken %'\r\n                            value={\r\n                                adherence.totalOpen === 0\r\n                                    ? 0\r\n                                    : (\r\n                                          (adherence.totalOpen /\r\n                                              (adherence.totalOpen + adherence.totalMissed)) *\r\n                                          100\r\n                                      ).toFixed(2)\r\n                            }\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Missed %'\r\n                            value={\r\n                                adherence.totalMissed === 0\r\n                                    ? 0\r\n                                    : (\r\n                                          (adherence.totalMissed /\r\n                                              (adherence.totalOpen + adherence.totalMissed)) *\r\n                                          100\r\n                                      ).toFixed(2)\r\n                            }\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Taken'\r\n                            value={adherence.totalOpen || 0}\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Missed'\r\n                            value={adherence.totalMissed || 0}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAllUsers(params) {\r\n    return await axios.get(\"/admin/users\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function updateUserInfo(id, data) {\r\n    return await axios.put(`/admin/user/${id}`, data);\r\n\r\n}\r\n\r\nexport async function updateProfile(data) {\r\n    return await axios.post(`/user/me`, data);\r\n\r\n}\r\n\r\nexport async function scheduleDoseByAdmin(data) {\r\n    return await axios.post(`/admin/schedule-dose`, data);\r\n}\r\n\r\nexport async function setDoseTimeByAdmin(data) {\r\n    return await axios.post(`/admin/user-slots`, data);\r\n}\r\n\r\nexport async function getUserSlotTimings(id) {\r\n    return await axios.get(`/admin/user/${id}/user-slots`,);\r\n}\r\n\r\nexport async function blockUsers(id) {\r\n    return await axios.put(`/admin/user/${id}/status`);\r\n\r\n}\r\n\r\nexport async function addUserInfo(data) {\r\n    return await axios.post(`/admin/user`, data);\r\n\r\n}\r\n\r\nexport async function getAllCaretakerUserMapping(params) {\r\n    return await axios.get(\"/admin/caretaker-mapping\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function getAllPatientsByDoctor(id, params) {\r\n    return await axios.get(`/admin/doctor/${id}/patients`, {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function getUserDoses(id) {\r\n    return await axios.get(`/admin/user/${id}/doses`,);\r\n}\r\n\r\nexport async function getUserMedicineAdherence(id) {\r\n    return await axios.get(`/admin/user/${id}/adherence`,);\r\n}\r\n\r\n\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addUserInfo } from \"resources/serverReq/admin/user\";\r\nimport { getStates } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nexport default function AddCareTaker(props) {\r\n    const initialValues = {\r\n        firstName: \"Himanshu\",\r\n        lastName: \"Rajput\",\r\n        email: \"hrajput2507@gmail.com\",\r\n        dob: new Date().toISOString().slice(0, 10),\r\n        gender: \"Male\",\r\n        phone: \"1234567890\",\r\n        city: \"Noida\",\r\n        role: \"caretaker\",\r\n        reference_code: \"\",\r\n        password: \"Qwerty@1\",\r\n        state: \"\"\r\n\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const userSchema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n        reference_code: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(8, \"Maximum 8 symbols\")\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    useEffect(() => {\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n    }, [])\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 103 ~ AddPatient ~ values\", values)\r\n            enableLoading();\r\n            addUserInfo(values).then((res) => {\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('New Caregiver added in system')\r\n                    props.history.push(slugs.patient)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Add Caregiver</h3>\r\n                    <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n                            <div className='d-flex '>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"email\"\r\n                                    )}`}\r\n                                    name=\"email\"\r\n                                    {...formik.getFieldProps(\"email\")}\r\n                                />\r\n                                {formik.touched.email && formik.errors.email ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Password</label>\r\n\r\n                                    <input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"password\"\r\n                                        )}`}\r\n                                        name=\"password\"\r\n                                        {...formik.getFieldProps(\"password\")}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >Gender</label>\r\n                                    <select placeholder=\"Gender\"\r\n                                        type=\"gender\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"gender\"\r\n                                        )} p-2`}\r\n                                        name=\"gender\"\r\n                                        {...formik.getFieldProps(\"gender\")}\r\n                                    >\r\n                                        <option disabled>Select..</option>\r\n                                        <option value=\"male\" >Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    {formik.touched.gender && formik.errors.gender ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Code</label>\r\n                                    <input\r\n                                        placeholder=\"Care Taker Code\"\r\n                                        type=\"reference_code\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"reference_code\"\r\n                                        )}`}\r\n                                        name=\"reference_code\"\r\n                                        {...formik.getFieldProps(\"reference_code\")}\r\n                                    />\r\n                                    {formik.touched.reference_code && formik.errors.reference_code ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.reference_code}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.caretaker} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport default function SelectInput({ stateOptions = [], state, setState, setStatus, status, companyOptions = [], companyId, setCompanyId }) {\r\n\r\n\r\n    return <>\r\n        <div className='d-flex'>\r\n\r\n            {stateOptions.length > 0 &&\r\n                <div className=\"form-group w-15\">\r\n                    <label className='text-dark'>State</label>\r\n                    <select placeholder=\"State\"\r\n                        type=\"state\"\r\n                        className={`select-input form-control-solid p-2`}\r\n                        name=\"state\"\r\n                        onChange={(e) => setState(e.target.value)}\r\n                        value={state}\r\n                    >\r\n                        <option value=\"\">Select..</option>\r\n                        {stateOptions.map((el) => (\r\n                            <option key={el.value}>{el.value}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            }\r\n            <div className=\"form-group\">\r\n                <label className='text-dark'>Status</label>\r\n                <select className=\"select-input p-2\" onChange={(e) => setStatus(e.target.value)} value={status}>\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"1\" >Active</option>\r\n                    <option value=\"0\">Inactive</option>\r\n                </select>\r\n            </div>\r\n\r\n            {companyOptions.length > 0 &&\r\n                <div className='form-group w-15'>\r\n                    <label className='text-dark'>Company</label>\r\n                    <select\r\n                        placeholder='Company'\r\n                        type='company'\r\n                        className={`select-input form-control-solid p-2`}\r\n                        name='company'\r\n                        onChange={(event) => {\r\n                            event.preventDefault();\r\n                            setCompanyId(event.target.value);\r\n                        }}\r\n                        value={companyId}\r\n                    >\r\n                        <option value=\"\">Select..</option>\r\n                        {companyOptions.map((el) => (\r\n                            <option key={el.value} value={el.value}>{el.label}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    </>;\r\n}\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport SLUGS from 'resources/slugs'\r\nimport { blockUsers, getAllUsers } from \"../../../resources/serverReq/admin/user\"\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\nimport SelectInput from '../SelectInput'\r\n\r\nexport default function CareTaker() {\r\n    let [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"caretaker\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getAllUsers(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.users\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(true)\r\n        })\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n    }, [status, query, state, page])\r\n\r\n    async function blockedUser(id) {\r\n        await blockUsers(id).then((res) => {\r\n            if (res.data.code === 200) {\r\n                const userLists = userData.slice();\r\n                for (const user of userLists) {\r\n                    if (user.id === id) {\r\n                        user.status = res?.data?.data?.user?.status;\r\n\r\n                        break;\r\n                    }\r\n                }\r\n                setUserData(userLists);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader btnTitle={\"+ Add Caregiver\"} route={SLUGS.addCareTaker} setQuery={setQuery} query={query} />\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} />\r\n\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"State\", \"Status\", \"Created On\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> : userData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                    {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                        <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                            <img className=\"image-position symbol-round\"\r\n                                                                src={\r\n                                                                    \"/assets/img/300_21.jpg\"\r\n                                                                }\r\n                                                                alt=\"pic\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div> */}\r\n                                                    <span className='p-2'>\r\n                                                        {el.firstName + \" \" + el.lastName}\r\n\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                            </td>\r\n\r\n                                            <td>{el.email}</td>\r\n                                            <td>{el.gender}</td>\r\n                                            <td>{el.phone}</td>\r\n                                            <td>{el.city}</td>\r\n                                            <td>{el.state}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    el.status == true ?\r\n                                                        <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                        <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                }\r\n                                            </td>\r\n                                            <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                            <td >\r\n                                                <div className='d-flex'>\r\n                                                    <TableLastChild editRoute={SLUGS.editPatient} editData={el} block={blockedUser} blockId={el.id} BlockCondition={el.status} path={SLUGS.viewCareTaker} />\r\n\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n","import { TableColumn, TableHeader } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport SLUGS from 'resources/slugs'\r\nimport { getAllCaretakerUserMapping } from \"../../../resources/serverReq/admin/user\"\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function CareTakerUserMapping() {\r\n    let [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n        };\r\n\r\n        getAllCaretakerUserMapping(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.users\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n\r\n    }, [query, page])\r\n\r\n\r\n    return (\r\n        <>{\r\n            !isLoading ?\r\n                <div className=\"table-responsive\">\r\n                    <div className=\"table-wrapper\">\r\n                        <div className=\"table-title\">\r\n                            <TableHeader btnTitle={false} route={SLUGS.caretakerMapping} setQuery={setQuery} query={query} />\r\n                        </div>\r\n                        <table className=\"table table-borderless text-center\">\r\n                            <TableColumn columns={[\"Patient Name\", \"Email\", \"Phone\", \"Caretaker Name\", \"Email\", \"Phone\", \"Created On\"]} />\r\n                            <tbody>\r\n                                {\r\n                                    dataNotAvailable ? <tr><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                        userData.map((el) => (\r\n                                            <tr key={el.id}>\r\n                                                <td>\r\n                                                    <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                        <span className='p-2'>\r\n                                                            {el.patient.firstName + \" \" + el.patient.lastName}\r\n\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                </td>\r\n\r\n                                                <td>{el.patient.email}</td>\r\n                                                <td>{el.patient.phone}</td>\r\n                                                <td> {el.caretaker.firstName + \" \" + el.patient.lastName}</td>\r\n                                                <td> {el.caretaker.email}</td>\r\n                                                <td> {el.caretaker.phone}</td>\r\n                                                <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                            </tbody>\r\n\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div> : <Loader />\r\n\r\n        }\r\n\r\n        </>\r\n    )\r\n}\r\n","\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nexport default function CareTakerView(props) {\r\n\r\n    const data = props.location.state\r\n    console.log(\"🚀 ~ file: PatientView.js ~ line 7 ~ PatientView ~ data\", data)\r\n    return <>\r\n\r\n        <div className=\"main\">\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <div className=\"card-body\">\r\n                        <i className=\"fa fa-pen fa-xs edit\"></i>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.firstName + \" \" + data.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>DOB:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.dob}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Gender</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.gender}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>City</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.city}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>State</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.state}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Status</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.status ? <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                        <span className='label label-lg label-light-danger label-inline'>Inactive</span>}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Created On</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{moment(data.createdAt).format('DD-MMM-YY')}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </>;\r\n}\r\n","import { FormBtns } from 'components/table';\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { updateUserInfo } from \"resources/serverReq/admin/user\";\r\nimport { getStates } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nexport default function EditCareTaker(props) {\r\n    const data = props?.location?.state\r\n    const initialValues = {\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        dob: data.dob,\r\n        gender: data.gender,\r\n        phone: data.phone,\r\n        city: data.city,\r\n        role: \"caretaker\",\r\n        state: data.state,\r\n\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const userScheema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userScheema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            console.log(\"🚀 ~ file: EditPatient.js ~ line 76 ~ EditPatient ~ values\", values)\r\n            enableLoading();\r\n\r\n            updateUserInfo(data.id, values).then((res) => {\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Caregiver edited in system')\r\n                    props.history.push(slugs.patient)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    // toast.error(errorMessage, {\r\n                    //     closeOnClick: true,\r\n                    //     hideProgressBar: false,\r\n                    // })\r\n                });\r\n        },\r\n    });\r\n    useEffect(() => {\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center mt-5 mb-5'>Edit User</h3>\r\n                    <div className=\"d-flex justify-content-center align-items-center container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n                        >\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        \"email\"\r\n                                    )}`}\r\n                                    name=\"email\"\r\n                                    {...formik.getFieldProps(\"email\")}\r\n                                />\r\n                                {formik.touched.email && formik.errors.email ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Gender</label>\r\n                                    <input\r\n                                        placeholder=\"Gender\"\r\n                                        type=\"gender\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"gender\"\r\n                                        )}`}\r\n                                        name=\"gender\"\r\n                                        {...formik.getFieldProps(\"gender\")}\r\n                                    />\r\n                                    {formik.touched.gender && formik.errors.gender ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className='d-flex'>\r\n\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.patient} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addCompany } from \"resources/serverReq/admin/company\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n};\r\n\r\nexport default function AddDevice(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const companySchema = Yup.object().shape({\r\n\r\n        name: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\")\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: companySchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            console.log(\"************\", values)\r\n            addCompany(values).then((res) => {\r\n\r\n                console.log(\"res==========>\", res)\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('New Company added in system')\r\n                    props.history.push(slugs.company)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Add New Company</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Company Name</label>\r\n                                <input\r\n                                    placeholder=\"Company Name\"\r\n                                    type=\"name\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"name\"\r\n                                    )}`}\r\n                                    name=\"name\"\r\n                                    {...formik.getFieldProps(\"name\")}\r\n                                />\r\n                                {formik.touched.name && formik.errors.name ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.name}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.company} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { IconDocument } from 'assets/icons'\r\nimport { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getAllCompany } from 'resources/serverReq/admin/company'\r\nimport SLUGS from 'resources/slugs'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function Company() {\r\n    const [companyData, setCompanyData] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query\r\n        };\r\n        getAllCompany(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.companies\r\n                setCompanyData(res.rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n    }, [query, page])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n\r\n                            <TableHeader btnTitle={\"+ Add Company \"} route={SLUGS.addCompany} setQuery={setQuery} query={query} />\r\n\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Status\", \"Created On\", \"Actions\"]} />\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            companyData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td >\r\n\r\n\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.name}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY hh:mm a')}</td>\r\n                                                    <td>\r\n\r\n                                                        <div className='d-flex'>\r\n                                                            <div className='d-flex justify-content-center align-items-center'>\r\n                                                                <Link to={{\r\n                                                                    pathname: `${SLUGS.getCompanyUser}`,\r\n                                                                    state: el\r\n                                                                }}\r\n                                                                    style={{ backgroundColor: \"#006FD8\", padding: \"6px\" }}\r\n                                                                    className=\"btn btn-xs btn-sm text-light sm-btn svg-icon-button\"\r\n                                                                    title=\"Invite User text-info\"\r\n\r\n                                                                >\r\n                                                                    <span className=\"svg-icon menu-icon mr-2 text-light\">\r\n                                                                        <IconDocument /> View Company Users\r\n                                                                    </span>\r\n\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                            <TableLastChild editRoute={SLUGS.editCompany} editData={el} block={false} blockId={el.id} BlockCondition={el.status} isFalse={true} />\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { FaEye } from \"react-icons/fa\"\r\n\r\nexport default function ViewBtn({ path, data }) {\r\n    return <div className='d-flex justify-content-center align-items-center'>\r\n        <Link to={{\r\n            pathname: `${path}`,\r\n            state: data\r\n        }}\r\n            style={{ padding: \"6px\" }}\r\n            className=\"btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button\"\r\n            title=\"View details\"\r\n\r\n        >\r\n            <span className=\"svg-icon menu-icon text-light\">\r\n                <FaEye style={{ color: 'black' }} />\r\n            </span>\r\n\r\n        </Link>\r\n    </div>\r\n}\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport ViewBtn from 'components/table/ViewBtn'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getAllUsers } from \"resources/serverReq/admin/company\"\r\nimport SLUGS from 'resources/slugs'\r\nimport \"../../../common/common.css\"\r\nimport '../../../table/table.css'\r\nexport default function CompanyUsers(props) {\r\n    let [userData, setUserData] = useState([]);\r\n    const [totalPage, setTotalPage] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const data = props.location.state\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n\r\n        };\r\n\r\n        getAllUsers(data.id, params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data?.users\r\n                setTotalPage(res.count)\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n\r\n        })\r\n\r\n    }, [status, query, state])\r\n\r\n    async function blockedUser(id) {\r\n        // await blockUsers(id).then((res) => {\r\n\r\n        //     if (res.data.code === 200) {\r\n        //         const userLists = userData.slice();\r\n        //         for (const user of userLists) {\r\n        //             if (user.id === id) {\r\n        //                 user.status = res.data.data.status;\r\n\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //         setUserData(userLists);\r\n        //     }\r\n        // }).catch(function (error) {\r\n        //     console.log(error.response);\r\n        // });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader btnTitle={\"+ Add Company User\"} route={SLUGS.companyUser} setQuery={setQuery} query={query} />\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"state\", \"Status\", \"Created On\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.firstName + \" \" + el.lastName}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td>{el.email}</td>\r\n                                                    <td>{el.gender}</td>\r\n                                                    <td>{el.phone}</td>\r\n                                                    <td>{el.city}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY hh:mm a')}</td>\r\n                                                    <td>\r\n                                                        <div className='d-flex'>\r\n                                                            <ViewBtn path={SLUGS.viewCompanyUser} data={el} />\r\n\r\n                                                            <TableLastChild editRoute={SLUGS.editCompanyUser} editData={el} block={false} blockId={el.id} BlockCondition={el.status} />\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getAllCompany } from 'resources/serverReq/admin/company';\r\nimport { addUserInfo } from \"resources/serverReq/admin/user\";\r\nimport { getStates } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../../common/common.css\";\r\n\r\n\r\nexport default function CreateUser(props) {\r\n  const initialValues = {\r\n    firstName: \"Himanshu\",\r\n    lastName: \"Rajput\",\r\n    email: \"hrajput2507@gmail.com\",\r\n    dob: new Date().toISOString().slice(0, 10),\r\n    gender: \"Male\",\r\n    phone: \"1234567890\",\r\n    city: \"Noida\",\r\n    role: \"company\",\r\n    password: \"Qwerty@1\",\r\n    state: \"\",\r\n    company: \"\",\r\n\r\n  };\r\n  const [loading, setLoading] = useState(false);\r\n  const [stateOptions, setStateOptions] = useState([]);\r\n  const [companyData, setcompanyData] = useState([]);\r\n  const userSchema = Yup.object().shape({\r\n\r\n    firstName: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\"Required\"),\r\n    lastName: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\"Required\"),\r\n    email: Yup.string()\r\n      .email(\"Wrong email format\")\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\"Required\"),\r\n    dob: Yup.date()\r\n      .required(\"Required\"),\r\n    city: Yup.string()\r\n      .required(\"Required\"),\r\n    state: Yup.string()\r\n      .required(\"Required\"),\r\n    gender: Yup.string()\r\n      .min(3, \"Minimum 3 symbols\")\r\n      .max(50, \"Maximum 50 symbols\")\r\n      .required(\"Required\"),\r\n    phone: Yup.number()\r\n      .min(10, \"Minimum 10 symbols\")\r\n      .required(\"Required\"),\r\n    company: Yup.number()\r\n      .required(\"Required\"),\r\n    state: Yup.string()\r\n      .required(\"Required\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    getStates().then(({ data }) => {\r\n      const states = data.data.states;\r\n      let options = []\r\n      states.map(val => {\r\n        options.push({\r\n          value: val.name,\r\n          label: val.name\r\n        })\r\n      });\r\n      setStateOptions(options);\r\n\r\n\r\n    }).catch(err => {\r\n      console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n    });\r\n\r\n    getAllCompany().then((response) => {\r\n      if (response?.data?.code == 200) {\r\n        const res = response?.data?.data.companies\r\n        setcompanyData(res.rows)\r\n\r\n      }\r\n    }).catch(err => {\r\n      console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n    });\r\n\r\n  }, [])\r\n\r\n  const enableLoading = () => {\r\n    setLoading(true);\r\n  };\r\n\r\n  const disableLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const getInputClasses = (fieldName) => {\r\n    if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n      return \"is-invalid\";\r\n    }\r\n\r\n    if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n      return \"is-valid\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: userSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      enableLoading();\r\n      addUserInfo(values).then((res) => {\r\n\r\n        if (res?.data?.code === 200) {\r\n          toast.success('New company user added in system')\r\n          props.history.push(slugs.company)\r\n        }\r\n        disableLoading();\r\n      })\r\n        .catch((err) => {\r\n          console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n          disableLoading();\r\n          setSubmitting(false);\r\n          const errorMessage = err.response.data.errorMessage;\r\n          toast.error(errorMessage);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='card col-md-6 offset-md-3'>\r\n          <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Create Company User</h3>\r\n          <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n            <form\r\n              onSubmit={formik.handleSubmit}\r\n\r\n            >\r\n              <div className='d-flex '>\r\n\r\n                <div className=\"form-group form-input-2 mb-3\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    placeholder=\"First Name\"\r\n                    type=\"firstName\"\r\n                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                      \"firstName\"\r\n                    )}`}\r\n                    name=\"firstName\"\r\n                    {...formik.getFieldProps(\"firstName\")}\r\n                  />\r\n                  {formik.touched.firstName && formik.errors.firstName ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group form-input-2 mb-3\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    type=\"lastName\"\r\n                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                      \"lastName\"\r\n                    )}`}\r\n                    name=\"lastName\"\r\n                    {...formik.getFieldProps(\"lastName\")}\r\n                  />\r\n                  {formik.touched.lastName && formik.errors.lastName ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group form-input-2 mb-3\">\r\n                <label>Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  type=\"email\"\r\n                  className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                    \"email\"\r\n                  )}`}\r\n                  name=\"email\"\r\n                  {...formik.getFieldProps(\"email\")}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? (\r\n                  <div>\r\n                    <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n              <div className='d-flex'>\r\n\r\n                <div className=\"form-group form-input-2 mb-3\">\r\n                  <label>Password</label>\r\n\r\n                  <input\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                      \"password\"\r\n                    )}`}\r\n                    name=\"password\"\r\n                    {...formik.getFieldProps(\"password\")}\r\n                  />\r\n                  {formik.touched.password && formik.errors.password ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"form-group form-input-2 mb-3\">\r\n                  <label>Date of Birth</label>\r\n                  <input\r\n                    placeholder=\"Date of Birth\"\r\n                    type=\"date\"\r\n                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                      \"dob\"\r\n                    )}`}\r\n                    name=\"dob\"\r\n                    {...formik.getFieldProps(\"dob\")}\r\n                  />\r\n                  {formik.touched.dob && formik.errors.dob ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='d-flex'>\r\n\r\n\r\n                <div className=\"form-group form-input-2 mb-3\">\r\n                  <label>Phone</label>\r\n                  <input\r\n                    placeholder=\"Phone\"\r\n                    type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                      \"phone\"\r\n                    )}`}\r\n                    name=\"phone\"\r\n                    {...formik.getFieldProps(\"phone\")}\r\n                  />\r\n                  {formik.touched.phone && formik.errors.phone ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group w-50\">\r\n                  <label >Gender</label>\r\n                  <select placeholder=\"Gender\"\r\n                    type=\"gender\"\r\n                    className={`select-input form-control-solid ${getInputClasses(\r\n                      \"gender\"\r\n                    )} p-2`}\r\n                    name=\"gender\"\r\n                    {...formik.getFieldProps(\"gender\")}\r\n                  >\r\n                    <option disabled>Select..</option>\r\n                    <option value=\"male\" >Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    <option value=\"other\">Other</option>\r\n                  </select>\r\n                  {formik.touched.gender && formik.errors.gender ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div className='d-flex'>\r\n                <div className=\"form-group form-input-2 mb-3\">\r\n                  <label>City</label>\r\n                  <input\r\n                    placeholder=\"City\"\r\n                    type=\"city\"\r\n                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                      \"city\"\r\n                    )}`}\r\n                    name=\"city\"\r\n                    {...formik.getFieldProps(\"city\")}\r\n                  />\r\n                  {formik.touched.city && formik.errors.city ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group w-50\">\r\n                  <label >State</label>\r\n                  <select placeholder=\"State\"\r\n                    type=\"state\"\r\n                    className={`select-input form-control-solid ${getInputClasses(\r\n                      \"state\"\r\n                    )} p-2`}\r\n                    name=\"state\"\r\n                    {...formik.getFieldProps(\"state\")}\r\n                  >\r\n                    <option >Select..</option>\r\n                    {stateOptions.map((el) => (\r\n                      <option key={el.value} value={el.value} >{el.value}</option>\r\n                    ))}\r\n                  </select>\r\n                  {formik.touched.state && formik.errors.state ? (\r\n                    <div>\r\n                      <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                    </div>\r\n                  ) : null}\r\n\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"form-group w-50\">\r\n                <label >Company</label>\r\n                <select placeholder=\"Company\"\r\n                  type=\"company\"\r\n                  className={`select-input form-control-solid ${getInputClasses(\r\n                    \"company\"\r\n                  )} p-2`}\r\n                  name=\"company\"\r\n                  {...formik.getFieldProps(\"company\")}\r\n                >\r\n                  <option >Select..</option>\r\n                  {companyData.map((el) => (\r\n                    <option key={el.id} value={el.id} >{el.name}</option>\r\n                  ))}\r\n                </select>\r\n                {formik.touched.company && formik.errors.company ? (\r\n                  <div>\r\n                    <div className=\"fv-help-block\">{formik.errors.company}</div>\r\n                  </div>\r\n                ) : null}\r\n\r\n              </div>\r\n              <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.company} />\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addUserInfo } from \"resources/serverReq/admin/user\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../../common/common.css\";\r\n\r\n\r\nexport default function EditCompanyUser(props) {\r\n    const data = props.location.state\r\n    const initialValues = {\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        date: data.date,\r\n        gender: data.gender,\r\n        phone: data.phone,\r\n        city: data.city,\r\n        role: data.role,\r\n        password: data.password,\r\n        state: data.state,\r\n        company: data.name,\r\n        id: data.id\r\n\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const userSchema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            addUserInfo(values).then((res) => {\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('New patient added in system')\r\n                    props.history.push(slugs.patient)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Edit Company User</h3>\r\n                    <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n                            <div className='d-flex '>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"email\"\r\n                                    )}`}\r\n                                    name=\"email\"\r\n                                    {...formik.getFieldProps(\"email\")}\r\n                                />\r\n                                {formik.touched.email && formik.errors.email ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Password</label>\r\n\r\n                                    <input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"password\"\r\n                                        )}`}\r\n                                        name=\"password\"\r\n                                        {...formik.getFieldProps(\"password\")}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >Gender</label>\r\n                                    <select placeholder=\"Gender\"\r\n                                        type=\"gender\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"gender\"\r\n                                        )} p-2`}\r\n                                        name=\"gender\"\r\n                                        {...formik.getFieldProps(\"gender\")}\r\n                                    >\r\n                                        <option disabled>Select..</option>\r\n                                        <option value=\"male\" >Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    {formik.touched.gender && formik.errors.gender ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <input\r\n                                placeholder=\"id\"\r\n                                type=\"id\"\r\n                                className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                    \"id\"\r\n                                )}`}\r\n                                name=\"id\"\r\n                                hidden={true}\r\n                                value={data.id}\r\n                                {...formik.getFieldProps(\"id\")}\r\n                            />\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.company} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","\r\nimport moment from 'moment';\r\nimport React from 'react';\r\n\r\nexport default function ViewCompanyUser(props) {\r\n\r\n    const data = props.location.state\r\n    console.log(\"🚀 ~ file: PatientView.js ~ line 7 ~ PatientView ~ data\", data)\r\n    return <>\r\n\r\n        <div className=\"main\">\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <div className=\"card-body\">\r\n                        <i className=\"fa fa-pen fa-xs edit\"></i>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.firstName + \" \" + data.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>DOB:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.dob}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Gender</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.gender}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>City</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.city}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>State</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.state}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Status</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.status ? <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                        <span className='label label-lg label-light-danger label-inline'>Inactive</span>}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Created On</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{moment(data.createdAt).format('DD-MMM-YY')}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>;\r\n}\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { updateCompany } from \"resources/serverReq/admin/company\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nexport default function EditCompany(props) {\r\n\r\n    console.log(\"=========>\", props)\r\n\r\n    const data = props?.location?.state\r\n    const initialValues = {\r\n        name: data.name,\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const companySchema = Yup.object().shape({\r\n\r\n        name: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: companySchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            console.log(\"************\", values)\r\n            updateCompany(data.id, values).then((res) => {\r\n\r\n                console.log(\"res==========>\", res)\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Company edited in system')\r\n                    props.history.push(slugs.company)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>Edit Company</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Device Name</label>\r\n                                <input\r\n                                    placeholder=\"Device Name\"\r\n                                    type=\"name\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"name\"\r\n                                    )}`}\r\n                                    name=\"name\"\r\n                                    {...formik.getFieldProps(\"name\")}\r\n                                />\r\n                                {formik.touched.name && formik.errors.name ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.name}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.company} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { sendSupportMail } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../common/common.css\";\r\n\r\n\r\nexport default function Contact(props) {\r\n    const initialValues = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        message: \"\",\r\n\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const contactUsSchema = Yup.object().shape({\r\n\r\n        name: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n\r\n        message: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(150, \"Maximum 150 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: contactUsSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            sendSupportMail(values).then((res) => {\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('We will contact you shortly!')\r\n                    props.history.push(slugs.dashboard)\r\n\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    // toast.error(errorMessage, {\r\n                    //     closeOnClick: true,\r\n                    //     hideProgressBar: false,\r\n                    // })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className='container-xl row'>\r\n\r\n            <div className=\"justify-content-center align-items-center col-sm-6\">\r\n                <div className='support-add mb-5 text-center rounded'>\r\n                    <span>Email ID: contact@dosetap.com</span><br />\r\n\r\n                    <span>Contact No: +91- 74838 39811</span>\r\n\r\n\r\n                </div>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n\r\n                >\r\n\r\n                    <div className=\"form-group form-input-2 mb-3\">\r\n                        <label>Name</label>\r\n                        <input\r\n                            placeholder=\"Name\"\r\n                            type=\"name\"\r\n                            className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                \"name\"\r\n                            )}`}\r\n                            name=\"name\"\r\n                            {...formik.getFieldProps(\"name\")}\r\n                        />\r\n                        {formik.touched.name && formik.errors.name ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.name}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"form-group form-input-2 mb-3\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                \"email\"\r\n                            )}`}\r\n                            name=\"email\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <div className=\"form-group form-input-2 mb-3\">\r\n                        <label>Phone</label>\r\n                        <input\r\n                            placeholder=\"Phone\"\r\n                            type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                            className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                \"phone\"\r\n                            )}`}\r\n                            name=\"phone\"\r\n                            {...formik.getFieldProps(\"phone\")}\r\n                        />\r\n                        {formik.touched.phone && formik.errors.phone ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"form-group form-input-2 mb-3\">\r\n                        <label>Message</label>\r\n                        <textarea\r\n                            placeholder=\"text...\"\r\n                            type=\"message\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"message\"\r\n                            )}`}\r\n                            rows=\"3\"\r\n                            cols=\"3\"\r\n                            name=\"message\"\r\n                            {...formik.getFieldProps(\"message\")}\r\n                        />\r\n                        {formik.touched.message && formik.errors.message ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.message}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group form-btns d-flex flex-wrap justify-content-center align-items-center\" style={{ marginTop: \"45px\" }}>\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={formik.isSubmitting}\r\n                            className={`btn referral-button`}\r\n                        >\r\n                            <span className='px-3'>Submit</span>\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            disabled={formik.isSubmitting}\r\n                            className={`btn back-button`}\r\n                        >\r\n                            <span className='px-3'>Cancel</span>\r\n                        </button>\r\n                    </div> */}\r\n                    <FormBtns formik={formik.isSubmitting} cancelRoute={\"\"} />\r\n                </form>\r\n            </div>\r\n            <div className='col-sm-6'>\r\n                <img src=\"assets/img/help.gif\" alt=\"gif\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAllDevice(params) {\r\n    return await axios.get(\"/admin/devices\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function getAllMappedUserDevices(params) {\r\n    return await axios.get(\"/admin/complete-mappings\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function bulkAddDevice(formData) {\r\n    return await axios.post('/admin/bulk-device', formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    });\r\n}\r\n\r\nexport async function getAllMappedCompanyDevices(params) {\r\n    return await axios.get(\"/admin/mappings\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function editDevice(id, data) {\r\n    return await axios.put(`/admin/device/${id}`, data);\r\n\r\n}\r\n\r\nexport async function blockDeviceMappingStatus(id) {\r\n    return await axios.put(`/admin/device-mapping/${id}/status`);\r\n\r\n}\r\n\r\nexport async function mapDevice(data) {\r\n    return await axios.post(`/admin/mappings`, data);\r\n\r\n}\r\n\r\nexport async function addDeviceInfo(data) {\r\n    return await axios.post(`/admin/device`, data);\r\n\r\n}","import { FormBtns } from 'components/table';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addDeviceInfo } from 'resources/serverReq/admin/device';\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from 'yup';\r\nimport '../../common/common.css';\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    serialNumber: '',\r\n    firmwareVersion: ''\r\n};\r\n\r\nexport default function AddDevice(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const deviceSchema = Yup.object().shape({\r\n        name: Yup.string()\r\n            .min(3, 'Minimum 3 symbols')\r\n            .max(50, 'Maximum 50 symbols')\r\n            .required('Required'),\r\n        description: Yup.string()\r\n            .min(10, 'Minimum 10 symbols')\r\n            .max(150, 'Maximum 150 symbols')\r\n            .required('Required'),\r\n        serialNumber: Yup.string()\r\n            .min(3, 'Minimum 3 symbols')\r\n            .max(50, 'Maximum 50 symbols')\r\n            .required('Required'),\r\n        firmwareVersion: Yup.string().required('Required').max(7).min(7)\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return 'is-invalid';\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return 'is-valid';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: deviceSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            addDeviceInfo(values)\r\n                .then((res) => {\r\n                    if (res?.data?.code === 200) {\r\n                        toast.success('New Device added in system');\r\n                        props.history.push(slugs.device);\r\n                    }\r\n                    disableLoading();\r\n                })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false\r\n                    });\r\n                });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>\r\n                        Add New Device\r\n                    </h3>\r\n                    <div className='container-xl'>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Device Name</label>\r\n                                <input\r\n                                    placeholder='Device Name'\r\n                                    type='name'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'name'\r\n                                    )}`}\r\n                                    name='name'\r\n                                    {...formik.getFieldProps('name')}\r\n                                />\r\n                                {formik.touched.name && formik.errors.name ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>{formik.errors.name}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Serial Number</label>\r\n                                <input\r\n                                    placeholder='Serial Number'\r\n                                    type='serialNumber'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'serialNumber'\r\n                                    )}`}\r\n                                    name='serialNumber'\r\n                                    {...formik.getFieldProps('serialNumber')}\r\n                                />\r\n                                {formik.touched.serialNumber && formik.errors.serialNumber ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>\r\n                                            {formik.errors.serialNumber}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Firmware Version</label>\r\n                                <input\r\n                                    placeholder='X.X.X.X'\r\n                                    type='firmwareVersion'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'firmwareVersion'\r\n                                    )}`}\r\n                                    name='firmwareVersion'\r\n                                    {...formik.getFieldProps('firmwareVersion')}\r\n                                />\r\n                                {formik.touched.firmwareVersion && formik.errors.firmwareVersion ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>\r\n                                            {formik.errors.firmwareVersion}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Device Description</label>\r\n                                <textarea\r\n                                    placeholder='description...'\r\n                                    rows={3}\r\n                                    cols={3}\r\n                                    type='description'\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        'description'\r\n                                    )}`}\r\n                                    name='description'\r\n                                    {...formik.getFieldProps('description')}\r\n                                />\r\n                                {formik.touched.description && formik.errors.description ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>\r\n                                            {formik.errors.description}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.device} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { TableColumn } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getAllMappedCompanyDevices } from 'resources/serverReq/admin/device'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function AllMappedCompany() {\r\n    const [userData, setUserData] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query\r\n        };\r\n        getAllMappedCompanyDevices(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.deviceMappings\r\n                setUserData(res.rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n\r\n    }, [query, page])\r\n\r\n    async function blockCompany(id) {\r\n        // await blockDeviceStatus(id).then((res) => {\r\n\r\n        //     console.log(\"🚀 ~ file: Company.js ~ line 39 ~ awaitblockDeviceStatus ~ res.data\", res.data)\r\n        //     if (res.data.code === 200) {\r\n        //         const userLists = userData.slice();\r\n        //         for (const user of userLists) {\r\n        //             if (user.id === id) {\r\n        //                 user.status = res?.data?.data?.user?.status;\r\n\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //         setUserData(userLists);\r\n        //     }\r\n        // }).catch(function (error) {\r\n        //     console.log(error.response);\r\n        // });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"search-box justify-content-end\">\r\n\r\n                                <input\r\n                                    onChange={(event) => setQuery(event.target.value)}\r\n                                    type=\"text\"\r\n                                    value={query}\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Search&hellip;\"\r\n                                    autoFocus\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Company Name\", \"Device No.\", \"created On\"]} />\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td >\r\n\r\n\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.company.name}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {el.device.serialNumber}\r\n                                                    </td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                                    {/* <td>\r\n\r\n                                    <div className='d-flex'>\r\n                                        <div className='d-flex justify-content-center align-items-center'>\r\n                                            <Link to={{\r\n                                                pathname: `${SLUGS.viewMappedUser}`,\r\n                                                state: el\r\n                                            }}\r\n                                                style={{ backgroundColor: \"#006FD8\", padding: \"6px\" }}\r\n                                                className=\"btn btn-xs btn-sm text-light sm-btn svg-icon-button\"\r\n                                                title=\"Invite User text-info\"\r\n\r\n                                            >\r\n                                                <span className=\"svg-icon menu-icon mr-2 text-light\">\r\n                                                    <IconDocument /> View Company Users\r\n                                                </span>\r\n\r\n                                            </Link>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </td> */}\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { TableColumn } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllCompany } from 'resources/serverReq/admin/company';\r\nimport { getAllMappedUserDevices } from 'resources/serverReq/admin/device';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nexport default function AllMappedUsers() {\r\n    const [userData, setUserData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [queryPatient, setQueryPatient] = useState('');\r\n    const [queryDoctor, setQueryDoctor] = useState('');\r\n    const [queryCompany, setQueryCompany] = useState('');\r\n    const [queryDevice, setQueryDevice] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [companyId, setCompanyId] = useState(null);\r\n    const [companyOptions, setCompanyOptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            searchDevice: queryDevice,\r\n            searchPatient: queryPatient,\r\n            searchDoctor: queryDoctor,\r\n            searchCompany: queryCompany,\r\n            company_id: companyId\r\n        };\r\n        getAllCompany()\r\n            .then(({ data }) => {\r\n                const companies = data.data.companies.rows;\r\n                let options = [];\r\n                companies.map((val) => {\r\n                    options.push({\r\n                        value: val.id,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setCompanyOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log('🚀 ~ file: Adherence.js ~ line 96 ~ useEffect ~ err', err);\r\n            });\r\n        getAllMappedUserDevices(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                setDataNotAvailable(false);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.deviceMappings;\r\n                    setUserData(res.rows);\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    if (res.count == 0) setDataNotAvailable(true);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setDataNotAvailable(false);\r\n            });\r\n    }, [queryPatient, queryDoctor, queryCompany, queryDevice, page]);\r\n\r\n    async function blockCompany(id) {\r\n        // await blockDeviceStatus(id).then((res) => {\r\n        //     console.log(\"🚀 ~ file: Company.js ~ line 39 ~ awaitblockDeviceStatus ~ res.data\", res.data)\r\n        //     if (res.data.code === 200) {\r\n        //         const userLists = userData.slice();\r\n        //         for (const user of userLists) {\r\n        //             if (user.id === id) {\r\n        //                 user.status = res?.data?.data?.user?.status;\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n        //         setUserData(userLists);\r\n        //     }\r\n        // }).catch(function (error) {\r\n        //     console.log(error.response);\r\n        // });\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <div  style={{ display: 'flex'}}>\r\n                            <input\r\n                                onChange={(event) => setQueryPatient(event.target.value)}\r\n                                type='text'\r\n                                value={queryPatient}\r\n                                className='form-control m-2'\r\n                                placeholder='Search Patient'\r\n                            />\r\n\r\n                            <input\r\n                                onChange={(event) => setQueryDoctor(event.target.value)}\r\n                                type='text'\r\n                                value={queryDoctor}\r\n                                className='form-control m-2'\r\n                                placeholder='Search Doctor'\r\n                            />\r\n                            <input\r\n                                onChange={(event) => setQueryDevice(event.target.value)}\r\n                                type='text'\r\n                                value={queryDevice}\r\n                                className='form-control m-2'\r\n                                placeholder='Search Device'\r\n                            />\r\n                            <input\r\n                                onChange={(event) => setQueryCompany(event.target.value)}\r\n                                type='text'\r\n                                value={queryCompany}\r\n                                className='form-control m-2'\r\n                                placeholder='Search Company'\r\n                            />\r\n         </div>\r\n            {!isLoading ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn\r\n                                columns={[\r\n                                    'Company Name',\r\n                                    'Doctor Name',\r\n                                    'Patient Name',\r\n                                    'Device No.',\r\n                                    'created On',\r\n                                    'lastSync'\r\n                                ]}\r\n                            />\r\n                            <tbody>\r\n                                {dataNotAvailable ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    userData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <div className='d-flex flex-row bd-highlight p-2 '>\r\n                                                    {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                    <span className='p-2'>{el.company.name}</span>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                {el.doctor.firstName + ' ' + el.doctor.lastName}\r\n                                            </td>\r\n                                            <td>\r\n                                                {el.patient.firstName + ' ' + el.patient.lastName}\r\n                                            </td>\r\n                                            <td>{el.device.serialNumber}</td>\r\n                                            <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                            <td>\r\n                                                {moment(el.lastSync)\r\n                                                    .utc()\r\n                                                    .format('DD-MMM-YY hh:mm a')}\r\n                                            </td>\r\n                                            {/* <td>\r\n\r\n                                    <div className='d-flex'>\r\n                                        <div className='d-flex justify-content-center align-items-center'>\r\n                                            <Link to={{\r\n                                                pathname: `${SLUGS.viewMappedUser}`,\r\n                                                state: el\r\n                                            }}\r\n                                                style={{ backgroundColor: \"#006FD8\", padding: \"6px\" }}\r\n                                                className=\"btn btn-xs btn-sm text-light sm-btn svg-icon-button\"\r\n                                                title=\"Invite User text-info\"\r\n\r\n                                            >\r\n                                                <span className=\"svg-icon menu-icon mr-2 text-light\">\r\n                                                    <IconDocument /> View Company Users\r\n                                                </span>\r\n\r\n                                            </Link>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </td> */}\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Loader from 'components/table/Loader'\r\nimport slugs from 'resources/slugs';\r\nimport { bulkAddDevice } from 'resources/serverReq/admin/device';\r\n\r\n\r\nexport default function BulkAddDevice() {\r\n    const history = useHistory();\r\n    const [csv, setCSV] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleFileSelect = (e) => {\r\n        setCSV(e.target.files[0]);\r\n    };\r\n\r\n    const handleFileUpload = async (event) => {\r\n        if (!csv) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        let formData = new FormData();\r\n        formData.append('file', csv);\r\n        bulkAddDevice(formData)\r\n        .then((response) => {\r\n            if (response?.data?.code == 200) {\r\n                setCSV(null);\r\n                toast.success('Successfully Uploaded', {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false\r\n                });\r\n                handleCancel();\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.response?.data?.errorMessage?.errorDetails);\r\n            toast.error(err.response?.data?.errorMessage?.message, {\r\n                closeOnClick: true,\r\n                hideProgressBar: false\r\n            });\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        history.push(slugs.device); \r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loading && <Loader />}\r\n            <h3 className=\"mb-4\">Add Multiple Devices</h3>\r\n            <div className=\"mb-3\">\r\n                <input type=\"file\" accept=\".csv\" onChange={handleFileSelect} />\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-secondary mr-2\" onClick={handleCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className=\"ms-3 btn btn-primary\" onClick={handleFileUpload}>\r\n                    Upload File\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { IconDocument } from 'assets/icons'\r\nimport { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getAllCompany } from 'resources/serverReq/admin/company'\r\nimport { blockDeviceMappingStatus, getAllDevice } from 'resources/serverReq/admin/device'\r\nimport SLUGS from 'resources/slugs'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\nimport SelectInput from '../SelectInput'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nexport default function Device() {\r\n\r\n\r\n    const [deviceData, setDeviceData] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [status, setStatus] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [companyId, setCompanyId] = useState(null);\r\n    const [companyOptions, setCompanyOptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllCompany()\r\n            .then(({ data }) => {\r\n                const companies = data.data.companies.rows;\r\n                let options = [];\r\n                companies.map((val) => {\r\n                    options.push({\r\n                        value: val.id,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setCompanyOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"🚀 ~ file: Adherence.js ~ line 96 ~ useEffect ~ err\", err)\r\n            });\r\n\r\n    }, [])\r\n\r\n    const history = useHistory();\r\n\r\n    const handleBulkAddClick = () => {\r\n        history.push(SLUGS.addBulkDevice);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n            status: status,\r\n            company_id: companyId\r\n\r\n        };\r\n        getAllDevice(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.devices\r\n                setDeviceData(res.rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n    }, [query, status, page, companyId])\r\n\r\n    async function blockDeviceMapping(id) {\r\n        await blockDeviceMappingStatus(id).then((res) => {\r\n\r\n            if (res.data.code === 200) {\r\n                const deviceLists = deviceData.slice();\r\n                for (const device of deviceLists) {\r\n                    if (device.device_mapping.id === id) {\r\n                        device.device_mapping.status = !device.device_mapping.status;\r\n                        break;\r\n                    }\r\n                }\r\n                setDeviceData(deviceLists);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=''>\r\n                                <button className=\"btn btn-primary mx-2\" onClick={handleBulkAddClick}>\r\n                                  Add Multiple Devices\r\n                                </button>\r\n                             <TableHeader btnTitle={\"+ Add Device \"} route={SLUGS.addDevice} setQuery={setQuery} query={query} />\r\n                            <SelectInput status={status} setStatus={setStatus} companyOptions={companyOptions} companyId={companyId} setCompanyId={setCompanyId} />\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Description\", \"Serial Number\", \"Company\", \"Status\", \"Firmware\", \"Created On\", \"Actions\"]} />\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td></tr> :\r\n                                            deviceData.map((el) => (\r\n                                                <tr key={`key-${el.id}`}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.name}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td className='description-btn'>{el.description}</td>\r\n                                                    <td>{el.serialNumber}</td>\r\n                                                    <td>\r\n                                                        {/* {\r\n                                                            el.isSold == false ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Not Sold</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Sold Out</span>\r\n                                                        } */}\r\n                                                        {el?.device_mapping?.company?.name}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el?.device_mapping?.status && el?.device_mapping?.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {el.firmwareVersion}\r\n                                                    </td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                                    <td className='d-flex'>\r\n                                                        {el.device_mapping == null || true ?\r\n                                                            <div className='d-flex justify-content-center align-items-center'>\r\n                                                                <Link to={{\r\n                                                                    pathname: `${SLUGS.mapDevice}`,\r\n                                                                    state: el\r\n                                                                }}\r\n                                                                    style={{ backgroundColor: \"#006FD8\", padding: \"6px\" }}\r\n                                                                    className=\"btn btn-xs btn-sm text-light sm-btn svg-icon-button\"\r\n                                                                    title=\"Invite User text-info\"\r\n\r\n                                                                >\r\n                                                                    <span className=\"svg-icon menu-icon mr-2 text-light\">\r\n                                                                        <IconDocument fill={\"white\"} /> Map Device\r\n                                                                    </span>\r\n\r\n                                                                </Link>\r\n                                                            </div> : <></>\r\n                                                        }\r\n                                                        <TableLastChild editRoute={SLUGS.editDevice} editData={el} block={blockDeviceMapping} blockId={el.device_mapping?.id} BlockCondition={el.device_mapping?.status} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { FormBtns } from 'components/table';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { editDevice } from 'resources/serverReq/admin/device';\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from 'yup';\r\nimport '../../common/common.css';\r\n\r\nexport default function EditDevice(props) {\r\n    const data = props?.location?.state;\r\n    const initialValues = {\r\n        name: data.name,\r\n        description: data.description,\r\n        serialNumber: data.serialNumber,\r\n        firmwareVersion: data.firmwareVersion\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const userSchema = Yup.object().shape({\r\n        name: Yup.string()\r\n            .min(3, 'Minimum 3 symbols')\r\n            .max(50, 'Maximum 50 symbols')\r\n            .required('Required'),\r\n        description: Yup.string()\r\n            .min(10, 'Minimum 10 symbols')\r\n            .max(150, 'Maximum 150 symbols')\r\n            .required('Required'),\r\n        serialNumber: Yup.string()\r\n            .min(3, 'Minimum 3 symbols')\r\n            .max(50, 'Maximum 50 symbols')\r\n            .required('Required'),\r\n        firmwareVersion: Yup.string().required('Required').max(7).min(7)\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return 'is-invalid';\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return 'is-valid';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            editDevice(data.id, values)\r\n                .then((res) => {\r\n                    if (res?.data?.code === 200) {\r\n                        toast.success('Device updated in system');\r\n                        props.history.push(slugs.device);\r\n                    }\r\n                    disableLoading();\r\n                })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false\r\n                    });\r\n                });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>\r\n                        Edit Device\r\n                    </h3>\r\n                    <div className='container-xl'>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Device Name</label>\r\n                                <input\r\n                                    placeholder='Device Name'\r\n                                    type='name'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'name'\r\n                                    )}`}\r\n                                    name='name'\r\n                                    {...formik.getFieldProps('name')}\r\n                                />\r\n                                {formik.touched.name && formik.errors.name ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>{formik.errors.name}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Serial Number</label>\r\n                                <input\r\n                                    placeholder='Serial Number'\r\n                                    type='serialNumber'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'serialNumber'\r\n                                    )}`}\r\n                                    name='serialNumber'\r\n                                    {...formik.getFieldProps('serialNumber')}\r\n                                />\r\n                                {formik.touched.serialNumber && formik.errors.serialNumber ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>\r\n                                            {formik.errors.serialNumber}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Firmware Version</label>\r\n                                <input\r\n                                    placeholder='X.X.X.X'\r\n                                    type='firmwareVersion'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'firmwareVersion'\r\n                                    )}`}\r\n                                    name='firmwareVersion'\r\n                                    {...formik.getFieldProps('firmwareVersion')}\r\n                                />\r\n                                {formik.touched.firmwareVersion && formik.errors.firmwareVersion ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>\r\n                                            {formik.errors.firmwareVersion}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Device Description</label>\r\n                                <textarea\r\n                                    placeholder='description...'\r\n                                    rows={3}\r\n                                    cols={3}\r\n                                    type='description'\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        'description'\r\n                                    )}`}\r\n                                    name='description'\r\n                                    {...formik.getFieldProps('description')}\r\n                                />\r\n                                {formik.touched.description && formik.errors.description ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>\r\n                                            {formik.errors.description}\r\n                                        </div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.device} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getAllCompany } from 'resources/serverReq/admin/company';\r\nimport { mapDevice } from \"resources/serverReq/admin/device\";\r\nimport { getAllUsers } from \"resources/serverReq/admin/user\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nexport default function MapDevice(props) {\r\n\r\n    const data = props?.location?.state\r\n    const initialValues = {\r\n        device_id: String(data.id),\r\n        company_id: \"\",\r\n    }\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [companyData, setCompanyData] = useState([])\r\n    const [doctorData, setDoctorData] = useState([])\r\n    const companySchema = Yup.object().shape({\r\n\r\n\r\n        company_id: Yup.string()\r\n            .required(\"Required\"),\r\n\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n\r\n            role: \"doctor\",\r\n\r\n        };\r\n        getAllUsers(params).then((response) => {\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.users\r\n                setDoctorData(res.rows)\r\n\r\n            }\r\n\r\n        }).catch((err) => {\r\n            console.log(err)\r\n\r\n        })\r\n\r\n        getAllCompany().then((response) => {\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data?.companies\r\n                setCompanyData(res.rows)\r\n\r\n            }\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n    }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: companySchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            mapDevice(values).then((res) => {\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Device has been mapped in system')\r\n                    props.history.push(slugs.device)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>Add Device Mapping</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Device Name</label>\r\n                                <input\r\n                                    placeholder=\"Device Name\"\r\n                                    type=\"device_id\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"device_id\"\r\n                                    )}`}\r\n                                    name=\"name\"\r\n                                    value={data.name}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"form-group \">\r\n                                <label >Company</label>\r\n                                <select placeholder=\"Company\"\r\n                                    type=\"company_id\"\r\n                                    className={`select-input form-control-solid ${getInputClasses(\r\n                                        \"company_id\"\r\n                                    )} p-2`}\r\n                                    name=\"company_id\"\r\n                                    {...formik.getFieldProps(\"company_id\")}\r\n                                >\r\n                                    <option >Select..</option>\r\n                                    {companyData.map((el) => (\r\n                                        <option key={el.id} value={el.id} >{el.name}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {formik.touched.company_id && formik.errors.company_id ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.company_id}</div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                            </div>\r\n\r\n                            {/* <div className=\"form-group \">\r\n                                <label >Doctor</label>\r\n                                <select placeholder=\"Doctor\"\r\n                                    type=\"doctor_id\"\r\n                                    className={`select-input form-control-solid ${getInputClasses(\r\n                                        \"doctor_id\"\r\n                                    )} p-2`}\r\n                                    name=\"doctor_id\"\r\n                                    {...formik.getFieldProps(\"doctor_id\")}\r\n                                >\r\n                                    <option >Select..</option>\r\n                                    {doctorData.map((el) => (\r\n                                        <option key={el.id} value={el.id} >{el.firstName + \" \" + el.lastName}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {formik.touched.doctor_id && formik.errors.doctor_id ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.doctor_id}</div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                            </div> */}\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.device} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addUserInfo } from \"resources/serverReq/admin/user\";\r\nimport { getStates } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nexport default function AddDoctor(props) {\r\n    const initialValues = {\r\n        firstName: \"Himanshu\",\r\n        lastName: \"Rajput\",\r\n        email: \"hrajput2507@gmail.com\",\r\n        dob: new Date().toISOString().slice(0, 10),\r\n        gender: \"Male\",\r\n        phone: \"1234567890\",\r\n        city: \"Noida\",\r\n        role: \"doctor\",\r\n        password: \"Qwerty@1\",\r\n        state: \"\",\r\n        reference_code: \"\"\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const userSchema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n        reference_code: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    useEffect(() => {\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n        });\r\n\r\n\r\n    }, [])\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            addUserInfo(values).then((res) => {\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('New doctor added in system')\r\n                    props.history.push(slugs.doctor)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Add Doctor</h3>\r\n                    <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n                            <div className='d-flex '>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Email</label>\r\n                                    <input\r\n                                        placeholder=\"Email\"\r\n                                        type=\"email\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"email\"\r\n                                        )}`}\r\n                                        name=\"email\"\r\n                                        {...formik.getFieldProps(\"email\")}\r\n                                    />\r\n                                    {formik.touched.email && formik.errors.email ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Password</label>\r\n\r\n                                    <input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"password\"\r\n                                        )}`}\r\n                                        name=\"password\"\r\n                                        {...formik.getFieldProps(\"password\")}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        placeholder=\"Date of Birth\"\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                                <div className='d-flex'>\r\n                                    <div className=\"form-group form-input-2 mb-3\">\r\n                                        <label>Gender</label>\r\n                                        <input\r\n                                            placeholder=\"Gender\"\r\n                                            type=\"gender\"\r\n                                            className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                                \"gender\"\r\n                                            )}`}\r\n                                            name=\"gender\"\r\n                                            {...formik.getFieldProps(\"gender\")}\r\n                                        />\r\n                                        {formik.touched.gender && formik.errors.gender ? (\r\n                                            <div>\r\n                                                <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                            </div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Reference Code</label>\r\n                                    <input\r\n                                        placeholder=\"Reference Code\"\r\n                                        type=\"reference_code\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"reference_code\"\r\n                                        )}`}\r\n                                        name=\"reference_code\"\r\n                                        {...formik.getFieldProps(\"reference_code\")}\r\n                                    />\r\n                                    {formik.touched.reference_code && formik.errors.reference_code ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.reference_code}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.doctor} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getAllCompany } from 'resources/serverReq/admin/company'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport SLUGS from 'resources/slugs'\r\nimport { blockUsers, getAllUsers } from \"../../../resources/serverReq/admin/user\"\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\nimport SelectInput from '../SelectInput'\r\n\r\nexport default function Doctor() {\r\n    let [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const [companyId, setCompanyId] = useState(null);\r\n    const [companyOptions, setCompanyOptions] = useState([]);\r\n\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"doctor\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state,\r\n        company_id: companyId\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllCompany()\r\n            .then(({ data }) => {\r\n                const companies = data.data.companies.rows;\r\n                let options = [];\r\n                companies.map((val) => {\r\n                    options.push({\r\n                        value: val.id,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setCompanyOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"🚀 ~ file: Adherence.js ~ line 96 ~ useEffect ~ err\", err)\r\n            });\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getAllUsers(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.users\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n            }\r\n            setIsLoading(false)\r\n\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n    }, [status, query, state, page, companyId])\r\n\r\n    async function blockedUser(id) {\r\n        await blockUsers(id).then((res) => {\r\n            if (res.data.code === 200) {\r\n                const userLists = userData.slice();\r\n                for (const user of userLists) {\r\n                    if (user.id === id) {\r\n                        user.status = res?.data?.data?.user?.status;\r\n\r\n                        break;\r\n                    }\r\n                }\r\n                setUserData(userLists);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader btnTitle={\"+ Add Doctor\"} route={SLUGS.addDoctor} setQuery={setQuery} query={query} />\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} companyOptions={companyOptions} companyId={companyId} setCompanyId={setCompanyId} />\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Code\", \"Mobile\", \"State\", \"Status\", \"Company\", \"Created On\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.firstName + \" \" + el.lastName}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td>{el.email}</td>\r\n                                                    <td>{el.reference_code}</td>\r\n                                                    <td>{el.phone}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{el.company_associated}</td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY hh:mm a')}</td>\r\n                                                    <td>\r\n                                                        <TableLastChild editRoute={SLUGS.editDoctor} editData={el} block={blockedUser} blockId={el.id} BlockCondition={el.status} path={SLUGS.viewPatientDoctor + \"/\" + el.id} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { TableColumn, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport SLUGS from 'resources/slugs'\r\nimport { blockUsers, getAllPatientsByDoctor } from \"../../../resources/serverReq/admin/user\"\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\nimport SelectInput from '../SelectInput'\r\n\r\nexport default function DoctorPatient() {\r\n    const [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"user\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state\r\n\r\n    };\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getAllPatientsByDoctor(id, params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data?.users\r\n                const rows = res.rows.map(u => u.patient)\r\n                setUserData(rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n    }, [status, query, state, page])\r\n\r\n    async function blockedUser(id) {\r\n        await blockUsers(id).then((res) => {\r\n            if (res.data.code === 200) {\r\n                const userLists = userData.slice();\r\n                for (const user of userLists) {\r\n                    if (user.id === id) {\r\n                        user.status = res?.data?.data?.user?.status;\r\n\r\n                        break;\r\n                    }\r\n                }\r\n                setUserData(userLists);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error.response);\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} />\r\n\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"State\", \"Status\", \"Adherence\", \"Created On\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.firstName + \" \" + el.lastName}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{el.email}</td>\r\n                                                    <td>{el.gender}</td>\r\n                                                    <td>{el.phone}</td>\r\n                                                    <td>{el.city}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline btn-size'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline btn-size'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{el.adherence}%</td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                                    <td >\r\n                                                        <div className='d-flex'>\r\n                                                            <TableLastChild editRoute={SLUGS.editPatient} editData={el} block={blockedUser} blockId={el.id} BlockCondition={el.status} path={SLUGS.viewPatient} />\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n                        </div>\r\n                    </div> : <Loader />\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { FormBtns } from 'components/table';\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { updateUserInfo } from \"resources/serverReq/admin/user\";\r\nimport { getStates } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function EditDoctor(props) {\r\n    const data = props?.location?.state\r\n    const initialValues = {\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        dob: data.dob,\r\n        gender: data.gender,\r\n        phone: data.phone,\r\n        city: data.city,\r\n        role: \"doctor\",\r\n        state: data.state,\r\n        reference_code: data.reference_code,\r\n\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const userSchema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        role: Yup.string()\r\n            .required(\"Required\"),\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n        reference_code: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n    useEffect(() => {\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n    }, [])\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n\r\n            updateUserInfo(data.id, values).then((res) => {\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Doctor edited in system')\r\n                    props.history.push(slugs.doctor)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center mt-5 mb-5'>Edit Doctor</h3>\r\n                    <div className=\"d-flex justify-content-center align-items-center container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n                        >\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        \"email\"\r\n                                    )}`}\r\n                                    name=\"email\"\r\n                                    {...formik.getFieldProps(\"email\")}\r\n                                />\r\n                                {formik.touched.email && formik.errors.email ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Gender</label>\r\n                                    <input\r\n                                        placeholder=\"Gender\"\r\n                                        type=\"gender\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"gender\"\r\n                                        )}`}\r\n                                        name=\"gender\"\r\n                                        {...formik.getFieldProps(\"gender\")}\r\n                                    />\r\n                                    {formik.touched.gender && formik.errors.gender ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        placeholder=\"Date of Birth\"\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Reference Code</label>\r\n                                    <input\r\n                                        placeholder=\"Reference Code\"\r\n                                        type=\"reference_code\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"reference_code\"\r\n                                        )}`}\r\n                                        name=\"reference_code\"\r\n                                        {...formik.getFieldProps(\"reference_code\")}\r\n                                    />\r\n                                    {formik.touched.reference_code && formik.errors.reference_code ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.reference_code}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.doctor} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { axios } from \"../axios\";\r\n\r\nexport async function getAllFeeds(params) {\r\n    return await axios.get(\"admin/feeds\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function createFeed(data) {\r\n    return await axios.post(`/admin/feed`, data);\r\n\r\n}\r\n\r\nexport async function uploadMedia(data) {\r\n    return await axios.post(`/admin/upload`, data);\r\n\r\n}\r\n\r\nexport async function editFeed(id, data) {\r\n    return await axios.put(`/admin/feed/${id}`, data);\r\n\r\n}\r\n\r\nexport async function blockFeed(id) {\r\n    return await axios.put(`/admin/feed/${id}/status`);\r\n\r\n}\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport Dropzone from \"react-dropzone\";\r\nimport { toast } from 'react-toastify';\r\nimport { createFeed, uploadMedia } from \"resources/serverReq/admin/feed\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\nimport \"./style.css\";\r\n\r\nexport default function CreateFeed(props) {\r\n    const [fileNames, setFileNames] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [media, setMedia] = useState(null);\r\n    const [mediaType, setMediaType] = useState(\"\")\r\n    const handleDrop = acceptedFiles => {\r\n        setFileNames(acceptedFiles.map(file => file.name));\r\n        setMedia(acceptedFiles[0])\r\n    }\r\n    const initialValues = {\r\n        title: \"dummy image and videos\",\r\n        description: \"xfbhjx jdzfxjsd fjsdfsjdzx  xczcc zxjxncjzx xczkjfzx cjzxcx c\",\r\n        shortDescription: \"zxcjkxc zxjkcjz fixdfsdzx\",\r\n        status: true,\r\n        type: mediaType\r\n    }\r\n    console.log(\"🚀 ~ file: CreateFeed.js ~ line 28 ~ CreateFeed ~ mediaType\", mediaType)\r\n\r\n    useEffect(() => {\r\n        if (mediaType == \"video\") {\r\n            setMedia(null)\r\n            setFileNames([])\r\n        }\r\n\r\n\r\n    }, [mediaType])\r\n\r\n\r\n\r\n    const companySchema = Yup.object().shape({\r\n\r\n\r\n\r\n        title: Yup.string()\r\n            .required(\"Required\"),\r\n        description: Yup.string()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .max(150, \"Maximum 250 symbols\")\r\n            .required(\"Required\"),\r\n        shortDescription: Yup.string()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .max(150, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault()\r\n        setMediaType(\"image\")\r\n    }\r\n    const handleVideoChange = (e) => {\r\n        e.preventDefault()\r\n        setMediaType(\"video\")\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: companySchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            console.log(\"🚀 ~ file: CreateFeed.js ~ line 66 ~ CreateFeed ~ values\", values)\r\n            enableLoading();\r\n\r\n\r\n            const mediaFormData = new FormData();\r\n\r\n            if (media) {\r\n                mediaFormData.append(\"profile_picture\", media, media.name);\r\n\r\n                uploadMedia(mediaFormData).then((res) => {\r\n                    if (res?.data?.code === 200) {\r\n                        const paylod = {\r\n                            title: values.title,\r\n                            description: values.description,\r\n                            shortDescription: values.shortDescription,\r\n                            status: true,\r\n                            type: mediaType,\r\n                            url: res?.data?.data?.url\r\n\r\n                        }\r\n                        createFeed(paylod).then((res) => {\r\n\r\n                            if (res?.data?.code === 200) {\r\n                                toast.success('New Feed added in system')\r\n\r\n                                props.history.push(slugs.feeds)\r\n                            }\r\n                            disableLoading();\r\n                        })\r\n                            .catch((err) => {\r\n                                console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                                disableLoading();\r\n                                setSubmitting(false);\r\n                                const errorMessage = err.response.data.errorMessage;\r\n                                toast.error(errorMessage, {\r\n                                    closeOnClick: true,\r\n                                    hideProgressBar: false,\r\n                                })\r\n                            });\r\n                    }\r\n                })\r\n                    .catch((err) => {\r\n                        console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                        disableLoading();\r\n                        setSubmitting(false);\r\n                        const errorMessage = err.response.data.errorMessage;\r\n                        toast.error(errorMessage, {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false,\r\n                        })\r\n                    });\r\n            } else {\r\n                const paylod = {\r\n                    title: values.title,\r\n                    description: values.description,\r\n                    shortDescription: values.shortDescription,\r\n                    status: true,\r\n                    type: mediaType,\r\n                    url: values.url\r\n                }\r\n                createFeed(paylod).then((res) => {\r\n\r\n                    if (res?.data?.code === 200) {\r\n                        toast.success('New Feed added in system')\r\n                        props.history.push(slugs.feeds)\r\n                    }\r\n                    disableLoading();\r\n                })\r\n                    .catch((err) => {\r\n                        console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                        disableLoading();\r\n                        setSubmitting(false);\r\n                        const errorMessage = err.response.data.errorMessage;\r\n                        toast.error(errorMessage, {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false,\r\n                        })\r\n                    });\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>Create Feed</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Title</label>\r\n                                <input\r\n                                    placeholder=\"Title\"\r\n                                    type=\"title\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"title\"\r\n                                    )}`}\r\n                                    name=\"title\"\r\n                                    {...formik.getFieldProps(\"title\")}\r\n                                />\r\n                                {formik.touched.title && formik.errors.title ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.title}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Short Description</label>\r\n                                <textarea\r\n                                    placeholder=\"Short Description...\"\r\n                                    rows={2}\r\n                                    cols={2}\r\n                                    type=\"shortDescription\"\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        \"shortDescription\"\r\n                                    )}`}\r\n                                    name=\"shortDescription\"\r\n                                    {...formik.getFieldProps(\"shortDescription\")}\r\n                                />\r\n                                {formik.touched.shortDescription && formik.errors.shortDescription ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.shortDescription}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label> Description</label>\r\n                                <textarea\r\n                                    placeholder=\"description...\"\r\n                                    rows={3}\r\n                                    cols={3}\r\n                                    type=\"description\"\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        \"description\"\r\n                                    )}`}\r\n                                    name=\"description\"\r\n                                    {...formik.getFieldProps(\"description\")}\r\n                                />\r\n                                {formik.touched.description && formik.errors.description ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.description}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-check\">\r\n\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onChange={handleImageChange} />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Image\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onChange={handleVideoChange} />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Video\r\n                                </label>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            {/* <div className=\"form-group \">\r\n                                <label >Type</label>\r\n                                <select placeholder=\"Type\"\r\n                                    type=\"type\"\r\n                                    className={`select-input form-control-solid ${getInputClasses(\r\n                                        \"type\"\r\n                                    )} p-2`}\r\n                                    name=\"type\"\r\n                                    value={mediaType}\r\n                                    {...formik.getFieldProps(\"type\")}\r\n                                >\r\n                                    <option >Select..</option>\r\n                                    <option value=\"image\">Image</option>\r\n                                    <option value=\"video\">Video</option>\r\n                                </select>\r\n                                {formik.touched.type && formik.errors.type ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.type}</div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                            </div> */}\r\n                            {\r\n                                mediaType == \"image\" ?\r\n\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <Dropzone\r\n                                            onDrop={handleDrop}\r\n                                            accept=\"image/*\"\r\n                                            minSize={1024}\r\n                                            maxSize={3072000}\r\n                                        >\r\n                                            {({ getRootProps, getInputProps }) => (\r\n                                                <div {...getRootProps({ className: \"dropzone\" })}>\r\n                                                    <input {...getInputProps()} />\r\n                                                    <p>Drag'n'drop images, or click to select files</p>\r\n                                                </div>\r\n                                            )}\r\n                                        </Dropzone>\r\n                                        <div>\r\n                                            <strong>Files:</strong>\r\n                                            <ul>\r\n                                                {fileNames.map(fileName => (\r\n                                                    <li key={fileName}>{fileName}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    \"\"\r\n                            }\r\n                            {\r\n                                mediaType == \"video\" ?\r\n\r\n\r\n                                    <div className=\"form-group form-input-2 mb-3 mt-3\">\r\n                                        <label>Url</label>\r\n                                        <input\r\n                                            placeholder=\"Video url\"\r\n                                            type=\"url\"\r\n                                            className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                                \"url\"\r\n                                            )}`}\r\n                                            name=\"url\"\r\n                                            {...formik.getFieldProps(\"url\")}\r\n                                        />\r\n\r\n                                    </div>\r\n                                    :\r\n                                    \"\"\r\n                            }\r\n\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.feeds} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport Dropzone from \"react-dropzone\";\r\nimport { toast } from 'react-toastify';\r\nimport { editFeed, uploadMedia } from \"resources/serverReq/admin/feed\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\nimport \"./style.css\";\r\n\r\nexport default function EditFeed(props) {\r\n    const [fileNames, setFileNames] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [media, setMedia] = useState(null);\r\n    const [mediaType, setMediaType] = useState(\"\")\r\n    const handleDrop = acceptedFiles => {\r\n        setFileNames(acceptedFiles.map(file => file.name));\r\n        setMedia(acceptedFiles[0])\r\n    }\r\n    const data = props.location.state\r\n    console.log(\"🚀 ~ file: EditFeed.js ~ line 21 ~ EditFeed ~ data\", data)\r\n    const initialValues = {\r\n        title: data.title,\r\n        description: data.description,\r\n        shortDescription: data.shortDescription,\r\n        status: true,\r\n        type: data.type\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (mediaType == \"video\") {\r\n            setMedia(null)\r\n            setFileNames([])\r\n        }\r\n\r\n\r\n    }, [mediaType])\r\n    useEffect(() => {\r\n        setMediaType(data.type)\r\n        setFileNames([data.url])\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    const companySchema = Yup.object().shape({\r\n\r\n        title: Yup.string()\r\n            .required(\"Required\"),\r\n        description: Yup.string()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .max(150, \"Maximum 250 symbols\")\r\n            .required(\"Required\"),\r\n        shortDescription: Yup.string()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .max(150, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault()\r\n        setMediaType(\"image\")\r\n    }\r\n    const handleVideoChange = (e) => {\r\n        e.preventDefault()\r\n        setMediaType(\"video\")\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: companySchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            const mediaFormData = new FormData();\r\n            if (media) {\r\n                mediaFormData.append(\"profile_picture\", media, media.name);\r\n                uploadMedia(mediaFormData).then((res) => {\r\n                    setFileNames([res?.data?.data?.url])\r\n                    if (res?.data?.code === 200) {\r\n                        const payload = {\r\n                            title: values.title,\r\n                            description: values.description,\r\n                            shortDescription: values.shortDescription,\r\n                            status: true,\r\n                            type: mediaType,\r\n                            url: res?.data?.data?.url\r\n                        }\r\n                        editFeed(data.id, payload).then((res) => {\r\n\r\n                            if (res?.data?.code === 200) {\r\n                                toast.success('Feed edited in system')\r\n                                props.history.push(slugs.feeds)\r\n                            }\r\n                            disableLoading();\r\n                        })\r\n                            .catch((err) => {\r\n                                disableLoading();\r\n                                setSubmitting(false);\r\n                                const errorMessage = err.response.data.errorMessage;\r\n                                toast.error(errorMessage, {\r\n                                    closeOnClick: true,\r\n                                    hideProgressBar: false,\r\n                                })\r\n                            });\r\n                    }\r\n                })\r\n                    .catch((err) => {\r\n                        disableLoading();\r\n                        setSubmitting(false);\r\n                        const errorMessage = err.response.data.errorMessage;\r\n                        toast.error(errorMessage, {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false,\r\n                        })\r\n                    });\r\n            } else {\r\n                const payload = {\r\n                    title: values.title,\r\n                    description: values.description,\r\n                    shortDescription: values.shortDescription,\r\n                    status: true,\r\n                    type: mediaType,\r\n                    url: values.url\r\n                }\r\n                editFeed(data.id, payload).then((res) => {\r\n\r\n                    if (res?.data?.code === 200) {\r\n                        toast.success('New Feed added in system')\r\n                        props.history.push(slugs.feeds)\r\n                    }\r\n                    disableLoading();\r\n                })\r\n                    .catch((err) => {\r\n                        disableLoading();\r\n                        setSubmitting(false);\r\n                        const errorMessage = err.response.data.errorMessage;\r\n                        toast.error(errorMessage, {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false,\r\n                        })\r\n                    });\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>Update Feed</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n                        >\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Title</label>\r\n                                <input\r\n                                    placeholder=\"Title\"\r\n                                    type=\"title\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"title\"\r\n                                    )}`}\r\n                                    name=\"title\"\r\n                                    {...formik.getFieldProps(\"title\")}\r\n                                />\r\n                                {formik.touched.title && formik.errors.title ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.title}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Short Description</label>\r\n                                <textarea\r\n                                    placeholder=\"Short Description...\"\r\n                                    rows={2}\r\n                                    cols={2}\r\n                                    type=\"shortDescription\"\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        \"shortDescription\"\r\n                                    )}`}\r\n                                    name=\"shortDescription\"\r\n                                    {...formik.getFieldProps(\"shortDescription\")}\r\n                                />\r\n                                {formik.touched.shortDescription && formik.errors.shortDescription ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.shortDescription}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label> Description</label>\r\n                                <textarea\r\n                                    placeholder=\"description...\"\r\n                                    rows={3}\r\n                                    cols={3}\r\n                                    type=\"description\"\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        \"description\"\r\n                                    )}`}\r\n                                    name=\"description\"\r\n                                    {...formik.getFieldProps(\"description\")}\r\n                                />\r\n                                {formik.touched.description && formik.errors.description ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.description}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-check\">\r\n\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onChange={handleImageChange} />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Image\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onChange={handleVideoChange} />\r\n                                <label className=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Video\r\n                                </label>\r\n                            </div>\r\n\r\n                            {/* <div className=\"form-group \">\r\n                                <label >Type</label>\r\n                                <select placeholder=\"Type\"\r\n                                    type=\"type\"\r\n                                    className={`select-input form-control-solid ${getInputClasses(\r\n                                        \"type\"\r\n                                    )} p-2`}\r\n                                    name=\"type\"\r\n                                    value={mediaType}\r\n                                    {...formik.getFieldProps(\"type\")}\r\n                                >\r\n                                    <option >Select..</option>\r\n                                    <option value=\"image\">Image</option>\r\n                                    <option value=\"video\">Video</option>\r\n                                </select>\r\n                                {formik.touched.type && formik.errors.type ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.type}</div>\r\n                                    </div>\r\n                                ) : null}\r\n\r\n                            </div> */}\r\n                            {\r\n                                mediaType == \"image\" ?\r\n\r\n\r\n                                    <div className=\"mt-3\">\r\n                                        <Dropzone\r\n                                            onDrop={handleDrop}\r\n                                            accept=\"image/*\"\r\n                                            minSize={1024}\r\n                                            maxSize={3072000}\r\n                                        >\r\n                                            {({ getRootProps, getInputProps }) => (\r\n                                                <div {...getRootProps({ className: \"dropzone\" })}>\r\n                                                    <input {...getInputProps()} />\r\n                                                    <p>Drag'n'drop images, or click to select files</p>\r\n                                                </div>\r\n                                            )}\r\n                                        </Dropzone>\r\n                                        <div>\r\n                                            <strong>Files:</strong>\r\n                                            <ul>\r\n                                                {fileNames.map(fileName => (\r\n                                                    <li key={fileName}>\r\n                                                        <img src={fileName} style={{ width: '100px' }} /></li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    \"\"\r\n                            }\r\n                            {\r\n                                mediaType == \"video\" ?\r\n\r\n\r\n                                    <div className=\"form-group form-input-2 mb-3 mt-3\">\r\n                                        <label>Url</label>\r\n                                        <input\r\n                                            placeholder=\"Video url\"\r\n                                            type=\"url\"\r\n                                            className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                                \"url\"\r\n                                            )}`}\r\n                                            name=\"url\"\r\n                                            {...formik.getFieldProps(\"url\")}\r\n                                        />\r\n\r\n                                    </div>\r\n                                    :\r\n                                    \"\"\r\n                            }\r\n\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.feeds} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { blockFeed, getAllFeeds } from 'resources/serverReq/admin/feed'\r\nimport SLUGS from 'resources/slugs'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function Feeds() {\r\n    const [feedsData, setFeedData] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n            status: status\r\n\r\n        };\r\n\r\n        getAllFeeds(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.feeds\r\n                setFeedData(res.rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n    }, [query, status, page])\r\n\r\n    async function statusUpdateFeed(id) {\r\n        await blockFeed(id).then((res) => {\r\n\r\n            if (res.data.code === 200) {\r\n                console.log(\"🚀 ~ file: Feeds.js ~ line 47 ~ awaitblockFeed ~ res\", res)\r\n                const feedLists = feedsData.slice();\r\n                for (const feed of feedLists) {\r\n                    if (feed.id === id) {\r\n                        feed.status = res?.data?.data?.feed?.status;\r\n\r\n                        break;\r\n                    }\r\n                }\r\n                setFeedData(feedLists);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n\r\n                            <TableHeader btnTitle={\"+ Add Feed \"} route={SLUGS.createFeed} setQuery={setQuery} query={query} />\r\n                            <div className=\"form-group w-15\">\r\n                                <label className='text-dark'>Status</label>\r\n                                <select className=\"select-input p-2\" onChange={(e) => setStatus(e.target.value)} value={status}>\r\n                                    <option >Select</option>\r\n                                    <option value=\"1\" >Active</option>\r\n                                    <option value=\"0\">Inactive</option>\r\n                                </select>\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Title\", \"Short Description\", \"Type\", \"Status\", \"Created On\", \"Action\"]} />\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td>No Record Found</td><td></td></tr> :\r\n                                            feedsData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td >\r\n\r\n\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.title}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                    <td className='feed-description'>{el.shortDescription}</td>\r\n                                                    <td className='feed-description'>{el.type}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY hh:mm a')}</td>\r\n                                                    <td >\r\n                                                        <div className='d-flex'>\r\n                                                            <TableLastChild editRoute={SLUGS.editFeed} editData={el} block={statusUpdateFeed} blockId={el.id} BlockCondition={el.status} path={SLUGS.viewFeed} />\r\n\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div> : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react';\r\n\r\nexport default function ViewFeed(props) {\r\n    console.log(\"🚀 ~ file: ViewFeed.js ~ line 4 ~ ViewFeed ~ props\", props)\r\n\r\n    const data = props.location.state\r\n    console.log(\"🚀 ~ file: ViewFeed.js ~ line 7 ~ ViewFeed ~ data\", data)\r\n    return <>\r\n        <div className=\"main\">\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <div className=\"card-body\">\r\n                        <i className=\"fa fa-pen fa-xs edit\"></i>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Title:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.title}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Description:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.description}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Short Description:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.shortDescription}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Status</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.status ? <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                        <span className='label label-lg label-light-danger label-inline'>Inactive</span>}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Created On</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{moment(data.createdAt).format('DD-MMM-YY')}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className='card col-md-6 offset-md-3 mt-4 p-3'>\r\n            <h5>Image Details</h5>\r\n            {\r\n                data.type == \"image\" ?\r\n                    <img alt='feed-img' src={`${data.url}`} style={{ width: '200px' }} /> :\r\n                    <a href={`${data.url}`} target=\"_blank\">{data.url}</a>\r\n            }\r\n        </div>\r\n\r\n    </>;\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\nexport async function getAllFirmwares(params) {\r\n    return await axios.get(\"admin/firmware\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function createFirmware(data) {\r\n    return await axios.post(`/admin/firmware`, data);\r\n\r\n}\r\n\r\nexport async function uploadMedia(data) {\r\n    return await axios.post(`/admin/upload`, data);\r\n\r\n}\r\n\r\nexport async function editFirmware(id, data) {\r\n    return await axios.put(`/admin/firmware/${id}`, data);\r\n\r\n}\r\n\r\nexport async function blockFirmware(id) {\r\n    return await axios.put(`/admin/firmware/${id}/status`);\r\n\r\n}\r\n","import { FormBtns } from 'components/table';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { toast } from 'react-toastify';\r\nimport { uploadMedia } from 'resources/serverReq/admin/feed';\r\nimport { createFirmware } from 'resources/serverReq/admin/firmware';\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from 'yup';\r\nimport '../../common/common.css';\r\nimport './style.css';\r\n\r\nexport default function CreateFirmware(props) {\r\n    const [fileNames, setFileNames] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [media, setMedia] = useState(null);\r\n\r\n    const handleDrop = (acceptedFiles) => {\r\n        setFileNames(acceptedFiles.map((file) => file.name));\r\n        setMedia(acceptedFiles[0]);\r\n    };\r\n    const initialValues = {\r\n        version: '',\r\n        remark: ''\r\n    };\r\n\r\n    const firmwareSchema = Yup.object().shape({\r\n        version: Yup.string().required('Required').max(7).min(7),\r\n        remark: Yup.string().required('Required')\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return 'is-invalid';\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return 'is-valid';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: firmwareSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n\r\n            const mediaFormData = new FormData();\r\n\r\n            if (media) {\r\n                mediaFormData.append('profile_picture', media, media.name);\r\n\r\n                uploadMedia(mediaFormData)\r\n                    .then((res) => {\r\n                        if (res?.data?.code === 200) {\r\n                            const paylod = {\r\n                                version: values.version,\r\n                                fileUrl: res?.data?.data?.url,\r\n                                remark: values.remark\r\n                            };\r\n                            createFirmware(paylod)\r\n                                .then((res) => {\r\n                                    if (res?.data?.code === 200) {\r\n                                        toast.success('New Firmware added in system');\r\n\r\n                                        props.history.push(slugs.firmware);\r\n                                    }\r\n                                    disableLoading();\r\n                                })\r\n                                .catch((err) => {\r\n                                    disableLoading();\r\n                                    setSubmitting(false);\r\n                                    const errorMessage = err.response.data.errorMessage;\r\n                                    toast.error(errorMessage, {\r\n                                        closeOnClick: true,\r\n                                        hideProgressBar: false\r\n                                    });\r\n                                });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        disableLoading();\r\n                        setSubmitting(false);\r\n                        const errorMessage = err.response.data.errorMessage;\r\n                        toast.error(errorMessage, {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false\r\n                        });\r\n                    });\r\n            } else {\r\n                disableLoading();\r\n                setSubmitting(false);\r\n                toast.error('File needs to be present', {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>\r\n                        Create Firmware\r\n                    </h3>\r\n                    <div className='container-xl'>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Version</label>\r\n                                <input\r\n                                    placeholder='X.X.X.X'\r\n                                    type='version'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'version'\r\n                                    )}`}\r\n                                    name='version'\r\n                                    {...formik.getFieldProps('version')}\r\n                                />\r\n                                {formik.touched.version && formik.errors.version ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>{formik.errors.version}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Whats New</label>\r\n                                <textarea\r\n                                    placeholder='Bug fixes ....'\r\n                                    rows={5}\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        'remark'\r\n                                    )}`}\r\n                                    name='remark'\r\n                                    {...formik.getFieldProps('remark')}\r\n                                />\r\n                                {formik.touched.remark && formik.errors.remark ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>{formik.errors.remark}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            <div className='mt-3'>\r\n                                <Dropzone\r\n                                    onDrop={handleDrop}\r\n                                    accept={['application/zip', 'application/x-zip-compressed']}\r\n                                    minSize={1024}\r\n                                    maxSize={3072000}\r\n                                >\r\n                                    {({ getRootProps, getInputProps }) => (\r\n                                        <div {...getRootProps({ className: 'dropzone' })}>\r\n                                            <input {...getInputProps()} />\r\n                                            <p>Drag'n'drop zip, or click to select files</p>\r\n                                        </div>\r\n                                    )}\r\n                                </Dropzone>\r\n                                <div>\r\n                                    <strong>Files:</strong>\r\n                                    <ul>\r\n                                        {fileNames.map((fileName) => (\r\n                                            <li key={fileName}>{fileName}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.firmware} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { FormBtns } from 'components/table';\r\nimport { useFormik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { toast } from 'react-toastify';\r\nimport { editFeed, uploadMedia } from 'resources/serverReq/admin/feed';\r\nimport { editFirmware } from 'resources/serverReq/admin/firmware';\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from 'yup';\r\nimport '../../common/common.css';\r\nimport './style.css';\r\n\r\nexport default function EditFirmware(props) {\r\n    const [fileNames, setFileNames] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [media, setMedia] = useState(null);\r\n    const [mediaType, setMediaType] = useState('');\r\n    const handleDrop = (acceptedFiles) => {\r\n        setFileNames(acceptedFiles.map((file) => file.name));\r\n        setMedia(acceptedFiles[0]);\r\n    };\r\n    const data = props.location.state;\r\n    console.log('🚀 ~ file: EditFeed.js ~ line 21 ~ EditFeed ~ data', data);\r\n    const initialValues = {\r\n        version: data.version,\r\n        fileUrl: data.fileUrl,\r\n        remark: data.remark\r\n    };\r\n\r\n    useEffect(() => {\r\n        setMediaType(data.type);\r\n        setFileNames([data.url]);\r\n    }, []);\r\n\r\n    const firmwareSchema = Yup.object().shape({\r\n        version: Yup.string().required('Required').max(7).min(7)\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return 'is-invalid';\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return 'is-valid';\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: firmwareSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            const mediaFormData = new FormData();\r\n            if (media) {\r\n                mediaFormData.append('profile_picture', media, media.name);\r\n                uploadMedia(mediaFormData)\r\n                    .then((res) => {\r\n                        setFileNames([res?.data?.data?.url]);\r\n                        if (res?.data?.code === 200) {\r\n                            const payload = {\r\n                                version: values.version,\r\n                                fileUrl: res?.data?.data?.url\r\n                            };\r\n                            editFirmware(data.id, payload)\r\n                                .then((res) => {\r\n                                    if (res?.data?.code === 200) {\r\n                                        toast.success('Firmware edited in system');\r\n                                        props.history.push(slugs.firmware);\r\n                                    }\r\n                                    disableLoading();\r\n                                })\r\n                                .catch((err) => {\r\n                                    disableLoading();\r\n                                    setSubmitting(false);\r\n                                    const errorMessage = err.response.data.errorMessage;\r\n                                    toast.error(errorMessage, {\r\n                                        closeOnClick: true,\r\n                                        hideProgressBar: false\r\n                                    });\r\n                                });\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        disableLoading();\r\n                        setSubmitting(false);\r\n                        const errorMessage = err.response.data.errorMessage;\r\n                        toast.error(errorMessage, {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false\r\n                        });\r\n                    });\r\n            } else {\r\n                const payload = {\r\n                    version: values.title,\r\n                    fileUrl: values.url\r\n                };\r\n                editFirmware(data.id, payload)\r\n                    .then((res) => {\r\n                        if (res?.data?.code === 200) {\r\n                            toast.success('Frimware updated in system');\r\n                            props.history.push(slugs.feeds);\r\n                        }\r\n                        disableLoading();\r\n                    })\r\n                    .catch((err) => {\r\n                        disableLoading();\r\n                        setSubmitting(false);\r\n                        const errorMessage = err.response.data.errorMessage;\r\n                        toast.error(errorMessage, {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false\r\n                        });\r\n                    });\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>\r\n                        Update Firmware\r\n                    </h3>\r\n                    <div className='container-xl'>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Version</label>\r\n                                <input\r\n                                    placeholder='X.X.X.X'\r\n                                    type='version'\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        'version'\r\n                                    )}`}\r\n                                    name='version'\r\n                                    {...formik.getFieldProps('version')}\r\n                                />\r\n                                {formik.touched.version && formik.errors.version ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>{formik.errors.version}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            <div className='form-group form-input-2 mb-3'>\r\n                                <label>Whats New</label>\r\n                                <textarea\r\n                                    placeholder='Bug fixes ....'\r\n                                    rows={5}\r\n                                    className={`form-control form-control-solid ${getInputClasses(\r\n                                        'remark'\r\n                                    )}`}\r\n                                    name='remark'\r\n                                    {...formik.getFieldProps('remark')}\r\n                                />\r\n                                {formik.touched.remark && formik.errors.remark ? (\r\n                                    <div>\r\n                                        <div className='fv-help-block'>{formik.errors.remark}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>   \r\n\r\n                            <div className='mt-3'>\r\n                                <Dropzone\r\n                                    multiple={false}\r\n                                    onDrop={handleDrop}\r\n                                    accept='application/zip'\r\n                                    minSize={1024}\r\n                                    maxSize={3072000}\r\n                                >\r\n                                    {({ getRootProps, getInputProps }) => (\r\n                                        <div {...getRootProps({ className: 'dropzone' })}>\r\n                                            <input {...getInputProps()} />\r\n                                            <p>Drag'n'drop zip, or click to select files</p>\r\n                                        </div>\r\n                                    )}\r\n                                </Dropzone>\r\n                                <div>\r\n                                    <strong>Files:</strong>\r\n                                    <ul>\r\n                                        {fileNames.map((fileName) => (\r\n                                            <li key={fileName}>\r\n                                                <p>{fileName}</p>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.firmware} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport moment from 'moment';\r\nimport React,{ useEffect, useState } from 'react';\r\nimport { blockFeed, blockFirmware, getAllFeeds } from 'resources/serverReq/admin/firmware';\r\nimport SLUGS from 'resources/slugs';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\nimport { getAllFirmwares } from 'resources/serverReq/admin/firmware';\r\n\r\nexport default function Firmwares() {\r\n    const [firmwareData, setFirmwareData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let params = {\r\n            page: page,\r\n            search: query,\r\n            status: status\r\n        };\r\n\r\n        if (status === \"Select\"){\r\n            params = {\r\n                page: page,\r\n                search: query,\r\n            }\r\n        }\r\n\r\n        getAllFirmwares(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                setDataNotAvailable(false);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.firmwares;\r\n                    setFirmwareData(res.rows);\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    if (res.count == 0) setDataNotAvailable(true);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setDataNotAvailable(false);\r\n            });\r\n    }, [query, status, page]);\r\n\r\n    async function statusUpdateFirmware(id) {\r\n        await blockFirmware(id)\r\n            .then((res) => {\r\n                if (res.data.code === 200) {\r\n                    console.log('🚀 ~ file: Feeds.js ~ line 47 ~ awaitblockFeed ~ res', res);\r\n                    const firmwareList = firmwareData.slice();\r\n                    for (const firmware of firmwareList) {\r\n                        if (firmware.id === id) {\r\n                            firmware.status = res?.data?.data?.firmware?.status;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                    setFirmwareData(firmwareList);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <TableHeader\r\n                            btnTitle={'+ Add Firmware '}\r\n                            route={SLUGS.createFirmware}\r\n                            setQuery={setQuery}\r\n                            query={query}\r\n                        />\r\n                        <div className='form-group w-15'>\r\n                            <label className='text-dark'>Status</label>\r\n                            <select\r\n                                className='select-input p-2'\r\n                                onChange={(e) => setStatus(e.target.value)}\r\n                                value={status}\r\n                            >\r\n                                <option>Select</option>\r\n                                <option value='1'>Active</option>\r\n                                <option value='0'>Inactive</option>\r\n                            </select>\r\n                        </div>\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn\r\n                                columns={[\r\n                                    'Version',\r\n                                    'FileUrl',\r\n                                    'Status',\r\n                                    'Created On',\r\n                                    'Action'\r\n                                ]}\r\n                            />\r\n\r\n                            <tbody>\r\n                                {dataNotAvailable ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    firmwareData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <div className='d-flex flex-row bd-highlight p-2 '>\r\n                                                    {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                    <span className='p-2'>{el.version}</span>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td className='firmware-description'>\r\n                                                <a href={el.fileUrl} target='_blank'>Download File</a>\r\n                                            </td>                                            \r\n                                            <td>\r\n                                                {el.status == true ? (\r\n                                                    <span className='label label-lg label-light-success label-inline'>\r\n                                                        Active\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <span className='label label-lg label-light-danger label-inline'>\r\n                                                        Inactive\r\n                                                    </span>\r\n                                                )}\r\n                                            </td>\r\n                                            <td>\r\n                                                {moment(el.createdAt).format('DD-MMM-YY hh:mm a')}\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className='d-flex'>\r\n                                                    <TableLastChild\r\n                                                        editRoute={SLUGS.editFirmware}\r\n                                                        editData={el}\r\n                                                        block={statusUpdateFirmware}\r\n                                                        blockId={el.id}\r\n                                                        BlockCondition={el.status}\r\n                                                        path={SLUGS.viewFirmware}\r\n                                                    />\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react';\r\n\r\nexport default function ViewFirmware(props) {\r\n    const data = props.location.state;\r\n    console.log('🚀 ~ file: ViewFeed.js ~ line 7 ~ ViewFeed ~ data', data);\r\n    return (\r\n        <>\r\n            <div className='main'>\r\n                <div className='row'>\r\n                    <div className='card col-md-6 offset-md-3'>\r\n                        <div className='card-body'>\r\n                            <i className='fa fa-pen fa-xs edit'></i>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Version:</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data.version}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>File Url:</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>\r\n                                            <a href={data.fileUrl} target='_blank'>Download</a>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Status</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>\r\n                                            {data.status ? (\r\n                                                <span className='label label-lg label-light-success label-inline'>\r\n                                                    Active\r\n                                                </span>\r\n                                            ) : (\r\n                                                <span className='label label-lg label-light-danger label-inline'>\r\n                                                    Inactive\r\n                                                </span>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Whats New</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data.remark}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Created On</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{moment(data.createdAt).format('DD-MMM-YY')}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAllMedicine(params) {\r\n    return await axios.get(\"/admin/medicines\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function viewMedicineDetails(id) {\r\n    return await axios.get(`/admin/medicine/${id}`);\r\n\r\n}\r\n\r\nexport async function editMedicine(id, data) {\r\n    return await axios.put(`/admin/medicine/${id}`, data);\r\n\r\n}\r\n\r\nexport async function addMedicine(data) {\r\n    return await axios.post(`/admin/medicine`, data);\r\n\r\n}\r\n\r\nexport async function blockMedicine(id) {\r\n    return await axios.put(`/admin/medicine/${id}/status`);\r\n\r\n}\r\n\r\nexport async function uploadMedicineCsv(data) {\r\n    return await axios.post(`/admin/medicine-upload`, data);\r\n}\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addMedicine } from \"resources/serverReq/admin/medicine\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    companyName: \"\",\r\n    code: \"\",\r\n};\r\n\r\nexport default function AddMedicine(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const medicineSchema = Yup.object().shape({\r\n\r\n        name: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        companyName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(150, \"Maximum 150 symbols\")\r\n            .required(\"Required\"),\r\n        code: Yup.string()\r\n            .min(1, \"Minimum 1 symbols\")\r\n            .max(150, \"Maximum 150 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: medicineSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            addMedicine(values).then((res) => {\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Medicine has been successfully added in system.')\r\n                    props.history.push(slugs.medicine)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Add Medicine</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Medicine Name</label>\r\n                                <input\r\n                                    placeholder=\"Medicine Name\"\r\n                                    type=\"name\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"name\"\r\n                                    )}`}\r\n                                    name=\"name\"\r\n                                    {...formik.getFieldProps(\"name\")}\r\n                                />\r\n                                {formik.touched.name && formik.errors.name ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.name}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Company Name</label>\r\n                                <input\r\n                                    placeholder=\"Company Name\"\r\n                                    type=\"companyName\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"companyName\"\r\n                                    )}`}\r\n                                    name=\"companyName\"\r\n                                    {...formik.getFieldProps(\"companyName\")}\r\n                                />\r\n                                {formik.touched.companyName && formik.errors.companyName ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.companyName}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Medicine Code</label>\r\n                                <input\r\n                                    placeholder=\"Medicine Name\"\r\n                                    type=\"code\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"code\"\r\n                                    )}`}\r\n                                    name=\"code\"\r\n                                    {...formik.getFieldProps(\"code\")}\r\n                                />\r\n                                {formik.touched.code && formik.errors.code ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.code}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.medicine} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FormBtns } from 'components/table';\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { editMedicine } from \"resources/serverReq/admin/medicine\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nexport default function EditMedicine(props) {\r\n    const data = props?.location?.state\r\n\r\n    const initialValues = {\r\n        name: data.name,\r\n        companyName: data.companyName,\r\n        code: data.code\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const medicineSchema = Yup.object().shape({\r\n\r\n        name: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        companyName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(150, \"Maximum 150 symbols\")\r\n            .required(\"Required\"),\r\n        code: Yup.string()\r\n            .min(1, \"Minimum 1 symbols\")\r\n            .max(150, \"Maximum 150 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: medicineSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            console.log(\"************\", values)\r\n            editMedicine(data.id, values).then((res) => {\r\n\r\n                console.log(\"res==========>\", res)\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Medicine has been successfully updated in system.')\r\n                    props.history.push(slugs.medicine)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>Update Medicine</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Medicine Name</label>\r\n                                <input\r\n                                    placeholder=\"Medicine Name\"\r\n                                    type=\"name\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"name\"\r\n                                    )}`}\r\n                                    name=\"name\"\r\n                                    {...formik.getFieldProps(\"name\")}\r\n                                />\r\n                                {formik.touched.name && formik.errors.name ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.name}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Company Name</label>\r\n                                <input\r\n                                    placeholder=\"Company Name\"\r\n                                    type=\"companyName\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"companyName\"\r\n                                    )}`}\r\n                                    name=\"companyName\"\r\n                                    {...formik.getFieldProps(\"companyName\")}\r\n                                />\r\n                                {formik.touched.companyName && formik.errors.companyName ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.companyName}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Medicine Code</label>\r\n                                <input\r\n                                    placeholder=\"Medicine Code\"\r\n                                    type=\"code\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"code\"\r\n                                    )}`}\r\n                                    name=\"code\"\r\n                                    {...formik.getFieldProps(\"code\")}\r\n                                />\r\n                                {formik.touched.code && formik.errors.code ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.code}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.medicine} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport moment from 'moment';\r\nimport React , { useEffect, useRef, useState } from 'react';\r\nimport { FaEye } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    blockMedicine,\r\n    getAllMedicine,\r\n    uploadMedicineCsv\r\n} from 'resources/serverReq/admin/medicine';\r\nimport SLUGS from 'resources/slugs';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nexport default function Medicine() {\r\n    const [medicineData, setMedicineData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [csv, setCSV] = useState(null);\r\n    const ref = useRef();\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n            status: status,\r\n            createdAt: createdAt\r\n        };\r\n\r\n        getAllMedicine(params)\r\n            .then((response) => {\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.medicines;\r\n                    setMedicineData(res.rows);\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    setDataNotAvailable(true);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [query, status, page, refreshKey, createdAt]);\r\n\r\n    async function banMedicine(id) {\r\n        await blockMedicine(id)\r\n            .then((res) => {\r\n                if (res?.data?.code === 200) {\r\n                    const medicineList = medicineData.slice();\r\n                    for (const medicine of medicineList) {\r\n                        if (medicine.id === id) {\r\n                            medicine.status = res?.data?.data?.medicine?.status;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                    setMedicineData(medicineList);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n            });\r\n    }\r\n\r\n    const handleFileSelect = (e) => {\r\n        setCSV(e.target.files[0]);\r\n    };\r\n\r\n    const handleFileUpload = (e) => {\r\n        if (csv != null) {\r\n            let formData = new FormData();\r\n            formData.append('file', csv);\r\n            uploadMedicineCsv(formData)\r\n                .then((response) => {\r\n                    if (response?.data?.code == 200) {\r\n                        ref.current.value = '';\r\n                        setCSV(null);\r\n                        setRefreshKey((oldKey) => oldKey + 1);\r\n                        toast.success('Successfully Uploaded', {\r\n                            closeOnClick: true,\r\n                            hideProgressBar: false\r\n                        });\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.response);\r\n                    ref.current.value = '';\r\n                    toast.error(err.response, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false\r\n                    });\r\n                });\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            {query != '' || dataNotAvailable ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <TableHeader\r\n                            btnTitle={'+ Add Medicine '}\r\n                            route={SLUGS.addMedicine}\r\n                            setQuery={setQuery}\r\n                            query={query}\r\n                        />\r\n                        <div className='m-2 text-dark'>\r\n                            <input\r\n                                className='w-25'\r\n                                type='file'\r\n                                accept='.csv'\r\n                                ref={ref}\r\n                                onChange={handleFileSelect}\r\n                            />\r\n                            <input\r\n                                type='button'\r\n                                className={'active-invites-btn btn add-btn'}\r\n                                value='upload'\r\n                                onClick={handleFileUpload}\r\n                            />\r\n                        </div>\r\n                        <div className='d-flex form-group w-20'>\r\n                            <div>\r\n                                <label className='text-dark'>Status</label>\r\n                                <select\r\n                                    className='select-input p-2'\r\n                                    onChange={(e) => setStatus(e.target.value)}\r\n                                    value={status}\r\n                                >\r\n                                    <option disabled selected>Select</option>\r\n                                    <option value='1'>Active</option>\r\n                                    <option value='0'>Inactive</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='mr-5'>\r\n                                <label className='text-dark'>Date</label>\r\n                                <br />\r\n                                <input type='date' className='h-5' onChange={(e) => { setCreatedAt(e.target.value) }} />\r\n                            </div>\r\n\r\n                        </div>\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn\r\n                                columns={[\r\n                                    'Name',\r\n                                    'Company Name',\r\n                                    'Status',\r\n                                    'Created On',\r\n                                    'Actions'\r\n                                ]}\r\n                            />\r\n                            <tbody>\r\n                                {medicineData.length == 0 ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    medicineData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <div className='d-flex flex-row bd-highlight p-2 '>\r\n                                                    {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                        <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                            <img className=\"image-position symbol-round\"\r\n                                                                src={\r\n                                                                    \"/assets/img/300_21.jpg\"\r\n                                                                }\r\n                                                                alt=\"pic\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div> */}\r\n                                                    <span className='p-2'>{el.name}</span>\r\n                                                </div>\r\n                                            </td>\r\n\r\n                                            <td>{el.companyName}</td>\r\n                                            <td>\r\n                                                {el.status == true ? (\r\n                                                    <span className='label label-lg label-light-success label-inline'>\r\n                                                        Active\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <span className='label label-lg label-light-danger label-inline'>\r\n                                                        Inactive\r\n                                                    </span>\r\n                                                )}\r\n                                            </td>\r\n                                            <td>\r\n                                                {moment(el.createdAt).format('DD-MMM-YY hh:mm a')}\r\n                                            </td>\r\n                                            <td className='d-flex'>\r\n                                                <div className='d-flex justify-content-center align-items-center'>\r\n                                                    <Link\r\n                                                        to={{\r\n                                                            pathname: `${SLUGS.viewMedicine}/${el.id}`\r\n                                                        }}\r\n                                                        style={{ padding: '6px' }}\r\n                                                        className='btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button'\r\n                                                        title='View Details'\r\n                                                    >\r\n                                                        <span className='svg-icon menu-icon mr-2 text-light'>\r\n                                                            <FaEye style={{ color: 'black' }} />\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <TableLastChild\r\n                                                    editRoute={SLUGS.editMedicine}\r\n                                                    editData={el}\r\n                                                    block={banMedicine}\r\n                                                    blockId={el.id}\r\n                                                    BlockCondition={el.status}\r\n                                                />\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { viewMedicineDetails } from \"resources/serverReq/admin/medicine\";\r\n\r\nexport default function ViewMedicine(props) {\r\n    const path = props.location.pathname.split(\"/\");\r\n    const id = path[path.length - 1];\r\n    const [medicineData, setMedicineData] = useState({})\r\n    useEffect(() => {\r\n\r\n        viewMedicineDetails(id).then((res) => {\r\n            setMedicineData(res?.data?.data?.medicine)\r\n\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <div className=\"card-body\">\r\n                        <i className=\"fa fa-pen fa-xs edit\"></i>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{medicineData.name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Company Name</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{medicineData.companyName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Display Name:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{medicineData.status ? <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                        <span className='label label-lg label-light-danger label-inline'>Inactive</span>}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Created On</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{moment(medicineData.createdAt).format('DD-MMM-YY')}</td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addUserInfo } from \"resources/serverReq/admin/user\";\r\nimport { getStates } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nexport default function AddPatient(props) {\r\n    const initialValues = {\r\n        firstName: \"Himanshu\",\r\n        lastName: \"Rajput\",\r\n        email: \"hrajput2507@gmail.com\",\r\n        dob: new Date().toISOString().slice(0, 10),\r\n        gender: \"Male\",\r\n        phone: \"1234567890\",\r\n        city: \"Noida\",\r\n        role: \"user\",\r\n        password: \"Qwerty@1\",\r\n        state: \"\",\r\n        reference_code: \"\",\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const userSchema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n        reference_code: Yup.string()\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    useEffect(() => {\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n    }, [])\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 103 ~ AddPatient ~ values\", values)\r\n            enableLoading();\r\n            addUserInfo(values).then((res) => {\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('New patient added in system')\r\n                    props.history.push(slugs.patient)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Add Patient</h3>\r\n                    <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n                            <div className='d-flex '>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Email</label>\r\n                                    <input\r\n                                        placeholder=\"Email\"\r\n                                        type=\"email\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"email\"\r\n                                        )}`}\r\n                                        name=\"email\"\r\n                                        {...formik.getFieldProps(\"email\")}\r\n                                    />\r\n                                    {formik.touched.email && formik.errors.email ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Password</label>\r\n\r\n                                    <input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"password\"\r\n                                        )}`}\r\n                                        name=\"password\"\r\n                                        {...formik.getFieldProps(\"password\")}\r\n                                    />\r\n                                    {formik.touched.password && formik.errors.password ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className='d-flex'>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        placeholder=\"Date of Birth\"\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >Gender</label>\r\n                                    <select placeholder=\"Gender\"\r\n                                        type=\"gender\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"gender\"\r\n                                        )} p-2`}\r\n                                        name=\"gender\"\r\n                                        {...formik.getFieldProps(\"gender\")}\r\n                                    >\r\n                                        <option disabled>Select..</option>\r\n                                        <option value=\"male\" >Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    {formik.touched.gender && formik.errors.gender ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Doctor Code</label>\r\n                                    <input\r\n                                        placeholder=\"Reference Code\"\r\n                                        type=\"reference_code\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"reference_code\"\r\n                                        )}`}\r\n                                        name=\"reference_code\"\r\n                                        {...formik.getFieldProps(\"reference_code\")}\r\n                                    />\r\n                                    {formik.touched.reference_code && formik.errors.reference_code ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.reference_code}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.patient} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FormBtns } from 'components/table';\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { updateUserInfo } from \"resources/serverReq/admin/user\";\r\nimport { getStates } from \"resources/serverReq/common\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nexport default function EditPatient(props) {\r\n    const data = props?.location?.state\r\n    const initialValues = {\r\n        firstName: data.firstName,\r\n        lastName: data.lastName,\r\n        email: data.email,\r\n        dob: data.dob,\r\n        gender: data.gender,\r\n        phone: data.phone,\r\n        city: data.city,\r\n        role: \"user\",\r\n        state: data.state,\r\n\r\n    };\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const userScheema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userScheema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            console.log(\"🚀 ~ file: EditPatient.js ~ line 76 ~ EditPatient ~ values\", values)\r\n            enableLoading();\r\n\r\n            updateUserInfo(data.id, values).then((res) => {\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Patient updated in system')\r\n                    props.history.push(slugs.patient)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n    useEffect(() => {\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <h3 className='d-flex justify-content-center align-items-center mt-5 mb-5'>Edit User</h3>\r\n                    <div className=\"d-flex justify-content-center align-items-center container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n                        >\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Email</label>\r\n                                    <input\r\n                                        placeholder=\"Email\"\r\n                                        type=\"email\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"email\"\r\n                                        )}`}\r\n                                        name=\"email\"\r\n                                        {...formik.getFieldProps(\"email\")}\r\n                                    />\r\n                                    {formik.touched.email && formik.errors.email ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Gender</label>\r\n                                    <input\r\n                                        placeholder=\"Gender\"\r\n                                        type=\"gender\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"gender\"\r\n                                        )}`}\r\n                                        name=\"gender\"\r\n                                        {...formik.getFieldProps(\"gender\")}\r\n                                    />\r\n                                    {formik.touched.gender && formik.errors.gender ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.patient} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllCompany } from 'resources/serverReq/admin/company';\r\nimport { getStates } from 'resources/serverReq/common';\r\nimport SLUGS from 'resources/slugs';\r\nimport { blockUsers, getAllUsers } from '../../../resources/serverReq/admin/user';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\nimport SelectInput from '../SelectInput';\r\n\r\nexport default function Patient() {\r\n    const [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const [companyId, setCompanyId] = useState(null);\r\n    const [companyOptions, setCompanyOptions] = useState([]);\r\n\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: 'user',\r\n        sort: 1,\r\n        status: status,\r\n        state: state,\r\n        company_id: companyId\r\n    };\r\n    useEffect(() => {\r\n        getAllCompany()\r\n            .then(({ data }) => {\r\n                const companies = data.data.companies.rows;\r\n                let options = [];\r\n                companies.map((val) => {\r\n                    options.push({\r\n                        value: val.id,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setCompanyOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log('🚀 ~ file: Adherence.js ~ line 96 ~ useEffect ~ err', err);\r\n            });\r\n\r\n        getAllUsers(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                setDataNotAvailable(false);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data?.users;\r\n                    setUserData(res.rows);\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    if (res.count == 0) setDataNotAvailable(true);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setDataNotAvailable(false);\r\n            });\r\n\r\n        getStates()\r\n            .then(({ data }) => {\r\n                const states = data.data.states;\r\n                let options = [];\r\n                states.map((val) => {\r\n                    options.push({\r\n                        value: val.name,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setStateOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log('🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err', err);\r\n            });\r\n    }, [status, query, state, page, companyId]);\r\n\r\n    async function blockedUser(id) {\r\n        await blockUsers(id)\r\n            .then((res) => {\r\n                if (res.data.code === 200) {\r\n                    const userLists = userData.slice();\r\n                    for (const user of userLists) {\r\n                        if (user.id === id) {\r\n                            user.status = res?.data?.data?.user?.status;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                    setUserData(userLists);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response);\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <div className='table-title'>\r\n                            <TableHeader\r\n                                btnTitle={'+ Add Patient'}\r\n                                route={SLUGS.addPatient}\r\n                                setQuery={setQuery}\r\n                                query={query}\r\n                            />\r\n                            <SelectInput\r\n                                stateOptions={stateOptions}\r\n                                state={state}\r\n                                setState={setState}\r\n                                status={status}\r\n                                setStatus={setStatus}\r\n                                companyOptions={companyOptions}\r\n                                companyId={companyId}\r\n                                setCompanyId={setCompanyId}\r\n                            />\r\n                        </div>\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn\r\n                                columns={[\r\n                                    'Name',\r\n                                    'Email',\r\n                                    'Gender',\r\n                                    'Mobile',\r\n                                    'City',\r\n                                    'State',\r\n                                    'Status',\r\n                                    'Adherence',\r\n                                    'Created On',\r\n                                    'Actions'\r\n                                ]}\r\n                            />\r\n                            <tbody>\r\n                                {dataNotAvailable ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    userData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <div className='d-flex flex-row bd-highlight p-2 '>\r\n                                                    {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                    <span className='p-2'>\r\n                                                        {el.firstName + ' ' + el.lastName}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{el.email}</td>\r\n                                            <td>{el.gender}</td>\r\n                                            <td>{el.phone}</td>\r\n                                            <td>{el.city}</td>\r\n                                            <td>{el.state}</td>\r\n                                            <td>\r\n                                                {el.status == true ? (\r\n                                                    <span className='label label-lg label-light-success label-inline btn-size'>\r\n                                                        Active\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <span className='label label-lg label-light-danger label-inline btn-size'>\r\n                                                        Inactive\r\n                                                    </span>\r\n                                                )}\r\n                                            </td>\r\n                                            <td>{el.adherence.toFixed(2)}%</td>\r\n                                            <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                            <td>\r\n                                                <div className='d-flex'>\r\n                                                    <TableLastChild\r\n                                                        editRoute={SLUGS.editPatient}\r\n                                                        editData={el}\r\n                                                        block={blockedUser}\r\n                                                        blockId={el.id}\r\n                                                        BlockCondition={el.status}\r\n                                                        path={SLUGS.viewPatient}\r\n                                                        schedule={true}\r\n                                                        scheduleRoute={SLUGS.schedulePatient}\r\n                                                    />\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport \"./PatientView.css\"\r\n\r\nconst PatientRow = ({ medicineAdherenceDetails }) => {\r\n  const [selectedMedicineId, setSelectedMedicineId] = useState(null);\r\n\r\n  const toggleMedicineDetails = (medicineId) => {\r\n    if (selectedMedicineId === medicineId) {\r\n      setSelectedMedicineId(null);\r\n    } else {\r\n      setSelectedMedicineId(medicineId);\r\n    }\r\n  };\r\n\r\n  const formatDate = (inputDate) => {\r\n    const date = new Date(inputDate);\r\n    const day = date.getDate();\r\n    const monthIndex = date.getMonth();\r\n    const year = date.getFullYear();\r\n  \r\n    const monthNames = [\r\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n      'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\r\n    ];\r\n    const formattedDate = `${day} ${monthNames[monthIndex]} ${year}`;\r\n    return formattedDate;\r\n  };\r\n\r\n  const formatTime = (inputTime) => {\r\n    const [hours, minutes] = inputTime.split(':');\r\n    let formattedHours = parseInt(hours, 10) % 12;\r\n    formattedHours = formattedHours === 0 ? 12 : formattedHours;\r\n    const period = parseInt(hours, 10) >= 12 ? 'PM' : 'AM';\r\n    const formattedTime = `${formattedHours}:${minutes} ${period}`;\r\n    return formattedTime;\r\n  };\r\n\r\n  const formatSlot = (slotId) => {\r\n    switch (slotId) {\r\n      case 1:\r\n      case 2:\r\n        return 'Morning';\r\n      case 3:\r\n      case 4:\r\n        return 'Afternoon';\r\n      case 5:\r\n      case 6:\r\n        return 'Evening';\r\n      case 7:\r\n      case 8:\r\n        return 'Night';\r\n      default:\r\n        return 'Unknown'; \r\n    }\r\n  };\r\n\r\n  const renderBoxEntries = (openBox, missedBox) => {\r\n    const allEntries = [...openBox, ...missedBox];\r\n  \r\n    const groupedEntries = {};\r\n  \r\n    allEntries.forEach((box) => {\r\n      const dateKey = box.date;\r\n      if (!groupedEntries[dateKey]) {\r\n        groupedEntries[dateKey] = {\r\n          entries: [],\r\n          openCount: 0,\r\n          missedCount: 0,\r\n        };\r\n      }\r\n      groupedEntries[dateKey].entries.push(box);\r\n      if (box.status === 'open') {\r\n        groupedEntries[dateKey].openCount += 1;\r\n      } else {\r\n        groupedEntries[dateKey].missedCount += 1;\r\n      }\r\n    });\r\n  \r\n    return Object.keys(groupedEntries).map((date) => (\r\n      <tr key={date}>\r\n        <td>{formatDate(date)}</td>\r\n        <td>\r\n          {groupedEntries[date].entries.map((box) => (\r\n            <span key={box.id} className={`${box.status === 'open' ? 'text-success' : 'text-danger'} me-3`}>\r\n              {formatTime(box.time)}\r\n            </span>\r\n          ))}\r\n        </td>\r\n        <td>{groupedEntries[date].openCount}</td>\r\n        <td>{groupedEntries[date].missedCount}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className='row justify-content-center medicine-history-table'>\r\n      <div className=\"card col-md-12\">\r\n        <div className='card-body'>\r\n          <h5 className=\"card-title\">Medicine History</h5>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Company Name</th>\r\n                <th>Total Open</th>\r\n                <th>Total Missed</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {medicineAdherenceDetails.length > 0 ? medicineAdherenceDetails.map((medicine) => (\r\n                <React.Fragment key={medicine.medicineId}>\r\n                  <tr onClick={() => toggleMedicineDetails(medicine.medicineId)} style={{ cursor: 'pointer' }}>\r\n                    <td className='medicine-name label label-lg label-light-warning label-inline'>{medicine.medicineName}</td>\r\n                    <td>{medicine.companyName}</td>\r\n                    <td>{medicine.totalOpen}</td>\r\n                    <td>{medicine.totalMissed}</td>\r\n                  </tr>\r\n                  {/* Render detailed history if medicine is selected */}\r\n                  {selectedMedicineId === medicine.medicineId && (\r\n                    <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Date</th>\r\n                        <th>Time</th>\r\n                        <th>Taken Count</th>\r\n                        <th>Missed Count</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {renderBoxEntries(medicine.openBox, medicine.missedBox)}\r\n                    </tbody>\r\n                  </table>\r\n                  )}\r\n                </React.Fragment>\r\n              )) : <tr><td><td> No Record Found </td></td></tr>}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientRow;\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getUserDoses, getUserMedicineAdherence } from 'resources/serverReq/admin/user';\r\nimport \"./PatientView.css\"\r\nimport PatientRow from './PatientRow';\r\nexport default function PatientView(props) {\r\n    const data = props.location.state;\r\n    const [medicineDetails, setMedicineDetails] = useState([]);\r\n    const [medicineAdherenceDetails, setMedicineAdherenceDetails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getUserDoses(data.id)\r\n            .then((response) => {\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.data;\r\n                    console.log('🚀 ~ file: PatientView.js ~ line 15 ~ getUserDoses ~ res', res);\r\n                    setMedicineDetails(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        getUserMedicineAdherence(data.id)\r\n            .then((response) => {\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.medicines;\r\n                    console.log('🚀 ~ file: PatientView.js ~ line 15 ~ getUserMedicineAdherence ~ res', res);\r\n                    setMedicineAdherenceDetails(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    console.log('🚀 ~ file: PatientView.js ~ line 7 ~ PatientView ~ data', data);\r\n    return (\r\n        <>\r\n            <div className='main'>\r\n                <div className='d-flex'>\r\n                <div className='row'>\r\n                    <div className='card'>\r\n                        <div className='card-body'>\r\n                            <i className='fa fa-pen fa-xs edit'></i>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Name:</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data?.firstName + ' ' + data?.lastName}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>DOB:</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data?.dob}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Email:</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data?.email}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Phone</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data?.phone}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Gender</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data?.gender}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>City</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data?.city}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>State</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{data?.state}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Care Giver Code</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>\r\n                                            <span className='label label-lg label-light-warning label-inline'>\r\n                                                {data?.reference_code}\r\n                                            </span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Status</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>\r\n                                            {data?.status ? (\r\n                                                <span className='label label-lg label-light-success label-inline'>\r\n                                                    Active\r\n                                                </span>\r\n                                            ) : (\r\n                                                <span className='label label-lg label-light-danger label-inline'>\r\n                                                    Inactive\r\n                                                </span>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <b>Created On</b>\r\n                                        </td>\r\n                                        <td>:</td>\r\n                                        <td>{moment(data?.createdAt).format('DD-MMM-YY')}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {data?.deviceMappings.length > 0 && (\r\n                    <div className='row'>\r\n                        <div className='card'>\r\n                            <div className='card-body'>\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Device #</th>\r\n                                            <th></th>\r\n                                            <th></th>\r\n                                            <th>Firmware Version</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {data.deviceMappings.map((d) => (\r\n                                            <tr>\r\n                                                <td>{d.device.name}</td>\r\n                                                <td></td>\r\n                                                <td></td>\r\n                                                <td>\r\n                                                    {d.device?.firmwareVersion == null ||\r\n                                                    d?.device?.firmwareVersion.trim() == ''\r\n                                                        ? 'N/A'\r\n                                                        : d.device.firmwareVersion.trim()}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                 {data.deviceMappings.length > 0 && (\r\n                    <div className='row'>\r\n                        <div className='card '>\r\n                            <div className='card-body'>\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Device Serial</th>\r\n                                            <th>Device Name</th>\r\n                                            <th>Company Name</th>\r\n                                            <th>Doctor Name</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {data.deviceMappings.map((d) => (\r\n                                            <tr>\r\n                                                <td>{d.device.name}</td>\r\n                                                <td>{d.device.serialNumber}</td>\r\n                                                <td>{d.company.name}</td>\r\n                                                <td>\r\n                                                    {d.doctor.firstName} {d.doctor.lastName}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                </div>\r\n\r\n                { <PatientRow medicineAdherenceDetails={medicineAdherenceDetails} /> }\r\n\r\n                {/* {medicineDetails.length > 0 && (\r\n                    <div className='row'>\r\n                        <div className='card col-md-6 offset-md-3'>\r\n                            <div className='card-body'>\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Name</th>\r\n                                            <th></th>\r\n                                            <th>Company Name</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {medicineDetails.map((d) => (\r\n                                            <tr>\r\n                                                <td>{d.medicineDetails.name}</td>\r\n                                                <td></td>\r\n                                                <td>{d.medicineDetails.companyName}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )} */}\r\n\r\n               \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FormBtns } from 'components/table';\r\nimport slugs from 'resources/slugs';\r\nimport { getAllMedicine } from 'resources/serverReq/admin/medicine';\r\nimport {\r\n    scheduleDoseByAdmin,\r\n    getUserSlotTimings,\r\n    setDoseTimeByAdmin\r\n} from 'resources/serverReq/admin/user';\r\nimport Loader from 'components/table/Loader';\r\nimport TimePicker from 'react-time-picker';\r\nimport 'react-time-picker/dist/TimePicker.css';\r\nimport 'react-clock/dist/Clock.css';\r\nimport moment from 'moment';\r\n\r\nexport default function SchedulePatient(props) {\r\n    const data = props?.location?.state;\r\n    const history = useHistory();\r\n    const [medicineData, setMedicineData] = useState([]);\r\n    const [slotTiming, setSlotTimings] = useState(false);\r\n    const [timingss, setTimingss] = useState([]);\r\n    const [selectedMedicine, setSelectedMedicine] = useState(null);\r\n    const [selectedDays, setSelectedDays] = useState([\r\n        'Sun',\r\n        'Mon',\r\n        'Tue',\r\n        'Wed',\r\n        'Thu',\r\n        'Fri',\r\n        'Sat'\r\n    ]);\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const initialTimings = {\r\n        Morning: {\r\n            beforeMeals: false,\r\n            afterMeals: false,\r\n            none: true,\r\n            quantities: { beforeMeals: 1, afterMeals: 1 },\r\n            values: { beforeMeals: 1, afterMeals: 2 }\r\n        },\r\n        Afternoon: {\r\n            beforeMeals: false,\r\n            afterMeals: false,\r\n            none: true,\r\n            quantities: { beforeMeals: 1, afterMeals: 1 },\r\n            values: { beforeMeals: 3, afterMeals: 4 }\r\n        },\r\n        Evening: {\r\n            beforeMeals: false,\r\n            afterMeals: false,\r\n            none: true,\r\n            quantities: { beforeMeals: 1, afterMeals: 1 },\r\n            values: { beforeMeals: 5, afterMeals: 6 }\r\n        },\r\n        Night: {\r\n            beforeMeals: false,\r\n            afterMeals: false,\r\n            none: true,\r\n            quantities: { beforeMeals: 1, afterMeals: 1 },\r\n            values: { beforeMeals: 7, afterMeals: 8 }\r\n        }\r\n    };\r\n    const [selectedOptions, setSelectedOptions] = useState(initialTimings);\r\n    const timings = {\r\n        Morning: {\r\n            beforeMeals: { label: 'Before Meals', value: 1, quantity: 0 },\r\n            afterMeals: { label: 'After Meals', value: 2, quantity: 0 },\r\n            none: { label: 'None' }\r\n        },\r\n        Afternoon: {\r\n            beforeMeals: { label: 'Before Meals', value: 1, quantity: 0 },\r\n            afterMeals: { label: 'After Meals', value: 2, quantity: 0 },\r\n            none: { label: 'None' }\r\n        },\r\n        Evening: {\r\n            beforeMeals: { label: 'Before Meals', value: 1, quantity: 0 },\r\n            afterMeals: { label: 'After Meals', value: 2, quantity: 0 },\r\n            none: { label: 'None' }\r\n        },\r\n        Night: {\r\n            beforeMeals: { label: 'Before Meals', value: 1, quantity: 0 },\r\n            afterMeals: { label: 'After Meals', value: 2, quantity: 0 },\r\n            none: { label: 'None' }\r\n        }\r\n    };\r\n\r\n    const DoseTimings = () => {\r\n        const handleCheckboxChange = (timing, option) => {\r\n            setSelectedOptions((prevState) => {\r\n                const newOptions = { ...prevState };\r\n                if (option === 'none') {\r\n                    newOptions[timing] = {\r\n                        beforeMeals: false,\r\n                        afterMeals: false,\r\n                        none: true,\r\n                        quantities: { beforeMeals: 0, afterMeals: 0 }\r\n                    };\r\n                } else {\r\n                    newOptions[timing][option] = !prevState[timing][option];\r\n                    if (newOptions[timing][option]) {\r\n                        newOptions[timing].none = false;\r\n                    } else if (!newOptions[timing].beforeMeals && !newOptions[timing].afterMeals) {\r\n                        newOptions[timing].none = true;\r\n                    }\r\n                }\r\n                return newOptions;\r\n            });\r\n        };\r\n\r\n        const handleQuantityChange = (timing, option, change) => {\r\n            setSelectedOptions((prevState) => {\r\n                const newOptions = { ...prevState };\r\n                newOptions[timing].quantities[option] += change;\r\n                if (newOptions[timing].quantities[option] < 0) {\r\n                    newOptions[timing].quantities[option] = 0;\r\n                }\r\n                return newOptions;\r\n            });\r\n        };\r\n\r\n        return (\r\n            <div className=''>\r\n                <div className='form-group'>\r\n                    <label className='fw-bold h5'>Configure Dose Timings</label>\r\n                    {Object.keys(timings).map((timing) => (\r\n                        <div key={timing} className='m-3'>\r\n                            <div className='fw-bold text-success'>{timing}</div>\r\n                            <div className='d-flex flex-wrap'>\r\n                                {Object.keys(timings[timing]).map((option) => (\r\n                                    <div key={option} className='form-check ms-3 mb-2'>\r\n                                        <input\r\n                                            className='form-check-input'\r\n                                            type='checkbox'\r\n                                            id={`${timing}-${option}`}\r\n                                            checked={selectedOptions[timing][option]}\r\n                                            onChange={() => handleCheckboxChange(timing, option)}\r\n                                        />\r\n                                        <label\r\n                                            className='form-check-label'\r\n                                            htmlFor={`${timing}-${option}`}\r\n                                        >\r\n                                            {timings[timing][option].label}\r\n                                        </label>\r\n                                        {option !== 'none' && selectedOptions[timing][option] && (\r\n                                            <span className='ms-2 d-flex align-items-center'>\r\n                                                <button\r\n                                                    type='button'\r\n                                                    className='btn btn-sm btn-outline-secondary'\r\n                                                    onClick={() =>\r\n                                                        handleQuantityChange(timing, option, -1)\r\n                                                    }\r\n                                                >\r\n                                                    -\r\n                                                </button>\r\n                                                <span className='mx-2'>\r\n                                                    {selectedOptions[timing].quantities[option]}\r\n                                                </span>\r\n                                                <button\r\n                                                    type='button'\r\n                                                    className='btn btn-sm btn-outline-secondary'\r\n                                                    onClick={() =>\r\n                                                        handleQuantityChange(timing, option, 1)\r\n                                                    }\r\n                                                >\r\n                                                    +\r\n                                                </button>\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (query) {\r\n            const params = { search: query };\r\n            getAllMedicine(params)\r\n                .then((response) => {\r\n                    if (response?.data?.code === 200) {\r\n                        setMedicineData(response.data.data.medicines.rows);\r\n                    }\r\n                })\r\n                .catch((err) => console.log(err));\r\n        } else {\r\n            setMedicineData([]);\r\n        }\r\n    }, [query]);\r\n\r\n    useEffect(() => {\r\n        getUserSlotTimings(data.id)\r\n            .then((response) => {\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data?.slots?.rows;\r\n                    setTimingss(res);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [slotTiming]);\r\n\r\n    const handleTimeChange = (id, newTime) => {\r\n        const timingToUpdate = timingss.find((timing) => timing.id === id);\r\n        const { startTime, endTime } = timingToUpdate;\r\n        const formattedNewTime = moment(newTime, 'h:mm A');\r\n        const formattedStartTime = moment(startTime, 'h:mm A');\r\n        const formattedEndTime = moment(endTime, 'h:mm A');\r\n\r\n        if (formattedNewTime.isBetween(formattedStartTime, formattedEndTime, null, '[]')) {\r\n            const formattedTime = formattedNewTime.format('HH:mm');\r\n            setTimingss((prevTimings) =>\r\n                prevTimings.map((timing) =>\r\n                    timing.id === id ? { ...timing, time: formattedTime } : timing\r\n                )\r\n            );\r\n        } else {\r\n            toast.error('Selected time is outside the allowed range');\r\n        }\r\n    };\r\n\r\n    const renderTimings = (data) => {\r\n        const timePeriods = ['Morning', 'Afternoon', 'Evening', 'Night'];\r\n\r\n        return timePeriods.map((period) => {\r\n            const beforeMeals = data.filter(\r\n                (timing) => timing.name === period && timing.type === 'before'\r\n            );\r\n            const afterMeals = data.filter(\r\n                (timing) => timing.name === period && timing.type === 'after'\r\n            );\r\n\r\n            return (\r\n                <div key={period} className='mb-4 mt-4'>\r\n                    <h4>{period}</h4>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <div className='me-5'>\r\n                            <h6>Before Meals</h6>\r\n                            {beforeMeals.map((timing) => (\r\n                                <div key={timing.id} className='d-flex mb-2 align-items-center'>\r\n                                    <div className='d-flex align-items-center me-2'>\r\n                                        <TimePicker\r\n                                            clearIcon={null}\r\n                                            onChange={(time) => handleTimeChange(timing.id, time)}\r\n                                            value={\r\n                                                timing.time ||\r\n                                                (timing.startTime.includes('AM') ||\r\n                                                timing.startTime.includes('PM')\r\n                                                    ? moment(timing.startTime, 'h:mm A').format(\r\n                                                          'HH:mm'\r\n                                                      )\r\n                                                    : timing.startTime)\r\n                                            }\r\n                                            format='HH:mm'\r\n                                            disableClock={false}\r\n                                            renderInput={(props) => (\r\n                                                <input\r\n                                                    {...props}\r\n                                                    readOnly\r\n                                                    style={{ cursor: 'not-allowed' }}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                    <span className='me-2'>- {timing.endTime}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className='ms-5'>\r\n                            <h6>After Meals</h6>\r\n                            {afterMeals.map((timing) => (\r\n                                <div key={timing.id} className='d-flex mb-2 align-items-center'>\r\n                                    <div className='d-flex align-items-center me-2'>\r\n                                        <TimePicker\r\n                                            clearIcon={null}\r\n                                            onChange={(time) => handleTimeChange(timing.id, time)}\r\n                                            value={\r\n                                                timing.time ||\r\n                                                (timing.startTime.includes('AM') ||\r\n                                                timing.startTime.includes('PM')\r\n                                                    ? moment(timing.startTime, 'h:mm A').format(\r\n                                                          'HH:mm'\r\n                                                      )\r\n                                                    : timing.startTime)\r\n                                            }\r\n                                            format='HH:mm'\r\n                                            disableClock={false}\r\n                                            renderInput={(props) => (\r\n                                                <input\r\n                                                    {...props}\r\n                                                    readOnly\r\n                                                    style={{ cursor: 'not-allowed' }}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                    <span className='me-2'>- {timing.endTime}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    const handleTimings = () => {\r\n        const newData = timingss.map((timing) => ({\r\n            slot_id: timing.id,\r\n            time: timing.time || moment(timing.startTime, 'h:mm A').format('HH:mm'),\r\n            user_id: data.id\r\n        }));\r\n        const json = { data: newData };\r\n        setDoseTimeByAdmin(json)\r\n            .then((response) => {\r\n                if (response?.data?.code == 200) {\r\n                    toast.success('Timings updated successfully');\r\n                    setSlotTimings(!slotTiming);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                toast.error('Something went wrong');\r\n            });\r\n    };\r\n\r\n    const handleMedicineSelect = (medicine) => {\r\n        setSelectedMedicine(medicine);\r\n        setQuery('');\r\n    };\r\n\r\n    const handleDaySelection = (day) => {\r\n        const newSelectedDays = selectedDays.includes(day)\r\n            ? selectedDays.filter((d) => d !== day)\r\n            : [...selectedDays, day];\r\n        setSelectedDays(newSelectedDays);\r\n    };\r\n\r\n    const renderDayCheckboxes = () => {\r\n        const days = {\r\n            Sun: 'Sunday',\r\n            Mon: 'Monday',\r\n            Tue: 'Tuesday',\r\n            Wed: 'Wednesday',\r\n            Thu: 'Thursday',\r\n            Fri: 'Friday',\r\n            Sat: 'Saturday'\r\n        };\r\n\r\n        return (\r\n            <div className='my-3'>\r\n                <div className='row'>\r\n                    {Object.keys(days).map((key) => {\r\n                        const dayName = days[key];\r\n                        return (\r\n                            <div key={key} className='col-md-4 mb-3'>\r\n                                <div className='form-check'>\r\n                                    <input\r\n                                        type='checkbox'\r\n                                        className='form-check-input'\r\n                                        id={key}\r\n                                        checked={selectedDays.includes(key)}\r\n                                        onChange={() => handleDaySelection(key)}\r\n                                    />\r\n                                    <label className='form-check-label' htmlFor={key}>\r\n                                        {dayName}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const findSlot = () => {\r\n        let slots = [];\r\n        Object.values(selectedOptions).forEach((option) => {\r\n            if (option.none != true) {\r\n                if (option.beforeMeals) {\r\n                    slots.push(option.values.beforeMeals);\r\n                }\r\n                if (option.afterMeals) {\r\n                    slots.push(option.values.afterMeals);\r\n                }\r\n            }\r\n        });\r\n\r\n        return slots;\r\n    };\r\n\r\n    const checkTime = () => {\r\n        let count = 0;\r\n        Object.values(selectedOptions).forEach((option) => {\r\n            if (option.none != true) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n\r\n    const count_morning = () => {\r\n        let count = [];\r\n        const option = selectedOptions['Morning'];\r\n        if (option.none != true) {\r\n            if (option.beforeMeals) {\r\n                count.push({ 1: option.quantities.beforeMeals });\r\n            }\r\n            if (option.afterMeals) {\r\n                count.push({ 2: option.quantities.afterMeals });\r\n            }\r\n        }\r\n        return count;\r\n    };\r\n\r\n    const count_afternoon = () => {\r\n        let count = [];\r\n        const option = selectedOptions['Afternoon'];\r\n        if (option.none != true) {\r\n            if (option.beforeMeals) {\r\n                count.push({ 3: option.quantities.beforeMeals });\r\n            }\r\n            if (option.afterMeals) {\r\n                count.push({ 4: option.quantities.afterMeals });\r\n            }\r\n        }\r\n        return count;\r\n    };\r\n\r\n    const count_evening = () => {\r\n        let count = [];\r\n        const option = selectedOptions['Evening'];\r\n        if (option.none != true) {\r\n            if (option.beforeMeals) {\r\n                count.push({ 5: option.quantities.beforeMeals });\r\n            }\r\n            if (option.afterMeals) {\r\n                count.push({ 6: option.quantities.afterMeals });\r\n            }\r\n        }\r\n        return count;\r\n    };\r\n\r\n    const count_night = () => {\r\n        let count = [];\r\n        const option = selectedOptions['Night'];\r\n        if (option.none != true) {\r\n            if (option.beforeMeals) {\r\n                count.push({ 7: option.quantities.beforeMeals });\r\n            }\r\n            if (option.afterMeals) {\r\n                count.push({ 8: option.quantities.afterMeals });\r\n            }\r\n        }\r\n        return count;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!selectedMedicine) {\r\n            toast.error('Please select medicine');\r\n            return;\r\n        }\r\n        let time = checkTime();\r\n        if (time == 0) {\r\n            toast.error('Please Configure Time');\r\n            return;\r\n        }\r\n        let slots = findSlot();\r\n        let morning = count_morning();\r\n        let afternoon = count_afternoon();\r\n        let evening = count_evening();\r\n        let night = count_night();\r\n\r\n        const json = {\r\n            patient_id: data.id,\r\n            medicine_id: selectedMedicine.id,\r\n            slot_ids: slots,\r\n            days: selectedDays,\r\n            count_morning: morning,\r\n            count_afternoon: afternoon,\r\n            count_evening: evening,\r\n            count_night: night\r\n        };\r\n        setLoading(true);\r\n        scheduleDoseByAdmin(json)\r\n            .then((response) => {\r\n                if (response?.data?.code == 200) {\r\n                    toast.success('Medicine successfully scheduled', {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false\r\n                    });\r\n                    handleCancel();\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response?.data?.errorMessage);\r\n                toast.error(err.response?.data?.errorMessage, {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false\r\n                });\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        history.push(slugs.patient);\r\n    };\r\n\r\n    return (\r\n        <div className='row'>\r\n            {loading && <Loader />}\r\n            <div className='card'>\r\n                <h3 className='d-flex justify-content-center align-items-center mt-3 mb-2'>\r\n                    Schedule Medicine for{' '}\r\n                    <span className='ms-2 text-success'>\r\n                        {data.firstName} {data.lastName}\r\n                    </span>\r\n                </h3>\r\n                <div className='d-flex justify-content-center align-items-center container-xl'>\r\n                    <form className='p-5' onSubmit={handleSubmit}>\r\n                        <div className='form-group mb-3'>\r\n                            <label className='fw-bold'>Medicine Name</label>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control'\r\n                                placeholder='Search Medicine'\r\n                                value={query}\r\n                                onChange={(e) => setQuery(e.target.value)}\r\n                            />\r\n                            {query && medicineData.length > 0 && (\r\n                                <ul className='list-group'>\r\n                                    {medicineData.map((medicine) => (\r\n                                        <li\r\n                                            key={medicine.id}\r\n                                            className='list-group-item'\r\n                                            onClick={() => handleMedicineSelect(medicine)}\r\n                                        >\r\n                                            {medicine.name} - {medicine.companyName}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n                            {selectedMedicine && (\r\n                                <div className='mt-3'>\r\n                                    <h6>\r\n                                        Selected Medicine:{' '}\r\n                                        <span className='medicine-name label label-lg label-light-warning label-inline'>\r\n                                            {selectedMedicine.name}{' '}\r\n                                        </span>\r\n                                    </h6>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='form-group mb-3'>\r\n                            <DoseTimings />\r\n                        </div>\r\n\r\n                        <div className='form-group mb-3 items-center'>\r\n                            <>\r\n                                <label className='fw-bold'>Select Days</label>\r\n                                {renderDayCheckboxes()}\r\n                            </>\r\n                        </div>\r\n\r\n                        <button type='submit' className='btn btn-primary mt-4'>\r\n                            Schedule\r\n                        </button>\r\n                        <button\r\n                            type='button'\r\n                            className='btn btn-secondary ms-2 mt-4'\r\n                            onClick={handleCancel}\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {/* timings */}\r\n            <div className='card align-items-center'>\r\n                <h3 className='d-flex justify-content-center align-items-center mt-3 mb-2'>\r\n                    Dose Timings of{' '}\r\n                    <span className='ms-2 text-success'>\r\n                        {data.firstName} {data.lastName}\r\n                    </span>\r\n                </h3>\r\n                <div className='mx-auto mt-4'>{renderTimings(timingss)}</div>\r\n                <button onClick={handleTimings} className='btn btn-primary m-5 w-15'>\r\n                    Save Timings\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAllReferenceCodes(params) {\r\n    return await axios.get(\"/admin/reference-codes\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function addReferenceCode(data) {\r\n    return await axios.post(`/admin/reference-codes`, data);\r\n\r\n}\r\n\r\nexport async function blockReferenceCodes(id) {\r\n    return await axios.put(`/admin/reference-codes/${id}/status`);\r\n}\r\n\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { addReferenceCode } from \"resources/serverReq/admin/reference-code\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\n\r\n\r\nconst initialValues = {\r\n    description: \"\",\r\n};\r\n\r\nexport default function AddReferenceCode(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const medicineSchema = Yup.object().shape({\r\n\r\n        description: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: medicineSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            addReferenceCode(values).then((res) => {\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Referral code has been successfully added in system.')\r\n                    props.history.push(slugs.referenceCode)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Add Medicine</h3>\r\n                    <div className=\"container-xl\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    placeholder=\"Referral Code Description\"\r\n                                    type=\"description\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"description\"\r\n                                    )}`}\r\n                                    name=\"description\"\r\n                                    {...formik.getFieldProps(\"description\")}\r\n                                />\r\n                                {formik.touched.description && formik.errors.description ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.description}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.referenceCode} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { TableColumn, TableHeader } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { getAllReferenceCodes } from 'resources/serverReq/admin/reference-code';\r\nimport SLUGS from 'resources/slugs';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nexport default function ReferenceCode() {\r\n    const [referenceCodeData, setReferenceCodeData] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [csv, setCSV] = useState(null);\r\n    const ref = useRef();\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n            status: status,\r\n            createdAt: createdAt\r\n        };\r\n\r\n        getAllReferenceCodes(params)\r\n            .then((response) => {\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.referral_codes;\r\n                    setReferenceCodeData(res.rows);\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    setDataNotAvailable(true);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [query, status, page, refreshKey, createdAt]);\r\n\r\n    return (\r\n        <>\r\n            {query != '' || dataNotAvailable ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <TableHeader\r\n                            btnTitle={'+ Add Referral Code '}\r\n                            route={SLUGS.addReferenceCode}\r\n                            setQuery={setQuery}\r\n                            query={query}\r\n                        />\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn\r\n                                columns={[\r\n                                    'Referral Code',\r\n                                    'Referral Description',\r\n                                    'Status',\r\n                                    'Created On',\r\n                                ]}\r\n                            />\r\n                            <tbody>\r\n                                {referenceCodeData.length == 0 ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    referenceCodeData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <div className='d-flex flex-row bd-highlight p-2 '>\r\n                                                    <span className='p-2'>{el.code}</span>\r\n                                                </div>\r\n                                            </td>\r\n\r\n                                            <td>{el.description}</td>\r\n                                            <td>\r\n                                                {el.status == true ? (\r\n                                                    <span className='label label-lg label-light-success label-inline'>\r\n                                                        Active\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <span className='label label-lg label-light-danger label-inline'>\r\n                                                        Inactive\r\n                                                    </span>\r\n                                                )}\r\n                                            </td>\r\n                                            <td>\r\n                                                {moment(el.createdAt).format('DD-MMM-YY hh:mm a')}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import {axios} from \"../axios\"\r\n\r\n\r\nexport async function getAllSlot(params) {\r\n    return await axios.get(\"/admin/slots\",{\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function viewSlotDetails(id) {\r\n    return await axios.get(`/admin/slot/${id}`);\r\n\r\n}\r\n\r\nexport async function editSlot(id,data) {\r\n    return await axios.put(`/admin/slot/${id}`,data);\r\n\r\n}\r\n\r\nexport async function closeSlot(id) {\r\n    return await axios.put(`/admin/device/${id}/status`);\r\n\r\n}\r\n\r\nexport async function addSlotData(data) {\r\n    return await axios.post(`/admin/slot`,data);\r\n\r\n}","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useState } from 'react';\r\nimport { addSlotData } from \"resources/serverReq/admin/slot\";\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport \"../../common/common.css\";\r\nimport {toast} from \"react-toastify\"\r\n\r\nconst initialValues = {\r\n    name: \"Morning\",\r\n    type: \"after\",\r\n    startTime: \"10 AM\",\r\n    endTime: \"1 PM\",\r\n    order: 2,\r\n    displayName: \"Morning\",\r\n    displayType: \"after meals\"\r\n};\r\n\r\nexport default function AddSlot(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const userScheema = Yup.object().shape({\r\n\r\n        name: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        type: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        startTime: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        endTime: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        order: Yup.number()\r\n            .required(\"Required\"),\r\n        displayName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        displayType: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userScheema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            addSlotData(values).then((res) => {\r\n\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('New Slot added in system')\r\n\r\n                    props.history.push(slugs.slot)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mb-5'>Create Slot</h3>\r\n                    <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n                            <div className='d-flex '>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label> Name</label>\r\n                                    <input\r\n                                        placeholder=\" Name\"\r\n                                        type=\"name\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"name\"\r\n                                        )}`}\r\n                                        name=\"name\"\r\n                                        {...formik.getFieldProps(\"name\")}\r\n                                    />\r\n                                    {formik.touched.name && formik.errors.name ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.name}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Type</label>\r\n                                    <input\r\n                                        placeholder=\"Type\"\r\n                                        type=\"type\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"type\"\r\n                                        )}`}\r\n                                        name=\"type\"\r\n                                        {...formik.getFieldProps(\"type\")}\r\n                                    />\r\n                                    {formik.touched.type && formik.errors.type ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.type}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Display Name</label>\r\n\r\n                                    <input\r\n                                        placeholder=\"Display Name\"\r\n                                        type=\"displayName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"displayName\"\r\n                                        )}`}\r\n                                        name=\"displayName\"\r\n                                        {...formik.getFieldProps(\"displayName\")}\r\n                                    />\r\n                                    {formik.touched.displayName && formik.errors.displayName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.displayName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Display Type</label>\r\n                                    <input\r\n                                        placeholder=\"Display Type\"\r\n                                        type=\"displayType\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"displayType\"\r\n                                        )}`}\r\n                                        name=\"displayType\"\r\n                                        {...formik.getFieldProps(\"displayType\")}\r\n                                    />\r\n                                    {formik.touched.displayType && formik.errors.displayType ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.displayType}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Start Time</label>\r\n                                    <input\r\n                                        placeholder=\"Start Time\"\r\n                                        type=\"startTime\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"startTime\"\r\n                                        )}`}\r\n                                        name=\"startTime\"\r\n                                        {...formik.getFieldProps(\"startTime\")}\r\n                                    />\r\n                                    {formik.touched.startTime && formik.errors.startTime ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.startTime}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>End Time</label>\r\n                                    <input\r\n                                        placeholder=\"End Time\"\r\n                                        type=\"endTime\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"endTime\"\r\n                                        )}`}\r\n                                        name=\"endTime\"\r\n                                        {...formik.getFieldProps(\"endTime\")}\r\n                                    />\r\n                                    {formik.touched.endTime && formik.errors.endTime ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.endTime}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Order</label>\r\n                                    <input\r\n                                        placeholder=\"Order\"\r\n                                        type=\"order\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"order\"\r\n                                        )}`}\r\n                                        name=\"order\"\r\n                                        {...formik.getFieldProps(\"order\")}\r\n                                    />\r\n                                    {formik.touched.order && formik.errors.order ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.order}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.slot} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { editSlot } from \"resources/serverReq/admin/slot\"\r\nimport slugs from 'resources/slugs';\r\nimport \"../../common/common.css\"\r\nimport { FormBtns } from \"components/table\";\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function EditSlot(props) {\r\n    const data = props?.location?.state\r\n    const initialValues = {\r\n        name: data.name,\r\n        type: data.type,\r\n        startTime: data.startTime,\r\n        endTime: data.endTime,\r\n        order: data.order,\r\n        displayName: data.displayName,\r\n        displayType: data.displayType\r\n    };\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const userScheema = Yup.object().shape({\r\n\r\n        name: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        type: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        startTime: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        endTime: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        order: Yup.number()\r\n            .required(\"Required\"),\r\n        displayName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        displayType: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userScheema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            editSlot(data.id, values).then((res) => {\r\n                if (res?.data?.code === 200) {\r\n                    toast.success('Slot has been successfully updated.')\r\n                    props.history.push(slugs.slot)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n\r\n                    <h3 className='d-flex justify-content-center align-items-center form-title mt-5 mb-5'>Update Slot</h3>\r\n                    <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n                            <div className='d-flex '>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label> Name</label>\r\n                                    <input\r\n                                        placeholder=\" Name\"\r\n                                        type=\"name\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"name\"\r\n                                        )}`}\r\n                                        name=\"name\"\r\n                                        {...formik.getFieldProps(\"name\")}\r\n                                    />\r\n                                    {formik.touched.name && formik.errors.name ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.name}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Type</label>\r\n                                    <input\r\n                                        placeholder=\"Type\"\r\n                                        type=\"type\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"type\"\r\n                                        )}`}\r\n                                        name=\"type\"\r\n                                        {...formik.getFieldProps(\"type\")}\r\n                                    />\r\n                                    {formik.touched.type && formik.errors.type ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.type}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Display Name</label>\r\n\r\n                                    <input\r\n                                        placeholder=\"Display Name\"\r\n                                        type=\"displayName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"displayName\"\r\n                                        )}`}\r\n                                        name=\"displayName\"\r\n                                        {...formik.getFieldProps(\"displayName\")}\r\n                                    />\r\n                                    {formik.touched.displayName && formik.errors.displayName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.displayName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Display Type</label>\r\n                                    <input\r\n                                        placeholder=\"Display Type\"\r\n                                        type=\"displayType\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"displayType\"\r\n                                        )}`}\r\n                                        name=\"displayType\"\r\n                                        {...formik.getFieldProps(\"displayType\")}\r\n                                    />\r\n                                    {formik.touched.displayType && formik.errors.displayType ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.displayType}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Start Time</label>\r\n                                    <input\r\n                                        placeholder=\"Start Time\"\r\n                                        type=\"startTime\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"startTime\"\r\n                                        )}`}\r\n                                        name=\"startTime\"\r\n                                        {...formik.getFieldProps(\"startTime\")}\r\n                                    />\r\n                                    {formik.touched.startTime && formik.errors.startTime ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.startTime}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>End Time</label>\r\n                                    <input\r\n                                        placeholder=\"End Time\"\r\n                                        type=\"endTime\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"endTime\"\r\n                                        )}`}\r\n                                        name=\"endTime\"\r\n                                        {...formik.getFieldProps(\"endTime\")}\r\n                                    />\r\n                                    {formik.touched.endTime && formik.errors.endTime ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.endTime}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Order</label>\r\n                                    <input\r\n                                        placeholder=\"Order\"\r\n                                        type=\"order\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"order\"\r\n                                        )}`}\r\n                                        name=\"order\"\r\n                                        {...formik.getFieldProps(\"order\")}\r\n                                    />\r\n                                    {formik.touched.order && formik.errors.order ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.order}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={slugs.slot} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { IconEdit } from 'assets/icons'\r\nimport { TableColumn, TableHeader } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { FaEye } from \"react-icons/fa\"\r\nimport { Link } from 'react-router-dom'\r\nimport { closeSlot, getAllSlot } from 'resources/serverReq/admin/slot'\r\nimport SLUGS from 'resources/slugs'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function Slot() {\r\n\r\n\r\n    const [slotData, setSlotData] = useState([])\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query\r\n\r\n        };\r\n\r\n        getAllSlot(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.slots\r\n                console.log(\"🚀 ~ file: Slot.js ~ line 33 ~ getAllSlot ~ res\", res)\r\n                setSlotData(res.rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n                console.log(\"🚀 ~ file: Slot.js ~ line 36 ~ getAllSlot ~ res.length\", res.length)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n    }, [query, page])\r\n\r\n    async function blockSlot(id) {\r\n        await closeSlot(id).then((res) => {\r\n\r\n            if (res.data.code === 200) {\r\n                const slotList = slotData.slice();\r\n                for (const slot of slotList) {\r\n                    if (slot.id === id) {\r\n                        slot.status = res.data.data.status;\r\n\r\n                        break;\r\n                    }\r\n                }\r\n                setSlotData(slotList);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error.response);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n\r\n                            <TableHeader btnTitle={\"+ Add Slot\"} route={SLUGS.addSlot} setQuery={setQuery} query={query} />\r\n\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Display Name\", \"Display Type\", \"Start Time\", \"End Time\", \"Order\", \"type\", \"Created On\", \"Actions\"]} />\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td></tr> :\r\n                                            slotData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.name}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td >{el.displayName}</td>\r\n                                                    <td>{el.displayType}</td>\r\n                                                    <td>{el.startTime}</td>\r\n                                                    <td>{el.endTime}</td>\r\n                                                    <td>{el.order}</td>\r\n                                                    <td>{el.type}</td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY hh:mm a')}</td>\r\n                                                    <td>\r\n                                                        <div className='d-flex justify-content-start last-child-table'>\r\n\r\n\r\n                                                            <Link to={{\r\n                                                                pathname: `${SLUGS.viewSlot}/${el.id}`,\r\n                                                            }}\r\n                                                                style={{ padding: \"6px\", marginRight: \"6px\" }}\r\n                                                                className=\"btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button\"\r\n                                                                title=\"View details\"\r\n\r\n                                                            >\r\n                                                                <span className=\"svg-icon menu-icon mr-2 text-light\">\r\n                                                                    <FaEye style={{ color: 'black' }} />\r\n                                                                </span>\r\n\r\n                                                            </Link>\r\n\r\n\r\n                                                            <Link to={{\r\n                                                                pathname: `${SLUGS.editSlot}`,\r\n                                                                state: el\r\n\r\n                                                            }}\r\n                                                                title=\"Edit\"\r\n                                                                className=\"btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button \"\r\n\r\n                                                            >\r\n                                                                <span className=\"svg-icon svg-icon-sm svg-icon-primary\">\r\n                                                                    <IconEdit />\r\n                                                                </span>\r\n                                                            </Link>\r\n\r\n\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { viewSlotDetails } from \"resources/serverReq/admin/slot\";\r\n\r\nexport default function ViewSlot(props) {\r\n    const path = props.location.pathname.split(\"/\");\r\n    const id = path[path.length - 1];\r\n    const [slotData, setSlotData] = useState({})\r\n    useEffect(() => {\r\n\r\n        viewSlotDetails(id).then((res) => {\r\n\r\n            setSlotData(res?.data?.data?.slot)\r\n\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <div className=\"card-body\">\r\n                        <i className=\"fa fa-pen fa-xs edit\"></i>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Slot Name:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{slotData.name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Type:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{slotData.type}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Display Name:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{slotData.displayName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Display Type</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{slotData.displayType}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Start Time</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{slotData.startTime}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>End Time</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{slotData.endTime}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Order</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{slotData.order}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { userContext } from \"context/Provider\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\nimport { toast } from 'react-toastify';\r\nimport * as Yup from \"yup\";\r\nimport { changePassword } from '../../resources/serverReq/common';\r\n\r\nconst initialValues = {\r\n    confirmPassword: \"\",\r\n    password: \"\",\r\n    old_password: \"\"\r\n};\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    title: {\r\n        ...theme.typography.title,\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        textAlign: 'center',\r\n        margin: '20px 10px'\r\n    },\r\n    itemValue: {\r\n        color: theme.color.grayishBlue2\r\n    },\r\n    greyTitle: {\r\n        color: theme.color.grayishBlue3\r\n    },\r\n    checkboxWrapper: {\r\n        cursor: 'pointer',\r\n        marginRight: 16\r\n    },\r\n    ChangePasswordForm: {\r\n        width: '350px',\r\n        margin: 'auto',\r\n        // padding: '30px 0',\r\n        marginTop: '10%',\r\n    },\r\n    form: {\r\n        color: '#434343',\r\n        borderRadius: '1px',\r\n        marginBottom: '15px',\r\n        background: '#fff',\r\n        border: '1px solid #f3f3f3',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.3)',\r\n        padding: '30px',\r\n    },\r\n    avatar: {\r\n        color: '#fff',\r\n        margin: '0 auto 30px',\r\n        textAlign: 'center',\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '50%',\r\n        zIndex: 9,\r\n        background: 'blue',\r\n        padding: '15px',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    forgotPassword: {\r\n        float: 'right'\r\n    }\r\n}));\r\n\r\n\r\nfunction ChangePassword(props) {\r\n    const classes = useStyles();\r\n    const { user, setUser } = useContext(userContext)\r\n    const [loading, setLoading] = useState(false);\r\n    const ChangePasswordSchema = Yup.object().shape({\r\n        old_password: Yup.string()\r\n            .min(8, \"Minimum 8 symbols\")\r\n            .max(16, \"Maximum 16 symbols\")\r\n            .required(\"Required\"),\r\n        password: Yup.string()\r\n            .min(8, \"Minimum 8 symbols\")\r\n            .max(16, \"Maximum 16 symbols\")\r\n            .required(\"Required\"),\r\n        confirmPassword: Yup.string()\r\n            .min(8, \"Minimum 8 symbols\")\r\n            .max(16, \"Maximum 16 symbols\")\r\n            .required(\"Required\")\r\n            .oneOf([Yup.ref('password'), null], 'Passwords do not match')\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: ChangePasswordSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting, resetForm }) => {\r\n            enableLoading();\r\n            changePassword({ oldPassword: values.old_password, newPassword: values.password }).then((res) => {\r\n                disableLoading();\r\n                toast.success(\"Password updated successfully\", {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false,\r\n                })\r\n                resetForm();\r\n            })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className={classes.ChangePasswordForm}>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    className={classes.form}\r\n                >\r\n                    {formik.status ? (\r\n                        <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n                            <div className=\"alert-text font-weight-bold\">{formik.status}</div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            placeholder=\"Old Password\"\r\n                            type=\"password\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"old_password\"\r\n                            )}`}\r\n                            name=\"old_password\"\r\n                            {...formik.getFieldProps(\"old_password\")}\r\n                        />\r\n                        {formik.touched.old_password && formik.errors.old_password ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.old_password}</div>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"password\"\r\n                            )}`}\r\n                            name=\"password\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            placeholder=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"confirmPassword\"\r\n                            )}`}\r\n                            name=\"confirmPassword\"\r\n                            {...formik.getFieldProps(\"confirmPassword\")}\r\n                        />\r\n                        {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.confirmPassword}</div>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={formik.isSubmitting}\r\n                            className={`btn w-100 text-light`}\r\n                            style={{ background: \"#006FD8\" }}\r\n                        >\r\n                            {!loading ? 'Change Password' : <div className=\"spinner-border text-light\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangePassword;\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getCompanyAdherence(params) {\r\n    return await axios.get(\"/company/adherence\", {\r\n        params\r\n    });\r\n}\r\n\r\nexport async function getCompanyMedicineAdherence(params) {\r\n    return await axios.get(\"/company/medicine-adherence\", {\r\n        params\r\n    });\r\n}","import Loader from 'components/table/Loader';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { RangePicker } from 'react-minimal-datetime-range';\r\nimport 'react-minimal-datetime-range/lib/react-minimal-datetime-range.min.css';\r\nimport { getStates } from 'resources/serverReq/common';\r\nimport { getCompanyAdherence } from '../../../resources/serverReq/company/adherence';\r\nimport MiniCardComponent from '../../cards/MiniCardComponent';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        marginTop: 10,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nexport default function CompanyAdherence() {\r\n    const [state, setState] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [adherence, setAdherence] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const [companyOptions, setCompanyOptions] = useState([]);\r\n    const classes = useStyles();\r\n    const now = new Date();\r\n    const [date, setDate] = useState(String(now.getDate()).padStart(2, '0'));\r\n    const [month, setMonth] = useState(String(now.getMonth() + 1).padStart(2, '0'));\r\n    const [startDate, setStartDate] = useState(String(now.getDate()).padStart(2, '0'));\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [year, setYear] = useState(String(now.getFullYear()));\r\n    const [defaultDate, setDefaultDate] = useState([\r\n        year + '-' + month + '-' + date,\r\n        year + '-' + month + '-' + date\r\n    ])\r\n\r\n    const handleStateChange = (event) => {\r\n        event.preventDefault();\r\n        setState(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getStates()\r\n            .then(({ data }) => {\r\n                const states = data.data.states;\r\n                let options = [];\r\n                states.map((val) => {\r\n                    options.push({\r\n                        value: val.name,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setStateOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log('🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err', err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            state: state,\r\n            age: age,\r\n            gender: gender,\r\n            to: endDate,\r\n            from: startDate,\r\n        };\r\n\r\n        getCompanyAdherence(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data;\r\n                    setAdherence(res);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n            });\r\n    }, [state, gender, age, endDate]);\r\n\r\n    const handleDateSelected = (res) => {\r\n        console.log(\"🚀 ~ file: Adherence.js ~ line 124 ~ handleDateSelected ~ res\", res)\r\n        const start = res[0].replace(\":\", \"\").trim();\r\n        console.log(\"🚀 ~ file: Adherence.js ~ line 122 ~ handleDateSelected ~ start\", start)\r\n        const end = res[1].replace(\":\", \"\").trim();\r\n        setStartDate(start)\r\n        setEndDate(end)\r\n        setDefaultDate([start, end])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <>\r\n                    <div className='table-responsive'>\r\n                        <div className='table-wrapper'>\r\n                            <div className='table-title'>\r\n                                <div className='d-flex float-right'>\r\n                                    <div className='form-group w-15'>\r\n                                        <label className='text-dark'>State</label>\r\n                                        <select\r\n                                            placeholder='State'\r\n                                            type='state'\r\n                                            className={`select-input form-control-solid p-2`}\r\n                                            name='state'\r\n                                            onChange={handleStateChange}\r\n                                            value={state}\r\n                                        >\r\n                                            <option value=\"\">Select..</option>\r\n                                            {stateOptions.map((el) => (\r\n                                                <option key={el.value}>{el.value}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <label className='text-dark'>Gender</label>\r\n                                        <select\r\n                                            className='select-input p-2'\r\n                                            onChange={(e) => setGender(e.target.value)}\r\n                                            value={gender}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value='male'>Male</option>\r\n                                            <option value='female'>Female</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <label className='text-dark'>Age</label>\r\n                                        <select\r\n                                            className='select-input p-2'\r\n                                            onChange={(e) => setAge(e.target.value)}\r\n                                            value={age}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value='1'>&gt;70</option>\r\n                                            <option value='2'>60 to 70</option>\r\n                                            <option value='3'>50 to 60</option>\r\n                                            <option value='4'>40 to 50</option>\r\n                                            <option value='5'>&lt; 40</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex' style={{ margin: '18px' }}>\r\n                        <div className='row'>\r\n                            <RangePicker\r\n                                locale={`en-us`} // default is en-us\r\n                                show={false} // default is false\r\n                                disabled={false} // default is false\r\n                                allowPageClickToClose={true} // default is true\r\n                                placeholder={['Start Time', 'End Time']}\r\n                                defaultDates={defaultDate} // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                                initialDates={[\r\n                                    year + '-' + month + '-' + date,\r\n                                    year + '-' + month + '-' + date\r\n                                ]} // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                                onConfirm={(res) => handleDateSelected(res)}\r\n                                onClose={() => console.log('closed')}\r\n                                style={{ width: '300px', margin: '0 auto' }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex'>\r\n                        <div className='row'>\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='Patients'\r\n                                value={parseInt(adherence.bucket_100_80) + parseInt(adherence.bucket_80_50) + parseInt(adherence.bucket_50_30) + parseInt(adherence.bucket_30)}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='Avg Adherence'\r\n                                value={adherence.avg_adherence}\r\n                            />\r\n                            <div className='row'></div>\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='100% - 80 %'\r\n                                value={adherence.bucket_100_80}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='80% - 50 %'\r\n                                value={adherence.bucket_80_50}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='50% - 30%'\r\n                                value={adherence.bucket_50_30}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='< 30%'\r\n                                value={adherence.bucket_30}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import { TableColumn } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FaEye } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\nimport { getCompanyMedicineAdherence } from '../../../resources/serverReq/company/adherence';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nexport default function MedicineCompAdherence() {\r\n    let [medicineData, setMedicineData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n            sort: 1\r\n        };\r\n\r\n        getCompanyMedicineAdherence(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                setDataNotAvailable(false);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.medicines;\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    setMedicineData(res.rows);\r\n                    if (res.count == 0) setDataNotAvailable(true);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setDataNotAvailable(true);\r\n            });\r\n    }, [query, page]);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <div className='table-title'>\r\n                            <div className='d-flex align-items-center justify-content-between'>\r\n                                <span>...</span>\r\n                                <div className='search-box justify-content-end'>\r\n                                    <input\r\n                                        onChange={(event) => setQuery(event.target.value)}\r\n                                        type='text'\r\n                                        value={query}\r\n                                        className='form-control'\r\n                                        placeholder='Search&hellip;'\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn columns={['Name', 'Company', 'Count', 'Action']} />\r\n                            <tbody>\r\n                                {dataNotAvailable ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    medicineData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <p style={{ marginLeft: '15px' }}>{el.name}</p>\r\n                                            </td>\r\n                                            <td>{el.companyName}</td>\r\n                                            <td>{el.count}</td>\r\n                                            <td>\r\n                                                <div className='d-flex justify-content-center align-items-center'>\r\n                                                    <Link\r\n                                                        to={{\r\n                                                            pathname: `${SLUGS.viewMedicineAdherenceDetails}/${el.id}`,\r\n                                                            state: { title: el.name }\r\n                                                        }}\r\n                                                        style={{ padding: '6px' }}\r\n                                                        className='btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button'\r\n                                                        title='View Adherence Details'\r\n                                                    >\r\n                                                        <span className='svg-icon menu-icon mr-2 text-light'>\r\n                                                            <FaEye style={{ color: 'black' }} />\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import Loader from 'components/table/Loader';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { getMedicineAdherenceDetails } from '../../../resources/serverReq/common';\r\nimport MiniCardComponent from '../../cards/MiniCardComponent';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 20,\r\n        marginTop: 10,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\nexport default function MedicineCompAdherenceDetails(props) {\r\n    const classes = useStyles();\r\n    const path = props.location.pathname.split('/');\r\n    const id = path[path.length - 1];\r\n    const { title = 'Medicine' } = props.location.state || {};\r\n    console.log(\r\n        '🚀 ~ file: MedicineAdherenceDetails.js ~ line 53 ~ MedicineAdherenceDetails ~ title',\r\n        title\r\n    );\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [adherence, setAdherence] = useState({});\r\n\r\n    useEffect(() => {\r\n        getMedicineAdherenceDetails(id)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data;\r\n                    setAdherence(res);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='flex'>\r\n                    <h4>{title}</h4>\r\n                    <div className='row'>\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Patient'\r\n                            value={adherence.totalPatients}\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Taken'\r\n                            value={ adherence.totalOpen }\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Taken %'\r\n                            value={\r\n                                adherence.totalOpen === 0\r\n                                    ? 0\r\n                                    : (\r\n                                          (adherence.totalOpen /\r\n                                              (adherence.totalOpen + adherence.totalMissed)) *\r\n                                          100\r\n                                      ).toFixed(2)\r\n                            }\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Missed'\r\n                            value={ adherence.totalMissed }\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Missed %'\r\n                            value={\r\n                                adherence.totalMissed === 0\r\n                                    ? 0\r\n                                    : (\r\n                                          (adherence.totalMissed /\r\n                                              (adherence.totalOpen + adherence.totalMissed)) *\r\n                                          100\r\n                                      ).toFixed(2)\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getCompanyDashboard() {\r\n    return await axios.get(`/company/dashboard`);\r\n}","import {\r\n    CategoryScale, Chart as ChartJS, Legend, LinearScale, LineElement, PointElement, Title,\r\n    Tooltip\r\n} from 'chart.js';\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { Column, Row } from 'simple-flexbox';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        }\r\n    },\r\n};\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer'\r\n    },\r\n    graphContainer: {\r\n        marginTop: 24,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        width: '100%'\r\n    },\r\n    graphSection: {\r\n        padding: 24\r\n    },\r\n    graphSubtitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginTop: 4,\r\n        marginRight: 8\r\n    },\r\n    graphTitle: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.veryDarkGrayishBlue\r\n    },\r\n    legendTitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        fontWeight: '600',\r\n        color: theme.color.grayishBlue2,\r\n        marginLeft: 8\r\n    },\r\n    separator: {\r\n        backgroundColor: theme.color.lightGrayishBlue2,\r\n        width: 1,\r\n        minWidth: 1\r\n    },\r\n    statContainer: {\r\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        padding: '24px 32px 24px 32px',\r\n        height: 'calc(114px - 48px)',\r\n        '&:last-child': {\r\n            border: 'none'\r\n        }\r\n    },\r\n    stats: {\r\n        borderTop: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        width: '100%'\r\n    },\r\n    statTitle: {\r\n        fontWeight: '600',\r\n        fontSize: 16,\r\n        lineHeight: '22px',\r\n        letterSpacing: '0.3px',\r\n        textAlign: 'center',\r\n        color: theme.color.grayishBlue2,\r\n        whiteSpace: 'nowrap',\r\n        marginBottom: 6\r\n    },\r\n    statValue: {\r\n        ...theme.typography.title,\r\n        textAlign: 'center',\r\n        color: theme.color.veryDarkGrayishBlue\r\n    }\r\n}));\r\n\r\nfunction TodayTrendsComponent({ avg_adherence_open, avg_adherence_missed, active_users, timeline_data }) {\r\n    console.log(\"🚀 ~ file: TodayTrendsComponent.js ~ line 80 ~ TodayTrendsComponent ~ timeline_data\", timeline_data)\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n\r\n    const labels = timeline_data.labels;\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Adherence %',\r\n                data: timeline_data.data,\r\n                borderColor: theme.color.darkGrayishBlue,\r\n                backgroundColor: theme.color.darkGrayishBlue,\r\n            }\r\n        ],\r\n    };\r\n\r\n\r\n    function renderLegend(color, title) {\r\n        return (\r\n            <Row vertical='center'>\r\n                <div style={{ width: 16, border: '2px solid', borderColor: color }}></div>\r\n                <span className={classes.legendTitle}>{title}</span>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    function renderStat(title, value) {\r\n        return (\r\n            <Column\r\n                flexGrow={1}\r\n                className={classes.statContainer}\r\n                vertical='center'\r\n                horizontal='center'\r\n            >\r\n                <span className={classes.statTitle}>{title}</span>\r\n                <span className={classes.statValue}>{value}</span>\r\n            </Column>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Row\r\n            flexGrow={1}\r\n            className={classes.container}\r\n            horizontal='center'\r\n            breakpoints={{ 1024: 'column' }}\r\n        >\r\n            <Column\r\n                wrap\r\n                flexGrow={7}\r\n                flexBasis='735px'\r\n                className={classes.graphSection}\r\n                breakpoints={{ 1024: { width: 'calc(100% - 48px)', flexBasis: 'auto' } }}\r\n            >\r\n                <Row wrap horizontal='space-between'>\r\n                    <Column>\r\n                        <span className={classes.graphTitle}>Adherence Trend</span>\r\n                        <span className={classes.graphSubtitle}>Last 7 days</span>\r\n                    </Column>\r\n                </Row>\r\n                <div className={classes.graphContainer}>\r\n                    <Line options={options} data={data} />\r\n                </div>\r\n            </Column>\r\n            <Column className={classes.separator} breakpoints={{ 1024: { display: 'none' } }}>\r\n                <div />\r\n            </Column>\r\n            <Column flexGrow={3} flexBasis='342px' breakpoints={{ 1024: classes.stats }}>\r\n                {renderStat('Avg Total Taken', avg_adherence_open + \" %\")}\r\n                {renderStat('Avg Total Missed', avg_adherence_missed + \"%\")}\r\n                {renderStat('Active Users', active_users)}\r\n            </Column>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default TodayTrendsComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { getCompanyDashboard } from 'resources/serverReq/company/dashboard';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport MiniCardComponent from '../../cards/MiniCardComponent';\r\nimport TodayTrendsComponent from './TodayTrendsComponent';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nfunction CompanyDashboardComponent() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [data, setData] = useState({\r\n        'caretaker': 0,\r\n        'company': 0,\r\n        'company_user': 0,\r\n        'user': 0,\r\n        'doctor': 0,\r\n        'avg_adherence_missed': 0,\r\n        'avg_adherence_open': 0,\r\n        'active_users': 0,\r\n        'timeline_data': []\r\n    })\r\n    useEffect(() => {\r\n        getCompanyDashboard().then((response) => {\r\n            console.log(\"🚀 ~ file: DashboardComponent.js ~ line 61 ~ getCompanyDashboard ~ response\", response)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data\r\n                console.log(\"🚀 ~ file: DashboardComponent.js ~ line 53 ~ getCompanyDashboard ~ res\", res)\r\n                setData(res.data)\r\n                setIsLoading(false)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"🚀 ~ file: DashboardComponent.js ~ line 67 ~ getCompanyDashboard ~ err\", err)\r\n            setIsLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        !isLoading && <Column>\r\n            {console.log(\"=================\")}\r\n            <Row\r\n                className={classes.cardsContainer}\r\n                wrap\r\n                flexGrow={1}\r\n                horizontal='space-between'\r\n                breakpoints={{ 768: 'column' }}\r\n            >\r\n                <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                >\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Patients'\r\n                        value={data.user}\r\n                    />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Doctors'\r\n                        value={data.doctor}\r\n                    />\r\n                </Row>\r\n                <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                >\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Caregiver'\r\n                        value={data.caretaker}\r\n                    />\r\n\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Company user'\r\n                        value={data.company_user}\r\n                    />\r\n                </Row>\r\n            </Row>\r\n            <div className={classes.todayTrends}>\r\n                <TodayTrendsComponent avg_adherence_open={data.avg_adherence_open} avg_adherence_missed={data.avg_adherence_missed} active_users={data.active_users} timeline_data={data.timeline_data} />\r\n            </div>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default CompanyDashboardComponent;\r\n","import CompanyDashboardComponent from './CompanyDashboardComponent';\r\n\r\nexport default CompanyDashboardComponent;\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAllUsers(params) {\r\n    return await axios.get(\"/company/users\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function getAllCompanyUsers(params) {\r\n    return await axios.get(`company/company-users`, {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function getAllPatientsByDoctor(id, params) {\r\n    return await axios.get(`company/doctor/${id}/patients`, {\r\n        params\r\n    });\r\n}\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport SLUGS from 'resources/slugs'\r\nimport { getAllUsers } from \"../../../resources/serverReq/company/user\"\r\nimport SelectInput from '../../admin/SelectInput'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function CompDoctor() {\r\n    let [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"doctor\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state,\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getAllUsers(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.users\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n            }\r\n            setIsLoading(false)\r\n\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n    }, [status, query, state, page])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader setQuery={setQuery} query={query} />\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} />\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"State\", \"Status\", \"Company\", \"Patient Associated\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.firstName + \" \" + el.lastName}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td>{el.email}</td>\r\n                                                    <td>{el.gender}</td>\r\n                                                    <td>{el.phone}</td>\r\n                                                    <td>{el.city}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{el.company_associated}</td>\r\n                                                    <td>{el.patients_count}</td>\r\n                                                    <td>\r\n                                                        <TableLastChild editData={el} path={SLUGS.viewPatientDoctor + \"/\" + el.id} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { TableColumn } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport { getAllPatientsByDoctor } from \"../../../resources/serverReq/company/user\"\r\nimport SelectInput from '../../admin/SelectInput'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function CompDoctorPatient(props) {\r\n    const [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const { firstName, lastName } = props.location.state\r\n    console.log(\"🚀 ~ file: CompDoctorPatient.js ~ line 27 ~ CompDoctorPatient ~ doctorName\", firstName)\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"user\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state\r\n\r\n    };\r\n\r\n    let { id } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getAllPatientsByDoctor(id, params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data?.users\r\n                const rows = res.rows.map(u => u.patient)\r\n                setUserData(rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n    }, [status, query, state, page])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n\r\n                !isLoading ? <>\r\n                    <h4>Dr. {firstName} {lastName}</h4>\r\n                    <div className=\"table-responsive\">\r\n\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} />\r\n\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"State\", \"Status\", \"Adherence\", \"Created On\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {(el.firstName + \" \" + el.lastName).substring(0, 1) + '*'.repeat((el.firstName + \" \" + el.lastName).length - 1)}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{el.email.substring(0, 1) + '*'.repeat((el.email).length - 1)}</td>\r\n                                                    <td>{el.gender}</td>\r\n                                                    <td>{el.phone.substring(0, 1) + '*'.repeat((el.phone).length - 1)}</td>\r\n                                                    <td>{el.city}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline btn-size'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline btn-size'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{el.adherence}%</td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n                        </div>\r\n                    </div></> : <Loader />\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport SLUGS from 'resources/slugs'\r\nimport { getAllUsers } from \"../../../resources/serverReq/company/user\"\r\nimport SelectInput from '../../admin/SelectInput'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function CompPatient() {\r\n    const [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"user\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state\r\n\r\n    };\r\n    useEffect(() => {\r\n\r\n        getAllUsers(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data?.users\r\n                setUserData(res.rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n    }, [status, query, state, page])\r\n\r\n    return (\r\n        <>\r\n            {\r\n\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader setQuery={setQuery} query={query} />\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} />\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"State\", \"Status\", \"Adherence\", \"Created On\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {(el.firstName + \" \" + el.lastName).substring(0, 1) + '*'.repeat((el.firstName + \" \" + el.lastName).length - 1)}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{el.email.substring(0, 1) + '*'.repeat((el.email).length - 1)}</td>\r\n                                                    <td>{el.gender}</td>\r\n                                                    <td>{el.phone.substring(0, 1) + '*'.repeat((el.phone).length - 1)}</td>\r\n                                                    <td>{el.city}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline btn-size'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline btn-size'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{(el.adherence).toFixed(2)}%</td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n                        </div>\r\n                    </div> : <Loader />\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport ViewBtn from 'components/table/ViewBtn'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getAllCompanyUsers } from \"resources/serverReq/company/user\"\r\nimport SLUGS from 'resources/slugs'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function CompUsers(props) {\r\n    let [userData, setUserData] = useState([]);\r\n    const [totalPage, setTotalPage] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n\r\n        };\r\n\r\n        getAllCompanyUsers(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data?.users\r\n                setTotalPage(res.count)\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n\r\n        })\r\n\r\n    }, [status, query, state])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader setQuery={setQuery} query={query} />\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"state\", \"Status\", \"Created On\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                                <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                                    <img className=\"image-position symbol-round\"\r\n                                                                        src={\r\n                                                                            \"/assets/img/300_21.jpg\"\r\n                                                                        }\r\n                                                                        alt=\"pic\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <span className='p-2'>\r\n                                                                {el.firstName + \" \" + el.lastName}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                    </td>\r\n\r\n                                                    <td>{el.email}</td>\r\n                                                    <td>{el.gender}</td>\r\n                                                    <td>{el.phone}</td>\r\n                                                    <td>{el.city}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY hh:mm a')}</td>\r\n                                                    <td>\r\n                                                        <div className='d-flex'>\r\n                                                            <ViewBtn path={SLUGS.viewCompanyUser} data={el} />\r\n\r\n                                                            <TableLastChild editData={el} block={false} blockId={el.id} BlockCondition={el.status} />\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getDoctorAdherence(params) {\r\n    return await axios.get(\"/doctor/adherence\", {\r\n        params\r\n    });\r\n}\r\n\r\nexport async function getDoctorMedicineAdherence(params) {\r\n    return await axios.get(\"/doctor/medicine-adherence\", {\r\n        params\r\n    });\r\n}","import Loader from 'components/table/Loader';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { RangePicker } from 'react-minimal-datetime-range';\r\nimport 'react-minimal-datetime-range/lib/react-minimal-datetime-range.min.css';\r\nimport { getStates } from 'resources/serverReq/common';\r\nimport { getDoctorAdherence } from '../../../resources/serverReq/doctor/adherence';\r\nimport MiniCardComponent from '../../cards/MiniCardComponent';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        marginTop: 10,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nexport default function DoctorAdherence() {\r\n    const [state, setState] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [adherence, setAdherence] = useState({});\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const [companyOptions, setCompanyOptions] = useState([]);\r\n    const classes = useStyles();\r\n    const now = new Date();\r\n    const [date, setDate] = useState(String(now.getDate()).padStart(2, '0'));\r\n    const [month, setMonth] = useState(String(now.getMonth() + 1).padStart(2, '0'));\r\n    const [startDate, setStartDate] = useState(String(now.getDate()).padStart(2, '0'));\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [year, setYear] = useState(String(now.getFullYear()));\r\n    const [defaultDate, setDefaultDate] = useState([\r\n        year + '-' + month + '-' + date,\r\n        year + '-' + month + '-' + date\r\n    ])\r\n\r\n    const handleStateChange = (event) => {\r\n        event.preventDefault();\r\n        setState(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getStates()\r\n            .then(({ data }) => {\r\n                const states = data.data.states;\r\n                let options = [];\r\n                states.map((val) => {\r\n                    options.push({\r\n                        value: val.name,\r\n                        label: val.name\r\n                    });\r\n                });\r\n                setStateOptions(options);\r\n            })\r\n            .catch((err) => {\r\n                console.log('🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err', err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            state: state,\r\n            age: age,\r\n            gender: gender,\r\n            to: endDate,\r\n            from: startDate,\r\n        };\r\n\r\n        getDoctorAdherence(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data;\r\n                    setAdherence(res);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n            });\r\n    }, [state, gender, age, endDate]);\r\n\r\n    const handleDateSelected = (res) => {\r\n        console.log(\"🚀 ~ file: Adherence.js ~ line 124 ~ handleDateSelected ~ res\", res)\r\n        const start = res[0].replace(\":\", \"\").trim();\r\n        console.log(\"🚀 ~ file: Adherence.js ~ line 122 ~ handleDateSelected ~ start\", start)\r\n        const end = res[1].replace(\":\", \"\").trim();\r\n        setStartDate(start)\r\n        setEndDate(end)\r\n        setDefaultDate([start, end])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <>\r\n                    <div className='table-responsive'>\r\n                        <div className='table-wrapper'>\r\n                            <div className='table-title'>\r\n                                <div className='d-flex float-right'>\r\n                                    <div className='form-group w-15'>\r\n                                        <label className='text-dark'>State</label>\r\n                                        <select\r\n                                            placeholder='State'\r\n                                            type='state'\r\n                                            className={`select-input form-control-solid p-2`}\r\n                                            name='state'\r\n                                            onChange={handleStateChange}\r\n                                            value={state}\r\n                                        >\r\n                                            <option value=\"\">Select..</option>\r\n                                            {stateOptions.map((el) => (\r\n                                                <option key={el.value}>{el.value}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <label className='text-dark'>Gender</label>\r\n                                        <select\r\n                                            className='select-input p-2'\r\n                                            onChange={(e) => setGender(e.target.value)}\r\n                                            value={gender}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value='male'>Male</option>\r\n                                            <option value='female'>Female</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <label className='text-dark'>Age</label>\r\n                                        <select\r\n                                            className='select-input p-2'\r\n                                            onChange={(e) => setAge(e.target.value)}\r\n                                            value={age}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value='1'>&gt;70</option>\r\n                                            <option value='2'>60 to 70</option>\r\n                                            <option value='3'>50 to 60</option>\r\n                                            <option value='4'>40 to 50</option>\r\n                                            <option value='5'>&lt; 40</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex' style={{ margin: '18px' }}>\r\n                        <div className='row'>\r\n                            <RangePicker\r\n                                locale={`en-us`} // default is en-us\r\n                                show={false} // default is false\r\n                                disabled={false} // default is false\r\n                                allowPageClickToClose={true} // default is true\r\n                                placeholder={['Start Time', 'End Time']}\r\n                                defaultDates={defaultDate} // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                                initialDates={[\r\n                                    year + '-' + month + '-' + date,\r\n                                    year + '-' + month + '-' + date\r\n                                ]} // ['YYYY-MM-DD', 'YYYY-MM-DD']\r\n                                onConfirm={(res) => handleDateSelected(res)}\r\n                                onClose={() => console.log('closed')}\r\n                                style={{ width: '300px', margin: '0 auto' }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex'>\r\n                        <div className='row'>\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='Patients'\r\n                                value={parseInt(adherence.bucket_100_80) + parseInt(adherence.bucket_80_50) + parseInt(adherence.bucket_50_30) + parseInt(adherence.bucket_30)}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='Avg Adherence'\r\n                                value={adherence.avg_adherence}\r\n                            />\r\n                            <div className='row'></div>\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='100% - 80 %'\r\n                                value={adherence.bucket_100_80}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='80% - 50 %'\r\n                                value={adherence.bucket_80_50}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='50% - 30%'\r\n                                value={adherence.bucket_50_30}\r\n                            />\r\n                            <MiniCardComponent\r\n                                className={classes.miniCardContainer}\r\n                                title='< 30%'\r\n                                value={adherence.bucket_30}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import { TableColumn } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FaEye } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\nimport { getDoctorMedicineAdherence } from '../../../resources/serverReq/doctor/adherence';\r\n\r\nexport default function MedicineDocAdherence() {\r\n    let [medicineData, setMedicineData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n            sort: 1\r\n        };\r\n\r\n        getDoctorMedicineAdherence(params)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                setDataNotAvailable(false);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data.medicines;\r\n                    setPageData({\r\n                        count: res.count,\r\n                        currentPage: res.currentPage,\r\n                        totalPage: res.totalPage\r\n                    });\r\n                    setMedicineData(res.rows);\r\n                    if (res.count == 0) setDataNotAvailable(true);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setDataNotAvailable(true);\r\n            });\r\n    }, [query, page]);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='table-responsive'>\r\n                    <div className='table-wrapper'>\r\n                        <div className='table-title'>\r\n                            <div className='d-flex align-items-center justify-content-between'>\r\n                                <span>...</span>\r\n                                <div className='search-box justify-content-end'>\r\n                                    <input\r\n                                        onChange={(event) => setQuery(event.target.value)}\r\n                                        type='text'\r\n                                        value={query}\r\n                                        className='form-control'\r\n                                        placeholder='Search&hellip;'\r\n                                        autoFocus\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <table className='table table-borderless text-center'>\r\n                            <TableColumn columns={['Name', 'Company', 'Count', 'Action']} />\r\n                            <tbody>\r\n                                {dataNotAvailable ? (\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td>No Record Found</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                ) : (\r\n                                    medicineData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <p style={{ marginLeft: '15px' }}>{el.name}</p>\r\n                                            </td>\r\n                                            <td>{el.companyName}</td>\r\n                                            <td>{el.count}</td>\r\n                                            <td>\r\n                                                <div className='d-flex justify-content-center align-items-center'>\r\n                                                    <Link\r\n                                                        to={{\r\n                                                            pathname: `${SLUGS.viewMedicineAdherenceDetails}/${el.id}`,\r\n                                                            state: { title: el.name }\r\n                                                        }}\r\n                                                        style={{ padding: '6px' }}\r\n                                                        className='btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button'\r\n                                                        title='View Adherence Details'\r\n                                                    >\r\n                                                        <span className='svg-icon menu-icon mr-2 text-light'>\r\n                                                            <FaEye style={{ color: 'black' }} />\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import Loader from 'components/table/Loader';\r\nimport React ,{ useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { getMedicineAdherenceDetails } from '../../../resources/serverReq/common';\r\nimport MiniCardComponent from '../../cards/MiniCardComponent';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 20,\r\n        marginTop: 10,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\nexport default function MedicineDocAdherenceDetails(props) {\r\n    const classes = useStyles();\r\n    const path = props.location.pathname.split('/');\r\n    const id = path[path.length - 1];\r\n    const { title = 'Medicine' } = props.location.state || {};\r\n    console.log(\r\n        '🚀 ~ file: MedicineAdherenceDetails.js ~ line 53 ~ MedicineAdherenceDetails ~ title',\r\n        title\r\n    );\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [adherence, setAdherence] = useState({});\r\n\r\n    useEffect(() => {\r\n        getMedicineAdherenceDetails(id)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data;\r\n                    setAdherence(res);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <div className='flex'>\r\n                    <h4>{title}</h4>\r\n                    <div className='row'>\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Patient'\r\n                            value={adherence.totalPatients}\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Taken %'\r\n                            value={\r\n                                adherence.totalOpen === 0\r\n                                    ? 0\r\n                                    : (\r\n                                          (adherence.totalOpen /\r\n                                              (adherence.totalOpen + adherence.totalMissed)) *\r\n                                          100\r\n                                      ).toFixed(2)\r\n                            }\r\n                        />\r\n                        <MiniCardComponent\r\n                            className={classes.miniCardContainer}\r\n                            title='Total Missed %'\r\n                            value={\r\n                                adherence.totalMissed === 0\r\n                                    ? 0\r\n                                    : (\r\n                                          (adherence.totalMissed /\r\n                                              (adherence.totalOpen + adherence.totalMissed)) *\r\n                                          100\r\n                                      ).toFixed(2)\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getAllUsers(params) {\r\n    return await axios.get(\"/doctor/users\", {\r\n        params\r\n    });\r\n\r\n}\r\n\r\nexport async function getAllCaretakerUserMapping(params) {\r\n    return await axios.get(\"/doctor/caretaker-mapping\", {\r\n        params\r\n    });\r\n\r\n}\r\n","import { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport SLUGS from 'resources/slugs'\r\nimport { getAllUsers } from \"../../../resources/serverReq/doctor/user\"\r\nimport SelectInput from '../../admin/SelectInput'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function DocCaregiver() {\r\n    let [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"caretaker\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        getAllUsers(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.users\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(true)\r\n        })\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n    }, [status, query, state, page])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader setQuery={setQuery} query={query} />\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} />\r\n\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"State\", \"Status\", \"Created On\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> : userData.map((el) => (\r\n                                        <tr key={el.id}>\r\n                                            <td>\r\n                                                <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                    {/* <div className=\"d-flex align-items-start rounded-top\">\r\n                                                        <div className=\"symbol symbol-md bg-light-primary flex-shrink-0\">\r\n                                                            <img className=\"image-position symbol-round\"\r\n                                                                src={\r\n                                                                    \"/assets/img/300_21.jpg\"\r\n                                                                }\r\n                                                                alt=\"pic\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div> */}\r\n                                                    <span className='p-2'>\r\n                                                        {el.firstName + \" \" + el.lastName}\r\n\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                            </td>\r\n\r\n                                            <td>{el.email}</td>\r\n                                            <td>{el.gender}</td>\r\n                                            <td>{el.phone}</td>\r\n                                            <td>{el.city}</td>\r\n                                            <td>{el.state}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    el.status == true ?\r\n                                                        <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                                        <span className='label label-lg label-light-danger label-inline'>Inactive</span>\r\n                                                }\r\n                                            </td>\r\n                                            <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                            <td >\r\n                                                <div className='d-flex'>\r\n                                                    <TableLastChild editData={el} path={SLUGS.viewDocCaregiver} />\r\n\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n\r\n                        </div>\r\n                    </div>\r\n                    : <Loader />\r\n\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n","import { TableColumn, TableHeader } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport SLUGS from 'resources/slugs'\r\nimport { getAllCaretakerUserMapping } from \"../../../resources/serverReq/doctor/user\"\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function DocCareTakerUserMapping() {\r\n    let [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const params = {\r\n            page: page,\r\n            search: query,\r\n        };\r\n\r\n        getAllCaretakerUserMapping(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data.users\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                setUserData(res.rows)\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n\r\n    }, [query, page])\r\n\r\n\r\n    return (\r\n        <>{\r\n            !isLoading ?\r\n                <div className=\"table-responsive\">\r\n                    <div className=\"table-wrapper\">\r\n                        <div className=\"table-title\">\r\n                            <TableHeader btnTitle={false} route={SLUGS.caretakerMapping} setQuery={setQuery} query={query} />\r\n                        </div>\r\n                        <table className=\"table table-borderless text-center\">\r\n                            <TableColumn columns={[\"Patient Name\", \"Email\", \"Phone\", \"Caretaker Name\", \"Email\", \"Phone\", \"Created On\"]} />\r\n                            <tbody>\r\n                                {\r\n                                    dataNotAvailable ? <tr><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                        userData.map((el) => (\r\n                                            <tr key={el.id}>\r\n                                                <td>\r\n                                                    <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                        <span className='p-2'>\r\n                                                            {el.patient.firstName + \" \" + el.patient.lastName}\r\n\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                </td>\r\n\r\n                                                <td>{el.patient.email}</td>\r\n                                                <td>{el.patient.phone}</td>\r\n                                                <td> {el.caretaker.firstName + \" \" + el.patient.lastName}</td>\r\n                                                <td> {el.caretaker.email}</td>\r\n                                                <td> {el.caretaker.phone}</td>\r\n                                                <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                            </tbody>\r\n\r\n                        </table>\r\n                        <Pagination pageData={pageData} setPage={setPage} />\r\n                    </div>\r\n                </div> : <Loader />\r\n\r\n        }\r\n\r\n        </>\r\n    )\r\n}\r\n","import moment from 'moment';\r\nimport { default as React } from 'react';\r\n\r\nexport default function ViewDocCaregiver(props) {\r\n    const data = props.location.state\r\n    console.log(\"🚀 ~ file: PatientView.js ~ line 7 ~ PatientView ~ data\", data)\r\n    return <>\r\n\r\n        <div className=\"main\">\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <div className=\"card-body\">\r\n                        <i className=\"fa fa-pen fa-xs edit\"></i>\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.firstName + \" \" + data.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>DOB:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.dob}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email:</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Gender</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.gender}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>City</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.city}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>State</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.state}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Status</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{data.status ? <span className='label label-lg label-light-success label-inline'>Active</span> :\r\n                                        <span className='label label-lg label-light-danger label-inline'>Inactive</span>}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Created On</b></td>\r\n                                    <td>:</td>\r\n                                    <td>{moment(data.createdAt).format('DD-MMM-YY')}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </>;\r\n}","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getDoctorDashboard() {\r\n    return await axios.get(`/doctor/dashboard`);\r\n}","import {\r\n    CategoryScale, Chart as ChartJS, Legend, LinearScale, LineElement, PointElement, Title,\r\n    Tooltip\r\n} from 'chart.js';\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { Column, Row } from 'simple-flexbox';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n        }\r\n    },\r\n};\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer'\r\n    },\r\n    graphContainer: {\r\n        marginTop: 24,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        width: '100%'\r\n    },\r\n    graphSection: {\r\n        padding: 24\r\n    },\r\n    graphSubtitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginTop: 4,\r\n        marginRight: 8\r\n    },\r\n    graphTitle: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.veryDarkGrayishBlue\r\n    },\r\n    legendTitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        fontWeight: '600',\r\n        color: theme.color.grayishBlue2,\r\n        marginLeft: 8\r\n    },\r\n    separator: {\r\n        backgroundColor: theme.color.lightGrayishBlue2,\r\n        width: 1,\r\n        minWidth: 1\r\n    },\r\n    statContainer: {\r\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        padding: '24px 32px 24px 32px',\r\n        height: 'calc(114px - 48px)',\r\n        '&:last-child': {\r\n            border: 'none'\r\n        }\r\n    },\r\n    stats: {\r\n        borderTop: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        width: '100%'\r\n    },\r\n    statTitle: {\r\n        fontWeight: '600',\r\n        fontSize: 16,\r\n        lineHeight: '22px',\r\n        letterSpacing: '0.3px',\r\n        textAlign: 'center',\r\n        color: theme.color.grayishBlue2,\r\n        whiteSpace: 'nowrap',\r\n        marginBottom: 6\r\n    },\r\n    statValue: {\r\n        ...theme.typography.title,\r\n        textAlign: 'center',\r\n        color: theme.color.veryDarkGrayishBlue\r\n    }\r\n}));\r\n\r\nfunction TodayTrendsComponent({ avg_adherence_open, avg_adherence_missed, active_users, timeline_data }) {\r\n    console.log(\"🚀 ~ file: TodayTrendsComponent.js ~ line 80 ~ TodayTrendsComponent ~ timeline_data\", timeline_data)\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n\r\n    const labels = timeline_data.labels;\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Adherence %',\r\n                data: timeline_data.data,\r\n                borderColor: theme.color.darkGrayishBlue,\r\n                backgroundColor: theme.color.darkGrayishBlue,\r\n            }\r\n        ],\r\n    };\r\n\r\n\r\n    function renderLegend(color, title) {\r\n        return (\r\n            <Row vertical='center'>\r\n                <div style={{ width: 16, border: '2px solid', borderColor: color }}></div>\r\n                <span className={classes.legendTitle}>{title}</span>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    function renderStat(title, value) {\r\n        return (\r\n            <Column\r\n                flexGrow={1}\r\n                className={classes.statContainer}\r\n                vertical='center'\r\n                horizontal='center'\r\n            >\r\n                <span className={classes.statTitle}>{title}</span>\r\n                <span className={classes.statValue}>{value}</span>\r\n            </Column>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Row\r\n            flexGrow={1}\r\n            className={classes.container}\r\n            horizontal='center'\r\n            breakpoints={{ 1024: 'column' }}\r\n        >\r\n            <Column\r\n                wrap\r\n                flexGrow={7}\r\n                flexBasis='735px'\r\n                className={classes.graphSection}\r\n                breakpoints={{ 1024: { width: 'calc(100% - 48px)', flexBasis: 'auto' } }}\r\n            >\r\n                <Row wrap horizontal='space-between'>\r\n                    <Column>\r\n                        <span className={classes.graphTitle}>Adherence Trend</span>\r\n                        <span className={classes.graphSubtitle}>Last 7 days</span>\r\n                    </Column>\r\n                </Row>\r\n                <div className={classes.graphContainer}>\r\n                    <Line options={options} data={data} />\r\n                </div>\r\n            </Column>\r\n            <Column className={classes.separator} breakpoints={{ 1024: { display: 'none' } }}>\r\n                <div />\r\n            </Column>\r\n            <Column flexGrow={3} flexBasis='342px' breakpoints={{ 1024: classes.stats }}>\r\n                {renderStat('Avg Total Taken', avg_adherence_open + \" %\")}\r\n                {renderStat('Avg Total Missed', avg_adherence_missed + \"%\")}\r\n                {renderStat('Active Users', active_users)}\r\n            </Column>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default TodayTrendsComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { getDoctorDashboard } from 'resources/serverReq/doctor/dashboard';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport MiniCardComponent from '../../cards/MiniCardComponent';\r\nimport TodayTrendsComponent from './TodayTrendsComponent';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nfunction DoctorDashboardComponent() {\r\n    const classes = useStyles();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [data, setData] = useState({\r\n        'caretaker': 0,\r\n        'company': 0,\r\n        'company_user': 0,\r\n        'user': 0,\r\n        'doctor': 0,\r\n        'avg_adherence_missed': 0,\r\n        'avg_adherence_open': 0,\r\n        'active_users': 0,\r\n        'timeline_data': []\r\n    })\r\n    useEffect(() => {\r\n        getDoctorDashboard().then((response) => {\r\n            console.log(\"🚀 ~ file: DashboardComponent.js ~ line 61 ~ getCompanyDashboard ~ response\", response)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data\r\n                console.log(\"🚀 ~ file: DashboardComponent.js ~ line 53 ~ getCompanyDashboard ~ res\", res)\r\n                setData(res.data)\r\n                setIsLoading(false)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"🚀 ~ file: DashboardComponent.js ~ line 67 ~ getCompanyDashboard ~ err\", err)\r\n            setIsLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        !isLoading && <Column>\r\n\r\n            <Row\r\n                className={classes.cardsContainer}\r\n                wrap\r\n                flexGrow={1}\r\n                horizontal='space-between'\r\n                breakpoints={{ 768: 'column' }}\r\n            >\r\n                <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    breakpoints={{ 384: 'column' }}\r\n                >\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Patients'\r\n                        value={data.user}\r\n                    />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Caregiver'\r\n                        value={data.caretaker}\r\n                    />\r\n                </Row>\r\n            </Row>\r\n            <div className={classes.todayTrends}>\r\n                <TodayTrendsComponent avg_adherence_open={data.avg_adherence_open} avg_adherence_missed={data.avg_adherence_missed} active_users={data.active_users} timeline_data={data.timeline_data} />\r\n            </div>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default DoctorDashboardComponent;\r\n","import DoctorDashboardComponent from './DoctorDashboardComponent';\r\n\r\nexport default DoctorDashboardComponent;\r\n","import { IconDocument } from 'assets/icons'\r\nimport { TableColumn, TableHeader, TableLastChild } from 'components/table'\r\nimport Loader from 'components/table/Loader'\r\nimport Pagination from 'components/table/Pagination'\r\nimport moment from \"moment\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getStates } from \"resources/serverReq/common\"\r\nimport SLUGS from 'resources/slugs'\r\nimport { getAllUsers } from \"../../../resources/serverReq/doctor/user\"\r\nimport SelectInput from '../../admin/SelectInput'\r\nimport \"../../common/common.css\"\r\nimport '../../table/table.css'\r\n\r\nexport default function DocPatient() {\r\n    const [userData, setUserData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\")\r\n    const [state, setState] = useState(\"\")\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n\r\n    const params = {\r\n        page: page,\r\n        role: perPageRows,\r\n        search: query,\r\n        role: \"user\",\r\n        sort: 1,\r\n        status: status,\r\n        state: state\r\n\r\n    };\r\n    useEffect(() => {\r\n\r\n        getAllUsers(params).then((response) => {\r\n            setIsLoading(true)\r\n            setDataNotAvailable(false)\r\n            if (response?.data?.code == 200) {\r\n                const res = response?.data?.data?.users\r\n                setUserData(res.rows)\r\n                setPageData({ count: res.count, currentPage: res.currentPage, totalPage: res.totalPage })\r\n                if (res.count == 0) setDataNotAvailable(true)\r\n\r\n            }\r\n            setIsLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setIsLoading(false)\r\n            setDataNotAvailable(false)\r\n        })\r\n\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: AddPatient.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n    }, [status, query, state, page])\r\n\r\n    return (\r\n        <>\r\n            {\r\n\r\n                !isLoading ?\r\n                    <div className=\"table-responsive\">\r\n                        <div className=\"table-wrapper\">\r\n                            <div className=\"table-title\">\r\n\r\n                                <TableHeader setQuery={setQuery} query={query} />\r\n                                <SelectInput stateOptions={stateOptions} state={state} setState={setState} status={status} setStatus={setStatus} />\r\n                            </div>\r\n                            <table className=\"table table-borderless text-center\">\r\n                                <TableColumn columns={[\"Name\", \"Email\", \"Gender\", \"Mobile\", \"City\", \"State\", \"Status\", \"Adherence\", \"Created On\", \"Actions\"]} />\r\n                                <tbody>\r\n                                    {\r\n                                        dataNotAvailable ? <tr><td></td><td></td><td></td><td></td><td>No Record Found</td><td></td><td></td><td></td><td></td></tr> :\r\n                                            userData.map((el) => (\r\n                                                <tr key={el.id}>\r\n                                                    <td>\r\n                                                        <div className=\"d-flex flex-row bd-highlight p-2 \">\r\n                                                            <span className='p-2'>\r\n                                                                {el.firstName + \" \" + el.lastName}\r\n\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{el.email}</td>\r\n                                                    <td>{el.gender}</td>\r\n                                                    <td>{el.phone}</td>\r\n                                                    <td>{el.city}</td>\r\n                                                    <td>{el.state}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            el.status == true ?\r\n                                                                <span className='label label-lg label-light-success label-inline btn-size'>Active</span> :\r\n                                                                <span className='label label-lg label-light-danger label-inline btn-size'>Inactive</span>\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td>{el.adherence.toFixed(2)}%</td>\r\n                                                    <td>{moment(el.createdAt).format('DD-MMM-YY')}</td>\r\n                                                    <td >\r\n                                                        <div className='d-flex'>\r\n                                                            <Link to={{\r\n                                                                pathname: SLUGS.docPatientMedicine,\r\n                                                                state: el\r\n\r\n                                                            }}\r\n                                                                title=\"View Medicine\"\r\n                                                                className=\"btn btn-icon btn-light btn-hover-primary btn-sm svg-icon-button ml-5 btn-size mt-1\"\r\n\r\n                                                            >\r\n                                                                <span className=\"svg-icon svg-icon-sm svg-icon-primary\">\r\n                                                                    <IconDocument />\r\n                                                                </span>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <Pagination pageData={pageData} setPage={setPage} />\r\n                        </div>\r\n                    </div> : <Loader />\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { axios } from \"../axios\";\r\n\r\n\r\nexport async function getPatientsMedicine(id) {\r\n    return await axios.get(`/doctor/patient/${id}/dose`);\r\n\r\n}\r\n","import { TableColumn } from 'components/table';\r\nimport Loader from 'components/table/Loader';\r\nimport Pagination from 'components/table/Pagination';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getPatientsMedicine } from '../../../resources/serverReq/doctor/dose';\r\nimport '../../common/common.css';\r\nimport '../../table/table.css';\r\nimport PatientRow from 'components/admin/patient/PatientRow';\r\n\r\nexport default function DocPatientDose(props) {\r\n    const [medicineData, setMedicineData] = useState([]);\r\n    const [perPageRows, setPerPageRows] = useState(7);\r\n    const [page, setPage] = useState(1);\r\n    const [pageData, setPageData] = useState({});\r\n    const [dataNotAvailable, setDataNotAvailable] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const patientName = props.location.state.firstName + ' ' + props.location.state.lastName;\r\n\r\n    const patient_id = props.location.state.id;\r\n\r\n    useEffect(() => {\r\n        getPatientsMedicine(patient_id)\r\n            .then((response) => {\r\n                setIsLoading(true);\r\n                setDataNotAvailable(false);\r\n                if (response?.data?.code == 200) {\r\n                    const res = response?.data?.data?.medicines;\r\n                    setMedicineData(res);\r\n                    if (res.length == 0) setDataNotAvailable(true);\r\n                }\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setIsLoading(false);\r\n                setDataNotAvailable(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!isLoading ? (\r\n                <> \r\n                {<PatientRow medicineAdherenceDetails={medicineData} />}\r\n                </>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { Column } from 'simple-flexbox';\r\n\r\nconst useStyles = createUseStyles({\r\n    '@keyframes loadingSpin': {\r\n        from: { transform: 'rotate(0deg)' },\r\n        to: { transform: 'rotate(360deg)' }\r\n    },\r\n    container: {\r\n        backgroundColor: ({ theme, noTransparency, backgroundColor }) => {\r\n            if (backgroundColor) {\r\n                return noTransparency ? backgroundColor : `${backgroundColor}A0`;\r\n            }\r\n            return noTransparency\r\n                ? theme.color.veryDarkGrayishBlue\r\n                : `${theme.color.veryDarkGrayishBlue}A0`;\r\n        },\r\n        height: '100%',\r\n        minHeight: ({ fullScreen }) => (fullScreen ? '100vh' : '100%'),\r\n        width: ({ fullScreen }) => (fullScreen ? '100vw' : '100%'),\r\n        position: ({ fullScreen }) => (fullScreen ? 'fixed' : 'relative'),\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: ({ zIndex }) => zIndex\r\n    },\r\n    loading: {\r\n        border: ({ theme }) => `16px solid ${theme.color.lightGrayishBlue}`,\r\n        borderRadius: '50%',\r\n        borderTop: ({ theme }) => `16px solid ${theme.color.brightBlue}`,\r\n        width: 120,\r\n        height: 120,\r\n        animationName: '$loadingSpin',\r\n        animationTimingFunction: 'linear',\r\n        animationDuration: '2s',\r\n        animationIterationCount: 'infinite'\r\n    },\r\n    loadingSpan: {\r\n        color: 'white',\r\n        marginTop: 10,\r\n        fontSize: 18\r\n    }\r\n});\r\n\r\nfunction LoadingComponent({\r\n    backgroundColor,\r\n    children,\r\n    fullScreen,\r\n    height,\r\n    hideText,\r\n    loading,\r\n    noTransparency,\r\n    width,\r\n    zIndex\r\n}) {\r\n    console.log(\"🚀 ~ file: LoadingComponent.js ~ line 56 ~ loading\", loading)\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme, fullScreen, noTransparency, backgroundColor, zIndex });\r\n    return (\r\n        <div style={{ position: 'relative', height, width }}>\r\n            {loading && (\r\n                <Column className={classes.container} horizontal='center' vertical='center'>\r\n                    <div className={classes.loading}></div>\r\n                    {!hideText && <span className={classes.loadingSpan}>Loading...</span>}\r\n                </Column>\r\n            )}\r\n            {children || <div />}\r\n        </div>\r\n    );\r\n}\r\n\r\nLoadingComponent.defaultProps = {\r\n    fullScreen: true,\r\n    zIndex: 10\r\n};\r\n\r\nexport default LoadingComponent;\r\n","import LoadingComponent from './LoadingComponent';\r\n\r\nexport default LoadingComponent;\r\n","import { FormBtns } from \"components/table\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getProfileDetails, getStates, updateProfile } from \"resources/serverReq/common\";\r\nimport * as Yup from \"yup\";\r\nimport \"./common/common.css\";\r\n\r\n\r\nexport default function UpdateProfile() {\r\n    const [initialValues, setInitialValues] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        dob: new Date().toISOString().slice(0, 10),\r\n        gender: \"\",\r\n        phone: \"\",\r\n        city: \"\",\r\n        role: \"user\",\r\n        state: \"\",\r\n        reference_code: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [stateOptions, setStateOptions] = useState([]);\r\n    const userSchema = Yup.object().shape({\r\n\r\n        firstName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        lastName: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        dob: Yup.date()\r\n            .required(\"Required\"),\r\n        city: Yup.string()\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n        gender: Yup.string()\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        phone: Yup.number()\r\n            .min(10, \"Minimum 10 symbols\")\r\n            .required(\"Required\"),\r\n        state: Yup.string()\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    useEffect(() => {\r\n        getStates().then(({ data }) => {\r\n            const states = data.data.states;\r\n            let options = []\r\n            states.map(val => {\r\n                options.push({\r\n                    value: val.name,\r\n                    label: val.name\r\n                })\r\n            });\r\n            setStateOptions(options);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: UpdateProfile.js ~ line 73 ~ useEffect ~ err\", err)\r\n        });\r\n\r\n\r\n        getProfileDetails().then(({ data }) => {\r\n            const user = data.data.user;\r\n            console.log(\"🚀 ~ file: UpdateProfile.js ~ line 75 ~ getProfileDetails ~ user\", user)\r\n            setInitialValues(user);\r\n        }).catch(err => {\r\n            console.log(\"🚀 ~ file: UpdateProfile.js ~ line 77 ~ getProfileDetails ~ err\", err)\r\n        });\r\n\r\n    }, [])\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: userSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            updateProfile(values).then((res) => {\r\n                if (res?.data?.code === 200) {\r\n\r\n                    localStorage.setItem(\"firstName\", res?.data.data.user.firstName)\r\n                    localStorage.setItem(\"lastName\", res?.data.data.user.lastName)\r\n\r\n                    toast.success('Your profile has been successfully updated.')\r\n                }\r\n                disableLoading();\r\n                window.dispatchEvent(new Event(\"storage\"));\r\n                setSubmitting(false);\r\n            })\r\n                .catch((err) => {\r\n                    console.log(\"🚀 ~ file: dit-user.js ~ line 119 ~ dit-user ~ err.response\", err.response)\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage);\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className='row'>\r\n                <div className='card col-md-6 offset-md-3'>\r\n                    <div className=\"container-xl d-flex justify-content-center align-items-center\">\r\n                        <form\r\n                            onSubmit={formik.handleSubmit}\r\n\r\n                        >\r\n                            <div className='d-flex mt-5 '>\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>First Name</label>\r\n                                    <input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"firstName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"firstName\"\r\n                                        )}`}\r\n                                        name=\"firstName\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    {formik.touched.firstName && formik.errors.firstName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.firstName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Last Name</label>\r\n                                    <input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"lastName\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"lastName\"\r\n                                        )}`}\r\n                                        name=\"lastName\"\r\n                                        {...formik.getFieldProps(\"lastName\")}\r\n                                    />\r\n                                    {formik.touched.lastName && formik.errors.lastName ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.lastName}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group form-input-2 mb-3\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                        \"email\"\r\n                                    )}`}\r\n                                    name=\"email\"\r\n                                    readOnly\r\n                                    {...formik.getFieldProps(\"email\")}\r\n                                />\r\n                                {formik.touched.email && formik.errors.email ? (\r\n                                    <div>\r\n                                        <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Date of Birth</label>\r\n                                    <input\r\n                                        placeholder=\"Date of Birth\"\r\n                                        type=\"date\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"dob\"\r\n                                        )}`}\r\n                                        name=\"dob\"\r\n                                        {...formik.getFieldProps(\"dob\")}\r\n                                    />\r\n                                    {formik.touched.dob && formik.errors.dob ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.dob}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>City</label>\r\n                                    <input\r\n                                        placeholder=\"City\"\r\n                                        type=\"city\"\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"city\"\r\n                                        )}`}\r\n                                        name=\"city\"\r\n                                        {...formik.getFieldProps(\"city\")}\r\n                                    />\r\n                                    {formik.touched.city && formik.errors.city ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.city}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n\r\n\r\n                                <div className=\"form-group form-input-2 mb-3\">\r\n                                    <label>Phone</label>\r\n                                    <input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"text\" pattern=\"\\d*\" maxLength={10}\r\n                                        className={`form-control form-control-solid h-45px ${getInputClasses(\r\n                                            \"phone\"\r\n                                        )}`}\r\n                                        name=\"phone\"\r\n                                        readOnly\r\n                                        {...formik.getFieldProps(\"phone\")}\r\n                                    />\r\n                                    {formik.touched.phone && formik.errors.phone ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.phone}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n                                </div>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >Gender</label>\r\n                                    <select placeholder=\"Gender\"\r\n                                        type=\"gender\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"gender\"\r\n                                        )} p-2`}\r\n                                        name=\"gender\"\r\n                                        {...formik.getFieldProps(\"gender\")}\r\n                                    >\r\n                                        <option disabled>Select..</option>\r\n                                        <option value=\"male\" >Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                        <option value=\"other\">Other</option>\r\n                                    </select>\r\n                                    {formik.touched.gender && formik.errors.gender ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.gender}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className='d-flex'>\r\n                                <div className=\"form-group w-50\">\r\n                                    <label >State</label>\r\n                                    <select placeholder=\"State\"\r\n                                        type=\"state\"\r\n                                        className={`select-input form-control-solid ${getInputClasses(\r\n                                            \"state\"\r\n                                        )} p-2`}\r\n                                        name=\"state\"\r\n                                        {...formik.getFieldProps(\"state\")}\r\n                                    >\r\n                                        <option >Select..</option>\r\n                                        {stateOptions.map((el) => (\r\n                                            <option key={el.value} value={el.value} >{el.value}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {formik.touched.state && formik.errors.state ? (\r\n                                        <div>\r\n                                            <div className=\"fv-help-block\">{formik.errors.state}</div>\r\n                                        </div>\r\n                                    ) : null}\r\n\r\n                                </div>\r\n                            </div>\r\n                            <FormBtns formik={formik.isSubmitting} cancelRoute={\"\"} />\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n","import Adherence from 'components/admin/adherence/Adherence';\r\nimport MedicineAdherence from 'components/admin/adherence/MedicineAdherence';\r\nimport MedicineAdherenceDetails from 'components/admin/adherence/MedicineAdherenceDetails';\r\nimport AddCareTaker from 'components/admin/caretaker/AddCareTaker';\r\nimport CareTaker from 'components/admin/caretaker/CareTaker';\r\nimport CareTakerUserMapping from 'components/admin/caretaker/CareTakerUserMapping';\r\nimport CareTakerView from 'components/admin/caretaker/CareTakerView';\r\nimport EditCareTaker from 'components/admin/caretaker/EditCareTaker';\r\nimport AddCompany from 'components/admin/company/AddCompany';\r\nimport Company from 'components/admin/company/Company';\r\nimport CompanyUsers from 'components/admin/company/companyUser/CompanyUsers';\r\nimport CompanyUser from 'components/admin/company/companyUser/CreateUser';\r\nimport EditCompanyUser from 'components/admin/company/companyUser/EditCompanyUser';\r\nimport ViewCompanyUser from 'components/admin/company/companyUser/ViewCompanyUser';\r\nimport EditCompany from 'components/admin/company/EditCompany';\r\nimport Contact from 'components/admin/Contact';\r\nimport AddDevice from 'components/admin/device/AddDevice';\r\nimport AllMappedCompany from 'components/admin/device/AllMappedCompany';\r\nimport AllMappedUsers from 'components/admin/device/AllMappedUsers';\r\nimport BulkAddDevice from 'components/admin/device/BulkAddDevice';\r\nimport Device from 'components/admin/device/Device';\r\nimport EditDevice from 'components/admin/device/EditDevice';\r\nimport MapDevice from 'components/admin/device/MapDevice';\r\nimport AddDoctor from 'components/admin/doctor/AddDoctor';\r\nimport Doctor from 'components/admin/doctor/Doctor';\r\nimport DoctorPatient from 'components/admin/doctor/DoctorPatient';\r\nimport EditDoctor from 'components/admin/doctor/EditDoctor';\r\nimport CreateFeed from 'components/admin/feed/CreateFeed';\r\nimport EditFeed from 'components/admin/feed/EditFeed';\r\nimport Feeds from 'components/admin/feed/Feeds';\r\nimport ViewFeed from 'components/admin/feed/ViewFeed';\r\nimport CreateFirmware from 'components/admin/firmware/CreateFirmware';\r\nimport EditFirmware from 'components/admin/firmware/EditFirmware';\r\nimport Firmwares from 'components/admin/firmware/Firmwares';\r\nimport ViewFirmware from 'components/admin/firmware/ViewFirmware';\r\nimport AddMedicine from 'components/admin/medicine/AddMedicine';\r\nimport EditMedicine from 'components/admin/medicine/EditMedicine';\r\nimport Medicine from 'components/admin/medicine/Medicine';\r\nimport ViewMedicine from 'components/admin/medicine/ViewMedicine';\r\nimport AddPatient from 'components/admin/patient/AddPatient';\r\nimport EditPatient from 'components/admin/patient/EditPatient';\r\nimport Patient from 'components/admin/patient/Patient';\r\nimport PatientView from 'components/admin/patient/PatientView';\r\nimport SchedulePatient from 'components/admin/patient/SchedulePatient';\r\nimport AddReferenceCode from 'components/admin/reference-code/AddReferenceCode';\r\nimport ReferenceCode from 'components/admin/reference-code/ReferenceCode';\r\nimport AddSlot from 'components/admin/slot/AddSlot';\r\nimport EditSlot from 'components/admin/slot/EditSlot';\r\nimport Slot from 'components/admin/slot/Slot';\r\nimport ViewSlot from 'components/admin/slot/ViewSlot';\r\nimport ChangePassword from 'components/auth/ChangePassword';\r\nimport CompanyAdherence from 'components/company/adherence/CompanyAdherence';\r\nimport MedicineCompAdherence from 'components/company/adherence/MedicineCompAdherence';\r\nimport MedicineCompAdherenceDetails from 'components/company/adherence/MedicineCompAdherenceDetails';\r\nimport CompanyDashboardComponent from 'components/company/dashboard';\r\nimport CompDoctor from 'components/company/doctors/CompDoctor';\r\nimport CompDoctorPatient from 'components/company/doctors/CompDoctorPatient';\r\nimport CompPatient from 'components/company/patient/CompPatient';\r\nimport CompUsers from 'components/company/user/CompUsers';\r\nimport DoctorAdherence from 'components/doctors/adherence/DoctorAdherence';\r\nimport MedicineDocAdherence from 'components/doctors/adherence/MedicineDocAdherence';\r\nimport MedicineDocAdherenceDetails from 'components/doctors/adherence/MedicineDocAdherenceDetails';\r\nimport DocCaregiver from 'components/doctors/caregiver/DocCaregiver';\r\nimport DocCareTakerUserMapping from 'components/doctors/caregiver/DocCareTakerUserMapping';\r\nimport ViewDocCaregiver from 'components/doctors/caregiver/ViewDocCaregiver';\r\nimport DoctorDashboardComponent from 'components/doctors/dashboard';\r\nimport DocPatient from 'components/doctors/patient/DocPatient';\r\nimport DocPatientDose from 'components/doctors/patient/DocPatientDose';\r\nimport LoadingComponent from 'components/loading';\r\nimport UpdateProfile from 'components/UpdateProfile';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\n\r\nconst DashboardComponent = lazy(() => import('./dashboard'));\r\n\r\nfunction PrivateRoutes() {\r\n    const role = localStorage.getItem('role');\r\n\r\n    return (\r\n        <Suspense fallback={<LoadingComponent loading />}>\r\n            <Switch>\r\n                {role == 'admin' ? (\r\n                    <>\r\n                        <Route exact path={SLUGS.dashboard} component={DashboardComponent} />\r\n                        <Route exact path={SLUGS.patient} component={Patient} />\r\n                        <Route exact path={SLUGS.editPatient} component={EditPatient} />\r\n                        <Route exact path={SLUGS.schedulePatient} component={SchedulePatient} />\r\n                        <Route exact path={SLUGS.addPatient} component={AddPatient} />\r\n                        <Route exact path={SLUGS.company} component={Company} />\r\n                        <Route exact path={SLUGS.medicine} component={Medicine} />\r\n                        <Route exact path={SLUGS.slot} component={Slot} />\r\n                        <Route exact path={SLUGS.device} component={Device} />\r\n                        <Route exact path={SLUGS.doctor} component={Doctor} />\r\n                        <Route exact path={SLUGS.contact} component={Contact} />\r\n                        <Route exact path={SLUGS.addDevice} component={AddDevice} />\r\n                        <Route exact path={SLUGS.addBulkDevice} component={BulkAddDevice} />\r\n                        <Route exact path={SLUGS.editDevice} component={EditDevice} />\r\n                        <Route exact path={SLUGS.editDoctor} component={EditDoctor} />\r\n                        <Route exact path={SLUGS.addDoctor} component={AddDoctor} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewPatientDoctor + '/:id'}\r\n                            component={DoctorPatient}\r\n                        />\r\n                        <Route exact path={SLUGS.addMedicine} component={AddMedicine} />\r\n                        <Route exact path={SLUGS.editMedicine} component={EditMedicine} />\r\n                        <Route exact path={SLUGS.addSlot} component={AddSlot} />\r\n                        <Route exact path={SLUGS.editSlot} component={EditSlot} />\r\n                        <Route path={SLUGS.viewSlot} component={ViewSlot} />\r\n                        <Route path={SLUGS.viewMedicine} component={ViewMedicine} />\r\n                        <Route exact path={SLUGS.addCompany} component={AddCompany} />\r\n                        <Route exact path={SLUGS.editCompany} component={EditCompany} />\r\n                        <Route exact path={SLUGS.companyUser} component={CompanyUser} />\r\n                        <Route path={SLUGS.mapDevice} component={MapDevice} />\r\n                        <Route exact path={SLUGS.feeds} component={Feeds} />\r\n                        <Route exact path={SLUGS.createFeed} component={CreateFeed} />\r\n                        <Route exact path={SLUGS.viewFeed} component={ViewFeed} />\r\n                        <Route exact path={SLUGS.editFeed} component={EditFeed} />\r\n                        <Route exact path={SLUGS.viewPatient} component={PatientView} />\r\n                        <Route exact path={SLUGS.getCompanyUser} component={CompanyUsers} />\r\n                        <Route exact path={SLUGS.viewCompanyUser} component={ViewCompanyUser} />\r\n                        <Route exact path={SLUGS.mappedUser} component={AllMappedUsers} />\r\n                        <Route exact path={SLUGS.mappedCompany} component={AllMappedCompany} />\r\n                        <Route exact path={SLUGS.caretaker} component={CareTaker} />\r\n                        <Route exact path={SLUGS.editCareTaker} component={EditCareTaker} />\r\n                        <Route exact path={SLUGS.addCareTaker} component={AddCareTaker} />\r\n                        <Route exact path={SLUGS.viewCareTaker} component={CareTakerView} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.caretakerMapping}\r\n                            component={CareTakerUserMapping}\r\n                        />\r\n                        <Route exact path={SLUGS.editCompanyUser} component={EditCompanyUser} />\r\n                        <Route exact path={SLUGS.viewAdherence} component={Adherence} />\r\n                        <Route exact path={SLUGS.referenceCode} component={ReferenceCode} />\r\n                        <Route exact path={SLUGS.addReferenceCode} component={AddReferenceCode} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewMedicineAdherence}\r\n                            component={MedicineAdherence}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewMedicineAdherenceDetails + '/:id'}\r\n                            component={MedicineAdherenceDetails}\r\n                        />\r\n                        <Route exact path={SLUGS.firmware} component={Firmwares} />\r\n                        <Route exact path={SLUGS.createFirmware} component={CreateFirmware} />\r\n                        <Route exact path={SLUGS.viewFirmware} component={ViewFirmware} />\r\n                        <Route exact path={SLUGS.editFirmware} component={EditFirmware} />\r\n                        <Route path={SLUGS.updateProfile} component={UpdateProfile} />\r\n                        <Route path={SLUGS.changePassword} component={ChangePassword} />\r\n\r\n                        <Redirect to={SLUGS.dashboard} />\r\n                    </>\r\n                ) : role == 'company' ? (\r\n                    <>\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.compDashboard}\r\n                            component={CompanyDashboardComponent}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewCompanyAdherence}\r\n                            component={CompanyAdherence}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewCompMedicineAdherence}\r\n                            component={MedicineCompAdherence}\r\n                        />\r\n                        <Route exact path={SLUGS.compPatient} component={CompPatient} />\r\n                        <Route exact path={SLUGS.compDoctor} component={CompDoctor} />\r\n                        <Route exact path={SLUGS.compUsers} component={CompUsers} />\r\n                        <Route exact path={SLUGS.compViewPatient} component={PatientView} />\r\n                        <Route exact path={SLUGS.viewCompanyUser} component={ViewCompanyUser} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewPatientDoctor + '/:id'}\r\n                            component={CompDoctorPatient}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.compViewMedicineAdherence}\r\n                            component={MedicineCompAdherence}\r\n                        />\r\n                        <Route path={SLUGS.updateProfile} component={UpdateProfile} />\r\n                        <Route path={SLUGS.changePassword} component={ChangePassword} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewMedicineAdherenceDetails + '/:id'}\r\n                            component={MedicineCompAdherenceDetails}\r\n                        />\r\n                        <Redirect to={SLUGS.compDashboard} />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.doctorDashboard}\r\n                            component={DoctorDashboardComponent}\r\n                        />\r\n                        <Route exact path={SLUGS.viewDoctorAdherence} component={DoctorAdherence} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewDocMedicineAdherence}\r\n                            component={MedicineDocAdherence}\r\n                        />\r\n                        <Route exact path={SLUGS.docPatient} component={DocPatient} />\r\n                        <Route exact path={SLUGS.docViewPatient} component={PatientView} />\r\n                        <Route exact path={SLUGS.docCaregiver} component={DocCaregiver} />\r\n                        <Route exact path={SLUGS.viewDocCaregiver} component={ViewDocCaregiver} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.docCareTakerMapping}\r\n                            component={DocCareTakerUserMapping}\r\n                        />\r\n                        <Route exact path={SLUGS.docPatientMedicine} component={DocPatientDose} />\r\n                        <Route path={SLUGS.updateProfile} component={UpdateProfile} />\r\n                        <Route path={SLUGS.changePassword} component={ChangePassword} />\r\n                        <Route\r\n                            exact\r\n                            path={SLUGS.viewMedicineAdherenceDetails + '/:id'}\r\n                            component={MedicineDocAdherenceDetails}\r\n                        />\r\n                        <Redirect to={SLUGS.doctorDashboard} />\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default PrivateRoutes;\r\n","import HeaderComponent from 'components/header/HeaderComponent';\r\nimport { CompanySidebarComponent, DoctorSidebarComponent, SidebarComponent, SidebarContext } from 'components/sidebar';\r\nimport React from 'react';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport PrivateRoutes from './PrivateRoutes';\r\nimport \"../components/table/table.css\"\r\nconst useStyles = createUseStyles({\r\n    container: {\r\n        height: '100%',\r\n        minHeight: 850\r\n    },\r\n    mainBlock: {\r\n        marginLeft: 255,\r\n        padding: 30,\r\n        '@media (max-width: 1080px)': {\r\n            marginLeft: 0\r\n        }\r\n    },\r\n    contentBlock: {\r\n        marginTop: 54\r\n    }\r\n});\r\n\r\nfunction PrivateSection() {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const role = localStorage.getItem(\"role\")\r\n\r\n    return (\r\n        <SidebarContext>\r\n            <Row className={classes.container}>\r\n                {\r\n                    role == \"company\" ? <CompanySidebarComponent /> :\r\n                        role == \"doctor\" ? <DoctorSidebarComponent /> :\r\n                            <SidebarComponent />\r\n                }\r\n                <Column flexGrow={1} className={classes.mainBlock}>\r\n                    <HeaderComponent />\r\n                    <div className={classes.contentBlock}>\r\n                        <PrivateRoutes />\r\n                    </div>\r\n                </Column>\r\n            </Row>\r\n        </SidebarContext>\r\n    );\r\n}\r\n\r\nexport default PrivateSection;\r\n","import Axios from 'axios';\r\n\r\n\r\nexport const axios = Axios.create({\r\n    baseURL: `${process.env.REACT_APP_BASE_URL}`,\r\n    timeout: 10000,\r\n});\r\naxios.interceptors.request.use(\r\n    config => {\r\n        return config;\r\n    },\r\n    err => Promise.reject(err)\r\n);\r\n\r\nexport async function login(userLogin) {\r\n    return await axios.post(\"/login\", userLogin);\r\n\r\n}\r\nexport async function forgotPass(data) {\r\n    return await axios.post(\"/forgot-password\", data);\r\n}\r\n\r\nexport async function verifyResetToken(token) {\r\n    return await axios.get(`/reset/${token}`);\r\n}\r\n\r\nexport async function resetPassword(token, data) {\r\n    return await axios.post(`/reset/${token}`, data);\r\n}","import { userContext } from \"context/Provider\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport SLUGS from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport { login } from \"../../resources/serverReq/admin/auth\";\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    title: {\r\n        ...theme.typography.title,\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        textAlign: 'center',\r\n        margin: '20px 10px'\r\n    },\r\n    itemValue: {\r\n        color: theme.color.grayishBlue2\r\n    },\r\n    greyTitle: {\r\n        color: theme.color.grayishBlue3\r\n    },\r\n    checkboxWrapper: {\r\n        cursor: 'pointer',\r\n        marginRight: 16\r\n    },\r\n    loginForm: {\r\n        width: '350px',\r\n        margin: 'auto',\r\n        // padding: '30px 0',\r\n        marginTop: '10%',\r\n    },\r\n    form: {\r\n        color: '#434343',\r\n        borderRadius: '1px',\r\n        marginBottom: '15px',\r\n        background: '#fff',\r\n        border: '1px solid #f3f3f3',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.3)',\r\n        padding: '30px',\r\n    },\r\n    avatar: {\r\n        color: '#fff',\r\n        margin: '0 auto 30px',\r\n        textAlign: 'center',\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '50%',\r\n        zIndex: 9,\r\n        background: 'blue',\r\n        padding: '15px',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    forgotPassword: {\r\n        float: 'right'\r\n    }\r\n}));\r\n\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n    const { user, setUser } = useContext(userContext)\r\n    const [loading, setLoading] = useState(false);\r\n    const LoginSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n        password: Yup.string()\r\n            .min(8, \"Minimum 8 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: LoginSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n            const data = {\r\n                email: values.email,\r\n                password: values.password,\r\n                guard: 'web'\r\n            }\r\n\r\n            login(data).then((res) => {\r\n                const response = res?.data\r\n                if (response?.code === 200) {\r\n                    localStorage.setItem(\"token\", response?.data?.token)\r\n                    localStorage.setItem(\"firstName\", response?.data?.user?.firstName)\r\n                    localStorage.setItem(\"lastName\", response?.data?.user?.lastName)\r\n                    localStorage.setItem(\"id\", response?.data?.user?.id)\r\n                    localStorage.setItem(\"role\", response?.data?.user?.role)\r\n                    setUser(response?.data?.user)\r\n                }\r\n                disableLoading();\r\n            })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className={classes.loginForm}>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    className={classes.form}\r\n                >\r\n                    {formik.status ? (\r\n                        <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n                            <div className=\"alert-text font-weight-bold\">{formik.status}</div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"form-group mb-3\">\r\n                        <h1 className={classes.title}>Login to your account</h1>\r\n                        {/* <div className={classes.avatar}>Logo</div> */}\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n\r\n                            <img src=\"assets/img/dose-logo.png\" style={{ width: \"50%\", marginBottom: \"20px\" }} />\r\n                        </div>\r\n                        <input\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"email\"\r\n                            )}`}\r\n                            name=\"email\"\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"password\"\r\n                            )}`}\r\n                            name=\"password\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"form-group small clearfix mt-3 mb-3\">\r\n                        <label className=\"checkbox-inline\"><input type=\"checkbox\" /><small> Remember me</small></label>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `${SLUGS.forgotPassword}`\r\n                            }}\r\n                            className={classes.forgotPassword}\r\n                            id=\"kt_login_forgot\"\r\n                        >\r\n                            <small>Forgot Password?</small>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={formik.isSubmitting}\r\n                            className={`btn w-100 text-light`}\r\n                            style={{ background: \"#006FD8\" }}\r\n                        >\r\n                            {!loading ? 'Sign In' : <div className=\"spinner-border text-light\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { useFormik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\nimport { toast } from 'react-toastify';\r\nimport * as Yup from \"yup\";\r\nimport { forgotPass } from \"../../resources/serverReq/admin/auth\";\r\n\r\nconst initialValues = {\r\n    email: \"\"\r\n};\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    title: {\r\n        ...theme.typography.title,\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        textAlign: 'center',\r\n        margin: '20px 10px'\r\n    },\r\n    itemValue: {\r\n        color: theme.color.grayishBlue2\r\n    },\r\n    greyTitle: {\r\n        color: theme.color.grayishBlue3\r\n    },\r\n    checkboxWrapper: {\r\n        cursor: 'pointer',\r\n        marginRight: 16\r\n    },\r\n    forgotForm: {\r\n        width: '350px',\r\n        margin: 'auto',\r\n        // padding: '30px 0',\r\n        marginTop: '10%',\r\n    },\r\n    form: {\r\n        color: '#434343',\r\n        borderRadius: '1px',\r\n        marginBottom: '15px',\r\n        background: '#fff',\r\n        border: '1px solid #f3f3f3',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.3)',\r\n        padding: '30px',\r\n    },\r\n    avatar: {\r\n        color: '#fff',\r\n        margin: '0 auto 30px',\r\n        textAlign: 'center',\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '50%',\r\n        zIndex: 9,\r\n        background: 'blue',\r\n        padding: '15px',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    forgotPassword: {\r\n        float: 'right'\r\n    }\r\n}));\r\n\r\n\r\nfunction ForgotPassword(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const forgotSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .email(\"Wrong email format\")\r\n            .min(3, \"Minimum 3 symbols\")\r\n            .max(50, \"Maximum 50 symbols\")\r\n            .required(\"Required\"),\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: forgotSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            enableLoading();\r\n\r\n            forgotPass(values).then((res) => {\r\n                disableLoading();\r\n                toast.info(\"Email has been sent successfully\", {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false,\r\n                })\r\n            })\r\n                .catch((err) => {\r\n                    disableLoading();\r\n                    setSubmitting(false);\r\n                    const errorMessage = err.response.data.errorMessage;\r\n                    toast.error(errorMessage, {\r\n                        closeOnClick: true,\r\n                        hideProgressBar: false,\r\n                    })\r\n                });\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className={classes.forgotForm}>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    className={classes.form}\r\n                >\r\n                    {formik.status ? (\r\n                        <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n                            <div className=\"alert-text font-weight-bold\">{formik.status}</div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"form-group mb-3\">\r\n                        <h1 className={classes.title}>Forgot Password to your account</h1>\r\n                        {/* <div className={classes.avatar}>Logo</div> */}\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n\r\n                            <img src=\"assets/img/dose-logo.png\" style={{ width: \"50%\", marginBottom: \"20px\" }} />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                            <label className=\"text-muted mb-2\" style={{ fontSize: '0.8rem' }}>\r\n                                enter your registered email address\r\n                            </label>\r\n                        </div>\r\n                        <input\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"email\"\r\n                            )}`}\r\n                            name=\"email\"\r\n                            required\r\n                            {...formik.getFieldProps(\"email\")}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.email}</div>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={formik.isSubmitting}\r\n                            className={`btn w-100 text-light`}\r\n                            style={{ background: \"#006FD8\" }}\r\n                        >\r\n                            {!loading ? 'Send Mail' : <div className=\"spinner-border text-light\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import { userContext } from \"context/Provider\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { createUseStyles } from 'react-jss';\r\nimport { toast } from 'react-toastify';\r\nimport slugs from 'resources/slugs';\r\nimport * as Yup from \"yup\";\r\nimport { resetPassword, verifyResetToken } from '../../resources/serverReq/admin/auth';\r\n\r\nconst initialValues = {\r\n    confirmPassword: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    title: {\r\n        ...theme.typography.title,\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        textAlign: 'center',\r\n        margin: '20px 10px'\r\n    },\r\n    itemValue: {\r\n        color: theme.color.grayishBlue2\r\n    },\r\n    greyTitle: {\r\n        color: theme.color.grayishBlue3\r\n    },\r\n    checkboxWrapper: {\r\n        cursor: 'pointer',\r\n        marginRight: 16\r\n    },\r\n    ResetPasswordForm: {\r\n        width: '350px',\r\n        margin: 'auto',\r\n        // padding: '30px 0',\r\n        marginTop: '10%',\r\n    },\r\n    form: {\r\n        color: '#434343',\r\n        borderRadius: '1px',\r\n        marginBottom: '15px',\r\n        background: '#fff',\r\n        border: '1px solid #f3f3f3',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.3)',\r\n        padding: '30px',\r\n    },\r\n    avatar: {\r\n        color: '#fff',\r\n        margin: '0 auto 30px',\r\n        textAlign: 'center',\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '50%',\r\n        zIndex: 9,\r\n        background: 'blue',\r\n        padding: '15px',\r\n        boxShadow: '0px 2px 2px rgba(0, 0, 0, 0.1)',\r\n    },\r\n    forgotPassword: {\r\n        float: 'right'\r\n    }\r\n}));\r\n\r\n\r\nfunction ResetPassword(props) {\r\n    const { token } = props.match.params;\r\n    console.log(\"🚀 ~ file: ResetPassword.js ~ line 64 ~ ResetPassword ~ token\", token)\r\n    const classes = useStyles();\r\n    const { user, setUser } = useContext(userContext)\r\n    const [loading, setLoading] = useState(false);\r\n    const ResetPasswordSchema = Yup.object().shape({\r\n        password: Yup.string()\r\n            .min(8, \"Minimum 8 symbols\")\r\n            .max(16, \"Maximum 16 symbols\")\r\n            .required(\"Required\"),\r\n        confirmPassword: Yup.string()\r\n            .min(8, \"Minimum 8 symbols\")\r\n            .max(16, \"Maximum 16 symbols\")\r\n            .required(\"Required\")\r\n            .oneOf([Yup.ref('password'), null], 'Passwords do not match')\r\n    });\r\n\r\n    const enableLoading = () => {\r\n        setLoading(true);\r\n    };\r\n\r\n    const disableLoading = () => {\r\n        setLoading(false);\r\n    };\r\n\r\n    const getInputClasses = (fieldName) => {\r\n        if (formik.touched[fieldName] && formik.errors[fieldName]) {\r\n            return \"is-invalid\";\r\n        }\r\n\r\n        if (formik.touched[fieldName] && !formik.errors[fieldName]) {\r\n            return \"is-valid\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        verifyResetToken(token).then((res) => {\r\n        })\r\n            .catch((err) => {\r\n                const errorMessage = err.response.data.errorMessage;\r\n                toast.error(errorMessage, {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false,\r\n                })\r\n                props.history.push(slugs.login)\r\n            });\r\n\r\n    }, [])\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: ResetPasswordSchema,\r\n        onSubmit: (values, { setStatus, setSubmitting }) => {\r\n            console.log(\"🚀 ~ file: ResetPassword.js ~ line 123 ~ ResetPassword ~ values\", values)\r\n            enableLoading();\r\n            resetPassword(token, { password: values.password }).then(res => {\r\n                disableLoading();\r\n                toast.success(\"Password has been changed successfully!\", {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false,\r\n                })\r\n                props.history.push(slugs.login)\r\n\r\n            }).catch((err) => {\r\n                const errorMessage = err.response.data.errorMessage;\r\n                toast.error(errorMessage, {\r\n                    closeOnClick: true,\r\n                    hideProgressBar: false,\r\n                })\r\n                // props.history.push(slugs.login)\r\n            });\r\n\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className={classes.ResetPasswordForm}>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    className={classes.form}\r\n                >\r\n                    {formik.status ? (\r\n                        <div className=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\">\r\n                            <div className=\"alert-text font-weight-bold\">{formik.status}</div>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"form-group mb-3\">\r\n                        <h1 className={classes.title}>Reset password to your account</h1>\r\n                        {/* <div className={classes.avatar}>Logo</div> */}\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n\r\n                            <img src=\"../../assets/img/dose-logo.png\" style={{ width: \"50%\", marginBottom: \"20px\" }} />\r\n                        </div>\r\n\r\n                        <input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"password\"\r\n                            )}`}\r\n                            name=\"password\"\r\n                            {...formik.getFieldProps(\"password\")}\r\n                        />\r\n                        {formik.touched.password && formik.errors.password ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.password}</div>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <input\r\n                            placeholder=\"Confirm Password\"\r\n                            type=\"password\"\r\n                            className={`form-control form-control-solid ${getInputClasses(\r\n                                \"confirmPassword\"\r\n                            )}`}\r\n                            name=\"confirmPassword\"\r\n                            {...formik.getFieldProps(\"confirmPassword\")}\r\n                        />\r\n                        {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n                            <div>\r\n                                <div className=\"fv-help-block\">{formik.errors.confirmPassword}</div>\r\n                            </div>\r\n                        ) : null}\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={formik.isSubmitting}\r\n                            className={`btn w-100 text-light`}\r\n                            style={{ background: \"#006FD8\" }}\r\n                        >\r\n                            {!loading ? 'Reset Password' : <div className=\"spinner-border text-light\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport SLUGS from 'resources/slugs';\r\nimport Login from 'components/auth/Login';\r\nimport ForgotPassword from 'components/auth/ForgotPassword';\r\nimport ResetPassword from 'components/auth/ResetPassword';\r\n\r\nfunction PublicRoutes() {\r\n    return (\r\n        <Switch>\r\n            <Route path={SLUGS.login} component={Login} />\r\n            <Route path={SLUGS.signup} render={() => <div>signup</div>} />\r\n            <Route path={SLUGS.resetPassword} component={ResetPassword} />\r\n            <Route path={SLUGS.forgotPassword} component={ForgotPassword} />\r\n            <Redirect to={SLUGS.login} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default PublicRoutes;\r\n","import { userContext } from 'context/Provider';\r\nimport useWindowSize from 'hooks/useWindowSize';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PrivateSection from 'routes/PrivateSection';\r\nimport PublicRoutes from 'routes/PublicRoutes';\r\nfunction Routes() {\r\n    const { pathname } = useLocation();\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [width, height] = useWindowSize();\r\n    const { user, setUser } = useContext(userContext)\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    const isAuthorized = localStorage.getItem(\"token\")\r\n\r\n    const isUserLoggedIn = user || isAuthorized != null ? user || isAuthorized : false;\r\n    // return isUserLoggedIn ? <PrivateSection /> : <PrivateSection />;\r\n    return isUserLoggedIn ? <PrivateSection /> : <PublicRoutes />;\r\n}\r\n\r\nexport default Routes;\r\n","import { useLayoutEffect, useState } from 'react';\r\n\r\nexport default function useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            setSize([window.innerWidth, window.innerHeight]);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { ThemeProvider } from 'react-jss';\r\nimport Theme from 'resources/theme';\r\nimport Routes from 'routes';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Provider from 'context/Provider';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n    <Provider>\r\n        <ThemeProvider theme={Theme}>\r\n            <Router>\r\n                <Routes />\r\n                <ToastContainer\r\n                    position=\"top-right\"\r\n                    autoClose={2000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    pauseOnHover />\r\n            </Router>\r\n        </ThemeProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import Axios from 'axios';\r\nimport SLUGS from '../slugs';\r\n\r\nexport const axios = Axios.create({\r\n  baseURL: `${process.env.REACT_APP_BASE_URL}`,\r\n  timeout: 10000,\r\n});\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem(\r\n      \"token\"\r\n    )}`;\r\n    return config;\r\n  },\r\n  (err) => {\r\n    console.log(\"Something went wrong\")\r\n    return Promise.reject(err);\r\n  }\r\n);\r\naxios.interceptors.response.use(\r\n  function (res) {\r\n    return res;\r\n  },\r\n  function (error) {\r\n    const ifConnected = window.navigator.onLine;\r\n    if (!ifConnected) {\r\n\r\n      console.log(\"Your internet connection is not available\")\r\n    }\r\n    if (error.response.data === \"Invalid token\") {\r\n      localStorage.clear()\r\n      window.location.href = SLUGS.login\r\n\r\n    }\r\n\r\n    const { message } = error;\r\n    if (error.message) {\r\n      console.log(message)\r\n    } else {\r\n      console.log(\"Something went wrong\")\r\n\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n"],"sourceRoot":""}